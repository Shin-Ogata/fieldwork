{"version":3,"names":["RESULT_CODE","CDP_DECLARE","DECLARE_ERROR_CODE","getComputedStyle","safe","globalThis","getTransformMatrixValues","el","style","m11","m22","m33","m41","m42","m43","DOMMatrixReadOnly","transform","translateX","translateY","translateZ","scaleX","scaleY","scaleZ","isFunction","i18n","t","post","noop","_config","NAMESPACE","WRAPPER_CLASS","WRAPPER_SELECTOR","SCROLL_MAP_CLASS","SCROLL_MAP_SELECTOR","INACTIVE_CLASS","INACTIVE_CLASS_SELECTOR","RECYCLE_CLASS","RECYCLE_CLASS_SELECTOR","LISTITEM_BASE_CLASS","LISTITEM_BASE_CLASS_SELECTOR","DATA_PAGE_INDEX","DATA_CONTAINER_INDEX","ListViewGlobalConfig","newConfig","key","Object","keys","undefined","assign","ItemProfile","_owner","_height","_initializer","_info","_index","_pageIndex","_offset","_$base","_instance","constructor","owner","height","initializer","this","activate","prepareBaseElement","options","lineProfile","css","updatePageIndex","hide","deactivate","remove","addClass","refresh","render","isActive","updateHeight","newHeight","delta","updateScrollMapHeight","reflectAll","updateProfiles","resetDepth","baseDepth","index","updateIndex","pageIndex","offset","updateOffset","info","$base","$recycle","findRecycleElements","first","itemTagName","console","length","removeAttr","removeClass","$","$scrollMap","append","attr","String","enableTransformOffset","top","parseInt","PageProfile","_items","_status","item","push","normalize","enableAll","every","getItem","at","getItemFirst","getItemLast","status"],"sources":["cdp:///@cdp/ui-components/ui-utils/result-code-defs.ts","cdp:///@cdp/ui-components/ui-utils/ssr.ts","cdp:///@cdp/ui-components/ui-utils/css/misc.ts","cdp:///@cdp/ui-components/ui-utils/index.ts","cdp:///@cdp/ui-components/ui-forms/index.ts","cdp:///@cdp/ui-components/ui-listview/result-code-defs.ts","cdp:///@cdp/ui-components/ui-listview/global-config.ts","cdp:///@cdp/ui-components/ui-listview/profile/item.ts","cdp:///@cdp/ui-components/ui-listview/profile/page.ts","cdp:///@cdp/ui-components/ui-listview/index.ts"],"sourcesContent":["/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    export const enum CDP_KNOWN_UI_MODULE {\n        /** `@cdp/ui-utils` */\n        UTILS     = 1,\n        /** `@cdp/ui-listview` */\n        LISTVIEW  = 2,\n        /** offset for unknown ui-module */\n        OFFSET,\n    }\n\n    const enum LOCAL_CODE_BASE {\n        UI_UTILS = (CDP_KNOWN_MODULE.OFFSET + CDP_KNOWN_UI_MODULE.UTILS) * LOCAL_CODE_RANGE_GUIDE.FUNCTION,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        UI_UTILS_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_UI_UTILS_FATAL = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.UI_UTILS + 1, 'UI utils something wrong.'),\n    }\n}\n","import { safe } from '@cdp/runtime';\n\n/** @internal */ export const getComputedStyle = safe(globalThis.getComputedStyle);\n","import { getComputedStyle } from '../ssr';\n\n/**\n * @en CSS vendor prefix string definition.\n * @ja CSS ベンダープリフィックス文字列定義\n */\nexport const cssPrefixes = ['-webkit-', '-moz-', '-ms-', '-o-', ''];\n\n/**\n * @en Stores the value specified in css `transform(3d)`.\n * @ja css `transform(3d)` に指定される値を格納\n */\nexport interface TransformMatrixValues {\n    translateX: number;\n    translateY: number;\n    translateZ: number;\n    scaleX: number;\n    scaleY: number;\n    scaleZ: number;\n}\n\n/**\n * @en Get the value of the transform matrix specified in `Element`.\n * @ja `Element` に指定された transform 行列の値を取得\n *\n * @param el\n *  - `en` target `Element` instance\n *  - `ja` 対象 `Element` インスタンス\n */\nexport const getTransformMatrixValues = (el: Element): TransformMatrixValues => {\n    const style = getComputedStyle(el);\n    const { m11, m22, m33, m41, m42, m43 } = new DOMMatrixReadOnly(style.transform);\n    return {\n        translateX: m41,\n        translateY: m42,\n        translateZ: m43,\n        scaleX: m11,\n        scaleY: m22,\n        scaleZ: m33,\n    };\n};\n","import './result-code-defs';\nexport * from './css';\n\n// TODO: test\nexport const UI_UTILS_STATUS = 'UNDER CONSTRUCTION';\nimport { i18n, isFunction } from '@cdp/runtime';\nisFunction(i18n.t) &&  console.log('okok');\n","export const UI_FORMS_STATUS = 'UNDER CONSTRUCTION';\n\nimport { noop, post } from '@cdp/runtime';\n\nimport styleCore from '@css/structure.css' assert { type: 'css' };\nimport styleButton from '@css/structure-button.css' assert { type: 'css' };\nvoid post(noop(styleCore, styleButton));\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        UI_LISTVIEW = (CDP_KNOWN_MODULE.OFFSET + CDP_KNOWN_UI_MODULE.LISTVIEW) * LOCAL_CODE_RANGE_GUIDE.FUNCTION,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        UI_LISTVIEW_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_UI_LISTVIEW_INVALID_INITIALIZATION = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.UI_LISTVIEW + 1, 'listview has invalid initialization.'),\n    }\n}\n","/**\n * @en Global configuration definition for list views.\n * @ja リストビューのグローバルコンフィグレーション定義\n */\nexport interface ListViewGlobalConfig {\n    NAMESPACE: string;\n    WRAPPER_CLASS: string;\n    WRAPPER_SELECTOR: string;\n    SCROLL_MAP_CLASS: string;\n    SCROLL_MAP_SELECTOR: string;\n    INACTIVE_CLASS: string;\n    INACTIVE_CLASS_SELECTOR: string;\n    RECYCLE_CLASS: string;\n    RECYCLE_CLASS_SELECTOR: string;\n    LISTITEM_BASE_CLASS: string;\n    LISTITEM_BASE_CLASS_SELECTOR: string;\n    DATA_PAGE_INDEX: string;\n    DATA_CONTAINER_INDEX: string;\n}\n\n/** @internal */\nconst enum DefaultV {\n    NAMESPACE                    = 'cdp-ui',\n    WRAPPER_CLASS                = `${NAMESPACE}-listview-wrapper`,\n    WRAPPER_SELECTOR             = `.${WRAPPER_CLASS}`,\n    SCROLL_MAP_CLASS             = `${NAMESPACE}-listview-scroll-map`,\n    SCROLL_MAP_SELECTOR          = `.${SCROLL_MAP_CLASS}`,\n    INACTIVE_CLASS               = 'inactive',\n    INACTIVE_CLASS_SELECTOR      = `.${INACTIVE_CLASS}`,\n    RECYCLE_CLASS                = `${NAMESPACE}-listview-recycle`,\n    RECYCLE_CLASS_SELECTOR       = `.${RECYCLE_CLASS}`,\n    LISTITEM_BASE_CLASS          = `${NAMESPACE}-listview-item-base`,\n    LISTITEM_BASE_CLASS_SELECTOR = `.${LISTITEM_BASE_CLASS}`,\n    DATA_PAGE_INDEX              = `data-${NAMESPACE}-page-index`,\n    DATA_CONTAINER_INDEX         = `data-${NAMESPACE}-container-index`,\n}\n\nconst _config = {\n    NAMESPACE: DefaultV.NAMESPACE,\n    WRAPPER_CLASS: DefaultV.WRAPPER_CLASS,\n    WRAPPER_SELECTOR: DefaultV.WRAPPER_SELECTOR,\n    SCROLL_MAP_CLASS: DefaultV.SCROLL_MAP_CLASS,\n    SCROLL_MAP_SELECTOR: DefaultV.SCROLL_MAP_SELECTOR,\n    INACTIVE_CLASS: DefaultV.INACTIVE_CLASS,\n    INACTIVE_CLASS_SELECTOR: DefaultV.INACTIVE_CLASS_SELECTOR,\n    RECYCLE_CLASS: DefaultV.RECYCLE_CLASS,\n    RECYCLE_CLASS_SELECTOR: DefaultV.RECYCLE_CLASS_SELECTOR,\n    LISTITEM_BASE_CLASS: DefaultV.LISTITEM_BASE_CLASS,\n    LISTITEM_BASE_CLASS_SELECTOR: DefaultV.LISTITEM_BASE_CLASS_SELECTOR,\n    DATA_PAGE_INDEX: DefaultV.DATA_PAGE_INDEX,\n    DATA_CONTAINER_INDEX: DefaultV.DATA_CONTAINER_INDEX,\n};\n\n/**\n * @en Get/Update global configuration of list view.\n * @ja リストビューのグローバルコンフィグレーションの取得/更新\n */\nexport const ListViewGlobalConfig = (newConfig?: Partial<ListViewGlobalConfig>): ListViewGlobalConfig => {\n    if (newConfig) {\n        for (const key of Object.keys(newConfig)) {\n            if (undefined === newConfig[key as keyof ListViewGlobalConfig]) {\n                delete newConfig[key as keyof ListViewGlobalConfig];\n            }\n        }\n    }\n    return Object.assign({}, _config, newConfig);\n};\n","import {\n    UnknownObject,\n    DOM,\n    dom as $,\n} from '@cdp/runtime';\nimport { getTransformMatrixValues } from '@cdp/ui-utils';\nimport type {\n    IListContext,\n    IListItemView,\n    ListItemUpdateHeightOptions,\n} from '../interfaces';\nimport { ListViewGlobalConfig } from '../global-config';\n\n/**\n * @en A class that stores UI structure information for list items.\n * @ja リストアイテムの UI 構造情報を格納するクラス\n */\nexport class ItemProfile {\n    /** @internal */\n    private readonly _owner: IListContext;\n    /** @internal */\n    private _height: number;\n    /** @internal */\n    private readonly _initializer: new (options?: UnknownObject) => IListItemView;\n    /** @internal */\n    private readonly _info: UnknownObject;\n    /** @internal global index */\n    private _index = 0;\n    /** @internal belonging page index */\n    private _pageIndex = 0;\n    /** @internal global offset */\n    private _offset = 0;\n    /** @internal base dom instance */\n    private _$base?: DOM;\n    /** @internal IListItemView instance */\n    private _instance?: IListItemView;\n\n    /**\n     * constructor\n     *\n     * @param owner\n     *  - `en` {@link IListViewContext} instance\n     *  - `ja` {@link IListViewContext} インスタンス\n     * @param height\n     *  - `en` initial item's height\n     *  - `ja` item の初期の高さ\n     * @param initializer\n     *  - `en` constructor for {@link IListItemView}'s subclass\n     *  - `ja` {@link IListItemView} のサブクラスのコンストラクタ\n     * @param info\n     *  - `en` init parameters for {@link IListItemView}'s subclass\n     *  - `ja` {@link IListItemView} のサブクラスの初期化パラメータ\n     */\n    constructor(owner: IListContext, height: number, initializer: new (options?: UnknownObject) => IListItemView, _info: UnknownObject) {\n        this._owner       = owner;\n        this._height      = height;\n        this._initializer = initializer;\n        this._info        = _info;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public methods:\n\n    /**\n     * @en Activate of the item.\n     * @ja item の活性化\n     */\n    public activate(): void {\n        if (null == this._instance) {\n            this._$base = this.prepareBaseElement();\n            const options = Object.assign({\n                el: this._$base,\n                owner: this._owner,\n                lineProfile: this,\n            }, this._info);\n            this._instance = new this._initializer(options);\n            if ('none' === this._$base.css('display')) {\n                this._$base.css('display', 'block');\n            }\n        }\n        this.updatePageIndex();\n        if (this._$base && 'visible' !== this._$base.css('visibility')) {\n            this._$base.css('visibility', 'visible');\n        }\n    }\n\n    /**\n     * @en Make the item invisible.\n     * @ja item の不可視化\n     */\n    public hide(): void {\n        if (null == this._instance) {\n            this.activate();\n        }\n        if (this._$base && 'hidden' !== this._$base.css('visibility')) {\n            this._$base.css('visibility', 'hidden');\n        }\n    }\n\n    /**\n     * @en Deactivate of the item.\n     * @ja item の非活性化\n     */\n    public deactivate(): void {\n        if (null != this._instance) {\n            this._instance.remove();\n            this._instance = undefined;\n            this._$base?.addClass(this._config.RECYCLE_CLASS);\n            this._$base?.css('display', 'none');\n            this._$base = undefined;\n        }\n    }\n\n    /**\n     * @en Refresh the item.\n     * @ja item の更新\n     */\n    public refresh(): void {\n        if (null != this._instance) {\n            this._instance.render();\n        }\n    }\n\n    /**\n     * @en Check the activation status of the item.\n     * @ja item の活性状態判定\n     */\n    public isActive(): boolean {\n        return null != this._instance;\n    }\n\n    /**\n     * @en Update height information of the item. Called from {@link ListItemView}.\n     * @ja item の高さ情報の更新. {@link ListItemView} からコールされる。\n     */\n    public updateHeight(newHeight: number, options?: ListItemUpdateHeightOptions): void {\n        const delta = newHeight - this._height;\n        this._height = newHeight;\n        this._owner.updateScrollMapHeight(delta);\n        if (options?.reflectAll) {\n            this._owner.updateProfiles(this._index);\n        }\n    }\n\n    /**\n     * @en Reset z-index. Called from {@link ScrollManager}`.removeItem()`.\n     * @ja z-index のリセット. {@link ScrollManager}`.removeItem()` からコールされる。\n     */\n    public resetDepth(): void {\n        if (null != this._instance) {\n            this._$base?.css('z-index', this._owner.options.baseDepth);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessors:\n\n    /** Get the item's height. */\n    get height(): number {\n        return this._height;\n    }\n\n    /** Get the item's global index. */\n    get index(): number {\n        return this._index;\n    }\n\n    /** Set the item's global index. */\n    set index(index: number) {\n        this._index = index;\n        this.updateIndex();\n    }\n\n    /** Get belonging the page index. */\n    get pageIndex(): number {\n        return this._pageIndex;\n    }\n\n    /** Set belonging the page index. */\n    set pageIndex(index: number) {\n        this._pageIndex = index;\n        this.updatePageIndex();\n    }\n\n    /** Get global offset. */\n    get offset(): number {\n        return this._offset;\n    }\n\n    /** Set global offset. */\n    set offset(offset: number) {\n        this._offset = offset;\n        this.updateOffset();\n    }\n\n    /** Get init parameters. */\n    get info(): UnknownObject {\n        return this._info;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// internal:\n\n    /** @internal */\n    private get _config(): ListViewGlobalConfig {\n        return ListViewGlobalConfig();\n    }\n\n    /** @internal */\n    private prepareBaseElement(): DOM {\n        let $base: DOM;\n        const $recycle = this._owner.findRecycleElements().first();\n        const itemTagName = this._owner.options.itemTagName;\n\n        if (null != this._$base) {\n            console.warn('this._$base is not null.');\n            return this._$base;\n        }\n\n        if (0 < $recycle.length) {\n            $base = $recycle;\n            $base.removeAttr('z-index');\n            $base.removeClass(this._config.RECYCLE_CLASS);\n        } else {\n            // TODO:  見直し予定. <li> 全般は <slot> と同強調するか?\n            $base = $(`<${itemTagName} class=\"${this._config.LISTITEM_BASE_CLASS}\"></\"${itemTagName}\">`);\n            $base.css('display', 'none');\n            this._owner.$scrollMap.append($base);\n        }\n\n        // 高さの更新\n        if ($base.height() !== this._height) {\n            $base.height(this._height);\n        }\n\n        // index の設定\n        this.updateIndex();\n        // offset の更新\n        this.updateOffset();\n\n        return $base;\n    }\n\n    /** @internal */\n    private updateIndex(): void {\n        if (this._$base && this._$base.attr(this._config.DATA_CONTAINER_INDEX) !== String(this._index)) {\n            this._$base.attr(this._config.DATA_CONTAINER_INDEX, this._index);\n        }\n    }\n\n    /** @internal */\n    private updatePageIndex(): void {\n        if (this._$base && this._$base.attr(this._config.DATA_PAGE_INDEX) !== String(this._pageIndex)) {\n            this._$base.attr(this._config.DATA_PAGE_INDEX, this._pageIndex);\n        }\n    }\n\n    /** @internal */\n    private updateOffset(): void {\n        if (!this._$base) {\n            return;\n        }\n\n        if (this._owner.options.enableTransformOffset) {\n            const { translateY } = getTransformMatrixValues(this._$base[0]);\n            if (translateY !== this._offset) {\n                this._$base.css('transform', `translate3d(0,${this._offset}px,0`);\n            }\n        } else {\n            const top = parseInt(this._$base.css('top'), 10);\n            if (top !== this._offset) {\n                this._$base.css('top', `${this._offset}px`);\n            }\n        }\n    }\n}\n","import { at } from '@cdp/runtime';\nimport { ItemProfile } from './item';\n\n/**\n * @en A class that stores UI structure information for one page of the list.\n * @ja リスト1ページ分の UI 構造情報を格納するクラス\n */\nexport class PageProfile {\n    /** page index */\n    private _index = 0;\n    /** page offset from top */\n    private _offset = 0;\n    /** page's height */\n    private _height = 0;\n    /** item's profile managed with in page */\n    private _items: ItemProfile[] = [];\n    /** page status */\n    private _status: 'active' | 'inactive' | 'hidden' = 'inactive';\n\n///////////////////////////////////////////////////////////////////////\n// public methods:\n\n    /**\n     * @en Activate of the page.\n     * @ja page の活性化\n     */\n    public activate(): void {\n        if ('active' !== this._status) {\n            for (const item of this._items) {\n                item.activate();\n            }\n        }\n        this._status = 'active';\n    }\n\n    /**\n     * @en Make the page invisible.\n     * @ja page の不可視化\n     */\n    public hide(): void {\n        if ('hidden' !== this._status) {\n            for (const item of this._items) {\n                item.hide();\n            }\n        }\n        this._status = 'hidden';\n    }\n\n    /**\n     * @en Deactivate of the page.\n     * @ja page の非活性化\n     */\n    public deactivate(): void {\n        if ('inactive' !== this._status) {\n            for (const item of this._items) {\n                item.deactivate();\n            }\n        }\n        this._status = 'inactive';\n    }\n\n    /**\n     * @en Add {@link ItemProfile} to the page.\n     * @ja {@link ItemProfile} の追加\n     */\n    public push(item: ItemProfile): void {\n        this._items.push(item);\n        this._height += item.height;\n    }\n\n    /**\n     * @en If all {@link ItemProfile} under the page are not valid, disable the page's status.\n     * @ja 配下の {@link ItemProfile} すべてが有効でない場合, page ステータスを無効にする\n     */\n    public normalize(): void {\n        const enableAll = this._items.every(item => item.isActive());\n        if (!enableAll) {\n            this._status = 'inactive';\n        }\n    }\n\n    /**\n     * @en Get {@link ItemProfile} by index.\n     * @ja インデックスを指定して {@link ItemProfile} を取得\n     */\n    public getItem(index: number): ItemProfile {\n        return at(this._items, index);\n    }\n\n    /**\n     * @en Get first {@link ItemProfile}.\n     * @ja 最初の {@link ItemProfile} を取得\n     */\n    public getItemFirst(): ItemProfile {\n        return this.getItem(0);\n    }\n\n    /**\n     * @en Get last {@link ItemProfile}.\n     * @ja 最後の {@link ItemProfile} を取得\n     */\n    public getItemLast(): ItemProfile {\n        return this.getItem(this._items.length - 1);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessors:\n\n    /** Get the page index */\n    get index(): number {\n        return this._index;\n    }\n\n    /** Set the page index */\n    set index(index: number) {\n        this._index = index;\n    }\n\n    /** Get the page offset */\n    get offset(): number {\n        return this._offset;\n    }\n\n    /** Set the page offset */\n    set offset(offset: number) {\n        this._offset = offset;\n    }\n\n    /** Get the page height */\n    get height(): number {\n        return this._height;\n    }\n\n    /** Get the page status */\n    get status(): string {\n        return this._status;\n    }\n}\n","import './result-code-defs';\nexport * from './interfaces';\nexport * from './global-config';\nexport * from './profile';\n\n// TODO: test\nexport const UI_LISTVIEW_STATUS = 'UNDER CONSTRUCTION';\n"],"mappings":"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","ignoreList":[]}