{"version":3,"names":["location","safe","globalThis","document","requestAnimationFrame","requestIdleCallback","getWebDirectory","url","match","exec","webRoot","querySelector","getAttribute","href","toUrl","seed","includes","slice","async","waitFrame","frameCount","executor","Promise","_mapProvider","_mapSource","loadTemplateSource","selector","options","noCache","Object","assign","provider","queryTemplateProvider","html","request","text","template","createElement","innerHTML","fragment","content","replace","queryTemplateSource","key","context","target","source","HTMLTemplateElement","toTemplateElement","src","str","from","cloneNode","window","CustomEvent","isWindowContext","x","parent","Window","elementify","elements","trim","startsWith","endsWith","push","children","isFunction","getElementById","el","substring","body","querySelectorAll","nodeType","length","e","console","ensurePositiveNumber","value","isNumber","undefined","_scriptsAttrs","_observerMap","Map","queryObservedNode","node","observedNode","targets","has","dispatchTarget","event","nodeIn","nodeOut","delete","add","dispatchEvent","child","childNodes","dispatchAll","nodes","type","Node","ELEMENT_NODE","bubbles","cancelable","_factory","dom","utils","rootify","parse","pool","root","templates","t","roots","evaluate","code","doc","script","attr","val","setAttribute","getGlobalNamespace","head","appendChild","parentNode","removeChild","retval","detectify","observed","ownerDocument","get","connected","WeakSet","disconnected","Set","observer","MutationObserver","records","record","removedNodes","addedNodes","set","observe","childList","subtree","start","undetectify","clear","disconnect","stopAll","size","_createIterableIterator","Symbol","DOMBase","constructor","self","this","index","elem","entries","isConnected","isNode","iterator","base","pointer","next","done","keys","values","valueGenerator","current","isNodeElement","isNodeHTMLOrSVGElement","dataset","isNodeQueriable","isTypeElement","isTypeHTMLOrSVGElement","isTypeDocument","Document","isTypeWindow","isEmptySelector","isStringSelector","isNodeSelector","isDocumentSelector","isWindowSelector","isIterableSelector","nodeName","name","toLowerCase","getOffsetParent","offsetParent","$svg","$","cssProps","css","display","position","parentElement","isMultiSelectElement","multiple","isInputElement","DOMAttributes","addClass","className","classes","isArray","classList","removeClass","remove","hasClass","contains","toggleClass","force","operation","toggle","prop","isString","first","assignValue","removeAttr","String","removeAttribute","attrs","option","selectedOptions","selected","data","toTypedData","camelize","fromTypedData","removeData","props","map","k","winnow","validCallback","invalidCallback","noop","call","matches","validParentNode","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","validRetrieveNode","is","retrieveSiblings","sibling","filter","siblings","setMixClassAttribute","DOMTraversing","Math","trunc","toArray","i","previousSibling","indexOf","last","$add","elems","not","find","$selector","$target","callback","each","begin","end","eq","closest","closests","c","parents","parentsUntil","reverse","nextSiblings","nextElementSibling","nextAll","nextUntil","prev","prevSiblings","previousElementSibling","prevAll","prevUntil","contents","contentDocument","rootElement","documentElement","offsets","offset","isHTMLString","subject","toNodeSet","$dom","toNode","createTextNode","removeElement","keepListener","off","DOMManipulation","htmlString","textContent","append","appendTo","prepend","prependTo","before","insertBefore","after","nextSibling","insertAfter","wrapAll","$wrap","clone","firstElementChild","wrapInner","$el","wrap","unwrap","replaceWith","empty","firstChild","detach","newContent","createDocumentFragment","replaceAll","getDefaultView","defaultView","getComputedStyleFrom","view","getComputedStyle","toNumber","parseFloat","_resolver","width","height","getPadding","style","getPropertyValue","getBorder","getMargin","manageSizeFor","classify","manageInnerSizeFor","isTextProp","newVal","setProperty","parseOuterSizeArgs","args","includeMargin","manageOuterSizeFor","getOffsetSize","margin","getOffsetPosition","getClientRects","top","left","rect","getBoundingClientRect","scrollY","scrollX","offsetWidth","DOMStyles","dasherize","propName","removeProperty","ensureChainCaseProperies","innerWidth","innerHeight","outerWidth","outerHeight","parentOffset","marginTop","mt","marginLeft","ml","$offsetParent","borderTopWidth","borderLeftWidth","coordinates","cssTop","cssLeft","curOffset","curPosition","needCalculatePosition","_eventContextMap","eventData","WeakMap","eventListeners","liveEventListeners","queryEventData","unshift","registerEventData","normalizeEventNamespaces","namespaces","split","main","shift","sort","join","splitEventNamespaces","combos","combination","signature","namespace","ns","resolveEventNamespaces","query","cookies","signatures","cookie","getEventListenersHandlers","ensure","registered","handlers","toCookie","opts","once","JSON","stringify","extractAllHandlers","handler","proxy","extractNamespaceHandlers","names","n","namespaceFilter","_handlers","listener","parseEventArgs","capture","_noTrigger","eventShortcut","trigger","on","cloneEvent","dst","contexts","addEventListener","handleSelfEvent","eventName","permanent","fireCallBack","DOMEvents","events","handleLiveEvent","defaultPrevented","apply","handleEvent","combo","removeEventListener","origin","splice","onceHandler","eventArgs","arg","detail","transitionStart","transitionEnd","animationStart","animationEnd","hover","handlerIn","handlerOut","mouseenter","mouseleave","click","bind","dblclick","blur","focus","focusin","focusout","keyup","keydown","keypress","submit","contextmenu","change","mousedown","mousemove","mouseup","mouseout","mouseover","touchstart","touchend","touchmove","touchcancel","resize","scroll","withEvents","deep","cloneElement","srcElements","dstElements","queryTargetElement","isNodeDocument","execScroll","duration","easing","initialTop","scrollTop","initialLeft","scrollLeft","enableTop","enableLeft","notify","calcMetrics","enable","initialValue","max","new","initial","maxValue","newValue","min","metricsTop","metricsLeft","calcProgress","swing","progress","cos","PI","delta","startTime","Date","now","animate","elapse","progressCoeff","DOMScroll","scrollTo","parseArgs","_animContextMap","DOMEffects","params","result","animations","finished","resolve","anim","all","then","cancel","animation","finish","reflow","HTMLElement","offsetHeight","repaint","DOMClass","mixins","super","create","isDOMClass","setup","fn","factory","prototype","navigator","screen","devicePixelRatio","globalContext","maybeTablet","queryPlatform","info","ios","android","androidChrome","desktop","mobile","phone","tablet","iphone","iphoneX","ipod","ipad","edge","ie","firefox","macos","windows","cordova","getGlobal","electron","userAgent","ua","platform","os","standalone","screenWidth","screenHeight","pixelRatio","maxTouchPoints","regex","osVersion","supportOrientation","consoleLogger","log","output","warn","error","Logger","concreteLogger","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","moduleName","baseLogger","EventEmitter","observers","forEach","numListeners","emit","cloned","Array","numTimesAdded","defer","res","rej","promise","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","stackIndex","hasOwnProperty","obj","setPath","p","getPath","deepExtend","overwrite","regexEscape","_entityMap","escape","s","chars","looksLikeObjectPathRegExpCache","RegExpCache","capacity","regExpMap","regExpQueue","getRegExp","pattern","regExpFromCache","regExpNew","RegExp","deepFind","keySeparator","tokens","nextPath","j","getCleanedCode","ResourceStore","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","getResource","lng","addResource","silent","concat","addResources","resources","m","addResourceBundle","skipCopy","pack","removeResourceBundle","hasResourceBundle","getResourceBundle","compatibilityAPI","getDataByLanguage","hasLanguageSomeTranslations","v","toJSON","postProcessor","processors","addPostProcessor","module","handle","translator","processor","process","checkedLoadedFor","Translator","services","a","utilsCopy","changeLanguage","language","exists","interpolation","resolved","extractFromKey","nsSeparator","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","r","matched","test","ki","looksLikeObjectPath","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","appendNamespaceToCIMode","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","resType","toString","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","extendTranslation","usedDefault","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","shouldUseIntlApi","defaultValue","pluralSeparator","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","capitalize","string","charAt","toUpperCase","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","Intl","getCanonicalLocales","formattedCode","lowerCaseLng","specialCases","part","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","sets","nr","_rulesPluralsTypes","Number","nonIntlVersions","intlVersions","suffixesOrder","zero","one","two","few","many","other","PluralResolver","compatibilityJSON","PluralRules","rules","numbers","plurals","createRules","pluralRulesCache","addRule","clearCache","getRule","cleanedCode","cacheKey","rule","err","needsPlural","resolvedOptions","pluralCategories","getPluralFormsOfKey","pluralCategory1","pluralCategory2","pluralCategory","number","select","getSuffixRetroCompatible","idx","noAbs","abs","simplifyPluralSuffix","returnSuffix","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","Interpolator","format","escapeValue","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","utilsEscape","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","f","missingInterpolationHandler","todos","safeValue","todo","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","reduce","createCachedFormatter","cache","optForCache","formatParams","formatter","Formatter","formats","opt","NumberFormat","currency","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","iOpts","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","initImmediate","preload","partialBundledLanguages","ret","tDescription","transformOptions","I18n","modules","external","inst","mems","getOwnPropertyNames","getPrototypeOf","bindMemberFunctions","isInitialized","isClone","isInitializing","defOpts","getDefaults","createClassOnDemand","ClassOrObject","lu","LanguageUtils","BackendConnector","languageDetector","detection","deferred","initializedStoreOnce","loadResources","usedCallback","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","isLanguageChangingTo","setLngProps","setLng","cacheUserLanguage","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","createInstance","cloneInstance","forkResourceStore","mergedOptions","instance","i18next","i18n","RESULT_CODE","CDP_DECLARE","DECLARE_ERROR_CODE","AjaxBackend","static","_services","_options","_fallbackMap","initOptions","loadPath","fallbackResources","resolveUrl","loadUrl","json","toResult","msg","message","ERROR_AJAX_RESPONSE","cause","status","extend","domOptions","selectorAttr","targetAttr","optionsAttr","useOptionsAttr","parseDefaultValueFromContent","customTagName","extendDefault","o","insert","method","translated","translatedWithWrap","dataAttr","localize","targetSelector","$children","initializeI18N","noThrow","resourcePath","DomLocalizer","makeResult","ERROR_I18N_CORE_LAYER","getLanguage","WebStorage","_broker","EventBroker","_storage","storage","verify","Storage","kind","localStorage","getItem","dropUndefined","deserialize","setItem","oldVal","deepEqual","serialize","removeItem","cc","webStorage","dataSyncNULL","NullDataSync","sync","response","resolveURL","_methodMap","update","patch","dataSyncREST","RestDataSync","dataType","ERROR_MVC_INVALID_SYNC_PARAMS","ajax","parseContext","separator","model","isModel","idAttr","valid","id","genId","StorageDataSync","_separator","getStorage","setStorage","newStorage","setIdSeparator","newSeparator","oldSeparator","deepMerge","destroy","ERROR_MVC_INVALID_SYNC_STORAGE_DATA_NOT_FOUND","queryEntries","items","ids","ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY","saveEntries","entires","entry","old","createStorageDataSync","dataSyncSTORAGE","_default","defaultSync","newSync","oldSync","_defineAttributes","_updateAttributes","_validate","_changeHandler","_properties","RESULT_VALID_ATTRS","freeze","SUCCESS","Model","EventReceiver","_properties$3","attributes","ObservableObject","baseAttrs","prevAttrs","cid","luid","changeFired","defineProperty","_prevAttrs","_attrs","changedKeys","diff","changedAttrs","proto","enumerable","configurable","idAttribute","_baseAttrs","_changedAttrs","_cid","getBroker","hasListener","channel","channels","managed","unsubscribe","isValid","SUCCEEDED","validate","validateAttributes","FAILED","attribute","escapeHTML","setAttributes","suspend","resume","clearAttrs","deepCopy","hasChanged","isEmptyObject","changed","previous","isNew","fetch","syncMethod","resp","save","parseSaveArgs","isObject","serverAttrs","destruct","stopListening","fallback","_collator","Collator","sensitivity","numeric","getStringComparator","order","lhs","rhs","lhsProp","rhsProp","compare","getDateComparator","lhsDate","rhsDate","lhsValue","valueOf","rhsValue","getGenericComparator","getBooleanComparator","getNumberComparator","toComparator","sortKey","convertSortKeys","sortKeys","comparators","makePromise","editor","remap","getEditContext","token","ObservableArray","NOT_SUPPORTED","validOrders","orders","clearArray","appendArray","insertArray","reorderArray","work","reorders","unique","removeArray","equal","item","notEqual","greater","less","greaterEqual","lessEqual","like","toLocaleLowerCase","notLike","dateLessEqual","unit","date","computeDate","dateLessNotEqual","DynamicCondition","_operators","_combination","_sumKeys","_limit","_random","_sortKeys","seeds","operators","sumKeys","limit","random","fltr","cond","operator","searchItems","comparator","_limitCriteria","coeff","conditionalFix","condition","shuffle","criteria","limitCount","excess","total","queryFromCache","cached","baseIndex","auto","noSearch","results","ERROR_MVC_INVALID_ACCESS","tryCache","queryInfo","canCache","queryItems","ensureOptions","queryFromProvider","receivedAll","hasCond","nextOpts","_prepareModel","_removeModels","_addReference","_removeReference","_onModelEvent","ensureSortOptions","comps","modelIdAttribute","ctor","getModelId","modelConstructor","isCollectionModel","spliceArray","at","_setOptions","merge","_addOptions","Collection","EventSource","_properties$2","modelOptions","queryOptions","constructOptions","byId","initQueryInfo","collection","prevId","getChangedIds","_defaultQueryOptions","_queryInfo","release","afterFilter","models","_queryFilter","_afterFilter","filtered","_provider","_defaultParse","_lastQueryOptions","_comparators","ERROR_MVC_INVALID_COMPARATORS","parseFilterArgs","original","finalize","requery","isNullish","singular","candidate","toAdd","toMerge","toRemove","modelSet","sortable","existing","orderChanged","some","changes","added","removed","merged","resetModelStore","mdl","EventPublisher","listenTo","partial","pos2key","pos","prepare","ERROR_MVC_EDIT_PERMISSION_DENIED","indices","makeListChanged","rangeFrom","rangeTo","to","insertedTo","_initialize","_ensureElement","ViewCore","_properties$1","undelegateEvents","_tagName","tagName","drop","class","setElement","delegateEvents","hash","delegate","undelegate","View","_View","global","trustedTypes","policy","createPolicy","createHTML","boundAttributeSuffix","marker","toFixed","markerMatch","nodeMarker","d","createMarker","createComment","isPrimitive","isIterable","SPACE_CHAR","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","strings","_$litType$","svg","noChange","for","nothing","templateCache","walker","createTreeWalker","trustFromTemplateString","tsa","stringFromTSA","getTemplateHtml","attrNames","rawTextEndRegex","attrName","attrNameEndIndex","htmlResult","Template","nodeIndex","attrNameIndex","partCount","currentNode","wrapper","nextNode","hasAttributes","getAttributeNames","realName","statics","PropertyPart","BooleanAttributePart","EventPart","AttributePart","emptyScript","resolveDirective","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$initialize","_$resolve","TemplateInstance","_$parts","_$disconnectableChildren","_$template","_$parent","_$isConnected","_clone","creationScope","importNode","partIndex","templatePart","ChildPart","ElementPart","_update","_$setValue","ChildPart$1","__isConnected","startNode","endNode","_$committedValue","_$startNode","_$endNode","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","_$getTemplate","h","itemParts","itemPart","_$notifyConnectionChanged","setConnected","element","fill","valueIndex","noCommit","_commitValue","toggleAttribute","newListener","oldListener","shouldRemoveListener","passive","shouldAddListener","host","_$LH","_boundAttributeSuffix","_marker","_markerMatch","_HTML_RESULT","_getTemplateHtml","_TemplateInstance","_isIterable","_resolveDirective","_ChildPart","_AttributePart","_BooleanAttributePart","_EventPart","_PropertyPart","_ElementPart","polyfillSupport","litHtmlPolyfillSupport","litHtmlVersions","render","container","partOwnerNode","renderBefore","resolveMethodName","HTML_RESULT","overrideDirectiveResolve","directiveClass","resolveOverrideFn","_part","patchDirectiveResolve","setDirectiveClass","getAttributePartCommittedValue","committedValue","connectedDisconnectable","PartType","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","directive","_$litDirective$","Directive","_partInfo","__part","__attributeIndex","isTemplateResult","isSingleExpression","insertPart","containerPart","refPart","refNode","oldParent","parentChanged","newConnectionState","_$reparentDisconnectables","setChildPartValue","RESET_VALUE","setCommittedValue","getCommittedValue","removePart","clearPart","notifyChildrenConnectedChanged","removeDisconnectableFromParent","addDisconnectableToParent","installDisconnectAPI","reparentDisconnectables","newParent","notifyChildPartConnectedChanged","isClearingValue","fromPartIndex","AsyncDirective","isClearingDirective","reconnected","setValue","newValues","Ref","lastElementForContextAndCallback","ref","RefDirective","_ref","refChanged","_updateRefValue","_lastElementForRef","_element","_context","lastElementForCallback","PseudoWeakRef","reconnect","deref","Pauser","_promise","_resolve","pause","AsyncReplaceDirective","__weakThis","__pauser","_mapper","mapper","__value","weakThis","pauser","iterable","forAwaitOf","_this","commitValue","_index","asyncReplace","asyncAppend","AsyncAppendDirective","partInfo","__childPart","newPart","getStringsFromTemplateResult","isCompiledTemplateResult","CacheDirective","_templateCache","_valueKey","_value","vKey","partValue","childPart","cachedContainerPart","cachedPart","classMap","ClassMapDirective","classInfo","_previousClasses","_staticClasses","guard","GuardDirective","_previousValue","every","keyed","Keyed","live","LiveDirective","hasAttribute","generateMap","repeat","RepeatDirective","_getValuesAndKeys","keyFnOrTemplate","keyFn","oldParts","newKeys","_itemKeys","oldKeys","newParts","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","important","importantFlag","styleMap","StyleMapDirective","styleInfo","_previousStyleProperties","isImportant","templateContent","TemplateContentDirective","_previousTemplate","UnsafeHTMLDirective","directiveName","_templateResult","raw","resultType","unsafeHTML","UnsafeSVGDirective","unsafeSVG","isPromise","_infinity","until","UntilDirective","__lastRenderedIndex","__values","previousValues","previousLength","directives","choose","cases","defaultCase","caseValue","ifDefined","joiner","startOrEnd","step","when","trueCase","falseCase","toTemplateStringsArray","createCustom","config","strTemplate","transform","tmpl2Parse","staticParts","insertionPoints","remainingTmplStr","startIndexOfIP","delimiter","iPTransformResult","transformIP","insertionPoint","lastStaticPart","ctx","iP","transformer","transformers","transformFunction","transformVariable","ctx2Value","ctx2MustacheString","mustacheStringyfy","variable","indexOfEndDelimiter","dataKey","unsafeVariable","isMustacheFalsy","NaN","falsy","parseSection","tmplStr","indexOfStartTagEnd","endTag","indexOfEndTagStart","innerTmpl","section","parsedSection","transformedInnerTmpl","sectionData","innerCtx","invertedSection","comment","customDelimiter","originalEndDeliLength","indexOfEndTag","newStartDeli","newEndDeli","createMustacheTransformer","arg1","arg2","createTransform","unsafeVariableTransformer","sectionTransformer","invertedSectionTransformer","customDelimiterTransformer","createDefault","mustache","regCommentRemoveStart","regCommentRemoveEnd","regTrim","KEYWORDS","UNARY_OPERATORS","BINARY_OPERATORS","PRECEDENCE","_TWO_CHAR_OPS","_THREE_CHAR_OPS","Kind","precedence","_isIdentOrKeywordStart","ch","_isNumber","Tokenizer","_input","_tokenStart","_next","input","_advance","nextToken","_isQuote","_tokenizeString","_tokenizeIdentOrKeyword","_tokenizeNumber","_tokenizeDot","_tokenizeComma","_tokenizeColon","_isOperator","_tokenizeOperator","_isGrouper","_tokenizeGrouper","resetTokenStart","charCodeAt","_getValue","lookahead","_clearValue","_us","quoteChar","STRING","_match","group","KEYWORD","IDENTIFIER","INTEGER","_tokenizeFraction","DOT","COMMA","COLON","DECIMAL","op","ARROW","OPERATOR","fromCharCode","GROUPER","expr","astFactory","Parser","_kind","_tokenizer","_ast","_token","_parseExpression","_matches","_parseUnary","_parsePrecedence","_parseArguments","invoke","indexExpr","_parseIndex","right","_makeInvokeOrGetter","_parseTernary","_parseBinary","getter","receiver","binary","_parseInteger","_parseDecimal","_parsePrimary","unary","trueExpr","falseExpr","ternary","keyword","_parseInvokeOrIdentifier","_parseString","_parseParenOrFunction","_parseMap","_parseList","literal","identifier","_parseIdentifier","expressions","arrowFunction","paren","_BINARY_OPERATORS","b","_UNARY_OPERATORS","EvalAstFactory","scope","getIds","idents","_scope","property","argument","g","argValues","paramsObj","fromEntries","newScope","Proxy","expressionCache","toCamelCase","_","p1","getSingleValue","ast","expression","bindingRegex","hasEscapedBindingMarkers","unescapeBindingMarkers","defaultHandlers","if","renderers","ifAttribute","evaluateTemplate","repeatAttribute","litTemplate","getLitTemplate","itemModel","templateResult","prepareTemplate","superTemplate","templateRenderers","superLitTemplate","superRenderers","superCallRenderer","litTemplateCache","makeLitTemplate","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","elementsToRemove","templateName","templateNameIsExpression","renderer","superRenderer","superCallTemplate","attributeNames","attributeName","attributeValue","splitValue","exprs","exprText","_renderers","TEXT_NODE","textNode","newTextNode","Text","createStampinoTransformer","TypeError","_builtins","stampino","TemplateBridge","compile","_transformer","engine","jst","setTransformer","newTransformer","oldTransformer","builtins","getBuitinTransformer","_currentId","setCurrent","clearCurrent","hookSymbol","effectsSymbol","layoutEffectsSymbol","State","virtual","run","cb","_runEffects","phase","effects","effect","runEffects","runLayoutEffects","teardown","hooks","hook","schedule","scheduler","hooksWith","HookDirective","_state","_renderer","_args","_elObserved","_disconnectedHandler","redraw","elRoot","Hook","makeHook","useState","updater","makeArgs","previousValue","updaterFn","createEffect","setEffects","lastValues","_teardown","ignored1","ignored2","useEffect","useLayoutEffect","useMemo","useReducer","reducer","currentState","initialState","dispatch","action","HookContext","provide","consume","useContext","_ranEffect","with","useRef","useCallback","inputs","createContext","dist","encode","encodeURIComponent","DEFAULT_DELIMITER","TokenData","tokensToFunction","missing","decode","decodeURIComponent","pathToRegexp","decoders","NOOP_VALUE","decoder","stringifyToken","escapeText","isSafe","isNameSafe","ID_START","char","ID_CONTINUE","isNextNameSafe","DEBUG_URL","SIMPLE_TOKENS","Iter","peek","_peek","tryConsume","nextType","encodePath","it","lexer","endType","param","wildcard","open","encoders","tokenToFunction","encodeValue","encoder","extras","sensitive","trailing","sources","flags","paths","seq","flatten","sequenceToRegExp","fork","backtrack","isSafeSegmentParam","negate","path2regexp","p2rTokenData","URL","normalizeId","createData","createUncancellableDeferred","uncancellable","Deferred","assignStateElement","direct","HistoryStack","_stack","distance","array","isFirst","isLast","clearForward","candidates","toId","fromId","toIndex","fromIndex","direction","RangeError","noopStack","pushStack","replaceStack","seekStack","dispose","toRouterStackId","canParse","toRouterPath","$signature","SessionHistory","_window","_mode","_popStateHandler","_dfGo","windowContxt","mode","onPopState","prevState","oldURL","setIndex","newURL","additional","df","newId","oldId","postproc","dispatchChangeInfo","canBack","canForward","back","go","triggerEventAndWait","history","traverseTo","updateState","clearForwardHistory","promises","publish","nextState","newState","$cdp","setDispatchInfo","PopStateEvent","suppressEventListenerScope","waitPopState","ev","rollbackHistory","replaceState","st","pushState","parseDispatchInfo","oldData","newData","CancelToken","requested","reason","createSessionHistory","MemoryHistory","oldState","post","onChangeState","createMemoryHistory","toRouteContext","router","navOptions","fromNavigate","buildNavigateUrl","pathParams","ensurePathParams","toQueryStrings","ERROR_MVC_ROUTER_NAVIGATE_FAILED","ensureRouterPageInstance","route","page","component","componentOptions","ensureRouterPageTemplate","$template","ensureInstance","decideTransitionDirection","changeInfo","getEffectDurationSec","waitForEffect","durationSec","race","sleep","processPageTransition","fromClass","activeClass","toClass","RouteAyncProcessContext","_promises","register","complete","RouterContext","_routes","_history","_$el","_raf","_historyChangingHandler","_historyRefreshHandler","_errorHandler","_cssPrefix","_transitionSettings","_navigationSettings","_lastRoute","_prevRoute","_subflowTransitionParams","_inChangingPage","routes","initialPath","additionalStacks","cssPrefix","transition","navigation","ERROR_MVC_ROUTER_ELEMENT_NOT_FOUND","prepareHistory","onHistoryChanging","onHistoryRefresh","onHandleError","onAnchorClicked","pushPageStack","noNavigate","refresh","currentRoute","isInSubFlow","findSubFlowParams","prefetchParams","parentPath","nested","paramKeys","toRouteContextParameters","prefetch","setPrefetchContents","navigate","findRouteContextParams","intent","stacks","ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED","beginSubFlow","subflow","evaluateSubFlowParams","commitSubFlow","additionalDistance","cancelSubFlow","transitionSettings","newSettings","oldSettings","navigationSettings","level","releaseCacheContents","baseId","ERROR_MVC_ROUTER_INVALID_SUBFLOW_BASE_URL","makeRouteChangeInfo","asyncProcess","triggerPageCallback","NativePromise","changePage","nextRoute","prevRoute","parseUrlQuery","convertUrlParamType","parseUrlParams","pageNext","$elNext","pagePrev","$elPrev","prepareChangeContext","transitionPage","updateChangeContext","treatPrefetchContents","nextParams","prevParams","samePageInstance","cloneContent","loadContent","mountContent","fireEvents","elCache","unmountContent","customEnterFromClass","customEnterActiveClass","customEnterToClass","customLeaveFromClass","customLeaveActiveClass","customLeaveToClass","enterFromClass","enterActiveClass","enterToClass","leaveFromClass","leaveActiveClass","leaveToClass","beginTransition","endTransition","urlChanged","treatDomCacheContents","cacheLv","toRoute","toRouteChangeInfo","elRoute","ERROR_MVC_ROUTER_BUSY","isResult","preventDefault","methodOpts","createRouter","waitDocumentEventReady","_initialRoutes","Application","_router","_ready","_extension","win","routerOpts","initialize","ready","activePage","orientation","$window","extension","isCurrentPath","srcPath","curPath","splash","waitForReady","documentEventReady","documentEventBackButton","onGlobalError","onGlobalUnhandledRejection","readyState","waitDomContentLoaded","onHandleBackKey","onHandleOrientationChanged","onPageLoaded","angle","_appContext","getConfig","ERROR_APP_CONTEXT_NEED_TO_BE_INITIALIZED","clearI18NSettings","ArrayCursor","_array","_bof","_eof","initialIndex","isBOF","isEOF","moveFirst","moveLast","moveNext","movePrevious","seek","PageView","active","hasPartialClassName","_route","onPageInit","thisPage","onPageMounted","onPageCloned","prevPage","onPageBeforeEnter","onPageAfterEnter","onPageBeforeLeave","nextPage","onPageAfterLeave","onPageUnmounted","onPageRemoved","pageInit","pageMounted","pageCloned","pageBeforeEnter","pageAfterEnter","pageBeforeLeave","pageAfterLeave","pageUnmounted","pageRemoved","appendCollection","clearCollection","clearTemplateCache","defaultCollatorProvider","newProvider","oldProvider","disposeMemoryHistory","disposeSessionHistory","getTemplate","URIError","TemplateEngine","unescapeHTML","insertCollection","removeCollection","reorderCollection","resetMemoryHistory","resetSessionHistory","toTemplateString","waitIdle"],"sources":["cdp:///@cdp/lib-web/web-utils/ssr.ts","cdp:///@cdp/lib-web/web-utils/web-root.ts","cdp:///@cdp/lib-web/web-utils/wait.ts","cdp:///@cdp/lib-web/web-utils/template-loader.ts","cdp:///@cdp/lib-web/dom/ssr.ts","cdp:///@cdp/lib-web/dom/utils.ts","cdp:///@cdp/lib-web/dom/detection.ts","cdp:///@cdp/lib-web/dom/static.ts","cdp:///@cdp/lib-web/dom/base.ts","cdp:///@cdp/lib-web/dom/attributes.ts","cdp:///@cdp/lib-web/dom/traversing.ts","cdp:///@cdp/lib-web/dom/manipulation.ts","cdp:///@cdp/lib-web/dom/styles.ts","cdp:///@cdp/lib-web/dom/events.ts","cdp:///@cdp/lib-web/dom/scroll.ts","cdp:///@cdp/lib-web/dom/effects.ts","cdp:///@cdp/lib-web/dom/class.ts","cdp:///@cdp/lib-web/dom/index.ts","cdp:///@cdp/lib-web/environment/ssr.ts","cdp:///@cdp/lib-web/environment/platform.ts","cdp:///@cdp/lib-web/extension-i18n/i18next/src/logger.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/EventEmitter.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/utils.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/ResourceStore.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/postProcessor.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/Translator.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/LanguageUtils.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/PluralResolver.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/Interpolator.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/Formatter.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/BackendConnector.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/defaults.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/i18next.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/index.js","cdp:///@cdp/lib-web/extension-i18n/index.ts","cdp:///@cdp/lib-web/i18n/result-code-defs.ts","cdp:///@cdp/lib-web/i18n/ssr.ts","cdp:///@cdp/lib-web/i18n/plugin/ajax-backend.ts","cdp:///@cdp/lib-web/i18n/plugin/dom-localizer.ts","cdp:///@cdp/lib-web/i18n/core.ts","cdp:///@cdp/lib-web/web-storage/web-storage.ts","cdp:///@cdp/lib-web/data-sync/result-code-defs.ts","cdp:///@cdp/lib-web/data-sync/null.ts","cdp:///@cdp/lib-web/data-sync/internal.ts","cdp:///@cdp/lib-web/data-sync/rest.ts","cdp:///@cdp/lib-web/data-sync/storage.ts","cdp:///@cdp/lib-web/data-sync/settings.ts","cdp:///@cdp/lib-web/model/result-code-defs.ts","cdp:///@cdp/lib-web/model/base.ts","cdp:///@cdp/lib-web/collection/result-code-defs.ts","cdp:///@cdp/lib-web/collection/utils/comparator.ts","cdp:///@cdp/lib-web/collection/utils/array-editor.ts","cdp:///@cdp/lib-web/collection/query/dynamic-filters.ts","cdp:///@cdp/lib-web/collection/query/dynamic-condition.ts","cdp:///@cdp/lib-web/collection/query/query.ts","cdp:///@cdp/lib-web/collection/base.ts","cdp:///@cdp/lib-web/collection/collection-editor.ts","cdp:///@cdp/lib-web/view/ssr.ts","cdp:///@cdp/lib-web/view/base.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/lit-html.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/private-ssr-support.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directive.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directive-helpers.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/async-directive.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/ref.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/private-async-helpers.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/async-replace.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/async-append.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/cache.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/class-map.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/guard.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/keyed.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/live.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/repeat.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/style-map.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/template-content.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/unsafe-html.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/unsafe-svg.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/until.ts","cdp:///@cdp/lib-web/extension-template/index.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/choose.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/if-defined.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/join.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/map.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/range.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/when.ts","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/lit-transformer.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/helper/dataHelper.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/variableTransformer.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/unsafeVariable.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/helper/isMustacheFalsy.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/helper/sectionHelper.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/section.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/invertedSection.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/comment.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/customDelimiter.js","cdp:///@cdp/lib-web/extension-template-bridge/bridge-mustache.ts","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/lit-transformer-configuredOutOfTheBox.js","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/constants.ts","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/tokenizer.ts","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/parser.ts","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/eval.ts","cdp:///@cdp/lib-web/extension-template-bridge/stampino/src/stampino.ts","cdp:///@cdp/lib-web/extension-template-bridge/bridge-stampino.ts","cdp:///@cdp/lib-web/template/bridge.ts","cdp:///@cdp/lib-web/template/hooks/current.ts","cdp:///@cdp/lib-web/template/hooks/symbols.ts","cdp:///@cdp/lib-web/template/hooks/state.ts","cdp:///@cdp/lib-web/template/hooks/directive.ts","cdp:///@cdp/lib-web/template/hooks/hook.ts","cdp:///@cdp/lib-web/template/hooks/use-state.ts","cdp:///@cdp/lib-web/template/hooks/create-effect.ts","cdp:///@cdp/lib-web/template/hooks/use-effect.ts","cdp:///@cdp/lib-web/template/hooks/use-layout-effect.ts","cdp:///@cdp/lib-web/template/hooks/use-memo.ts","cdp:///@cdp/lib-web/template/hooks/use-reducer.ts","cdp:///@cdp/lib-web/template/hooks/create-context.ts","cdp:///@cdp/lib-web/template/hooks/use-context.ts","cdp:///@cdp/lib-web/template/hooks/index.ts","cdp:///@cdp/lib-web/template/hooks/use-ref.ts","cdp:///@cdp/lib-web/template/hooks/use-callback.ts","cdp:///@cdp/lib-web/extension-path2regexp/path-to-regexp/src/index.ts","cdp:///@cdp/lib-web/extension-path2regexp/index.ts","cdp:///@cdp/lib-web/router/result-code-defs.ts","cdp:///@cdp/lib-web/router/ssr.ts","cdp:///@cdp/lib-web/router/history/internal.ts","cdp:///@cdp/lib-web/router/utils.ts","cdp:///@cdp/lib-web/router/history/session.ts","cdp:///@cdp/lib-web/router/history/memory.ts","cdp:///@cdp/lib-web/router/router/internal.ts","cdp:///@cdp/lib-web/router/router/async-process.ts","cdp:///@cdp/lib-web/router/router/core.ts","cdp:///@cdp/lib-web/app/result-code-defs.ts","cdp:///@cdp/lib-web/app/ssr.ts","cdp:///@cdp/lib-web/app/internal.ts","cdp:///@cdp/lib-web/app/context.ts","cdp:///@cdp/lib-web/app/page-view.ts","cdp:///@cdp/lib-web/collection/utils/array-cursor.ts","cdp:///@cdp/lib-web/template/loader.ts"],"sourcesContent":["import { safe } from '@cdp/core-utils';\n\n/** @internal */ export const location              = safe(globalThis.location);\n/** @internal */ export const document              = safe(globalThis.document);\n/** @internal */ export const requestAnimationFrame = safe(globalThis.requestAnimationFrame);\n/** @internal */ export const requestIdleCallback   = safe(globalThis.requestIdleCallback);\n","import { location, document } from './ssr';\n\n/**\n * @en Get the directory to which `url` belongs.\n * @ja 指定 `url` の所属するディレクトリを取得\n *\n * @param url\n *  - `en` target URL\n *  - `ja` 対象の URL\n */\nexport const getWebDirectory = (url: string): string => {\n    const match = /^(([^?#]+)\\/)([\\S]*)?$/.exec(url);\n    return match?.[1] ?? '';\n};\n\n/**\n * @en Accsessor for Web root location <br>\n *     Only the browser environment will be an allocating place in index.html, and becomes effective.\n * @ja Web root location へのアクセス <br>\n *     index.html の配置場所となり、ブラウザ環境のみ有効となる.\n */\nexport const webRoot: string = getWebDirectory(document.querySelector('base')?.getAttribute('href') ?? location.href);\n\n/**\n * @en Convert to an absolute url string if given a relative path. <br>\n *     If you want to access to Assets and in spite of the script location, the function is available.\n * @ja 相対パスが指定されている場合は、絶対URL文字列に変換 <br>\n *     js の配置に依存することなく `assets` アクセスしたいときに使用する.\n *\n * @see https://stackoverflow.com/questions/2188218/relative-paths-in-javascript-in-an-external-file\n *\n * @example <br>\n *\n * ```ts\n *  console.log(toUrl('/res/data/collection.json'));\n *  // \"http://localhost:8080/app/res/data/collection.json\"\n * ```\n *\n * @param seed\n *  - `en` set relative path from {@link webRoot}.\n *  - `ja` {@link webRoot} からの相対パスを指定\n */\nexport const toUrl = (seed: string): string => {\n    if (seed?.includes('://')) {\n        return seed;\n    } else if (null != seed?.[0]) {\n        return ('/' === seed[0]) ? webRoot + seed.slice(1) : webRoot + seed;\n    } else {\n        return webRoot;\n    }\n};\n","import type { UnknownFunction } from '@cdp/core-utils';\nimport { requestAnimationFrame, requestIdleCallback } from './ssr';\n\n/**\n * @en Get the timing that does not block the rendering process etc.\n * @ja レンダリング処理等をブロックしないタイミングを取得\n *\n * @example <br>\n *\n * ```ts\n *  await waitFrame();\n * ```\n *\n * @param frameCount\n *  - `en` wait frame count.\n *  - `ja` 処理待ちを行うフレーム数\n * @param executor\n *  - `en` wait frame executor.\n *  - `ja` 処理待ちを行う実行関数\n */\nexport async function waitFrame(frameCount = 1, executor: UnknownFunction = requestAnimationFrame): Promise<void> {\n    while (frameCount-- > 0) {\n        await new Promise<void>(executor);\n    }\n}\n\n/**\n * @en Wait until the current thread is idle.\n * @ja 現在のスレッドがアイドル状態になるまで待機\n *\n * @example <br>\n *\n * ```ts\n *  await waitIdle();\n * ```\n *\n */\nexport function waitIdle(options?: IdleRequestOptions): Promise<void> {\n    return new Promise<void>(resolve => requestIdleCallback(() => resolve(), options));\n}\n","import { AjaxGetRequestShortcutOptions, request } from '@cdp/ajax';\nimport { document } from './ssr';\n\n/** @internal */\ninterface TemplateProvider {\n    fragment: DocumentFragment;\n    html: string;\n}\n\n/** @internal */\ntype TemplateProviderMap = Record<string, TemplateProvider>;\n\n/** @internal */\ntype TemplateSourceMap = Record<string, string | HTMLTemplateElement>;\n\n/** @internal */ let _mapProvider: TemplateProviderMap = {};\n/** @internal */ let _mapSource: TemplateSourceMap = {};\n\n/** @internal */\nfunction queryTemplateSource(selector: string, provider: TemplateProvider | null, noCache: boolean): string | HTMLTemplateElement | undefined {\n    const { fragment, html } = provider ?? {};\n    const key = `${selector}${html ? `::${html}` : ''}`;\n    if (_mapSource[key]) {\n        return _mapSource[key];\n    }\n    const context = fragment ?? document;\n    const target = context.querySelector(selector);\n    const source = target instanceof HTMLTemplateElement ? target : target?.innerHTML;\n    !noCache && source && (_mapSource[key] = source);\n    return source;\n}\n\n/** @internal */\nasync function queryTemplateProvider(url: string | undefined, noCache: boolean): Promise<TemplateProvider | null> {\n    if (!url) {\n        return null;\n    }\n    if (_mapProvider[url]) {\n        return _mapProvider[url];\n    } else {\n        const html = await request.text(url);\n        const template = document.createElement('template');\n        template.innerHTML = html;\n        const fragment = template.content;\n        const provider = { fragment, html: html.replace(/\\s/gm, '') };\n        !noCache && fragment && (_mapProvider[url] = provider);\n        return provider;\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Load template options.\n * @ja ロードテンプレートオプション\n */\nexport interface LoadTemplateOptions extends AjaxGetRequestShortcutOptions {\n    /**\n     * @en The template acquisition URL. if not specified the template will be searched from `document`.\n     * @ja テンプレート取得先 URL. 指定がない場合は `document` から検索\n     */\n    url?: string;\n    /**\n     * @en If you don't want to cache the template in memory, given `true`.\n     * @ja テンプレートをメモリにキャッシュしない場合は `true` を指定\n     */\n    noCache?: boolean;\n}\n\n/**\n * @en Clear template's resources.\n * @ja テンプレートリソースキャッシュの削除\n */\nexport function clearTemplateCache(): void {\n    _mapProvider = {};\n    _mapSource   = {};\n}\n\n/**\n * @en Load template source.\n * @ja テンプレートソースのロード\n *\n * @param selector\n *  - `en` The selector string of DOM.\n *  - `ja` DOM セレクタ文字列\n * @param options\n *  - `en` load options\n *  - `ja` ロードオプション\n */\nexport async function loadTemplateSource(selector: string, options?: LoadTemplateOptions): Promise<string | HTMLTemplateElement | undefined> {\n    const { url, noCache } = Object.assign({ noCache: false }, options);\n    const provider = await queryTemplateProvider(url, noCache);\n    return queryTemplateSource(selector, provider, noCache);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Forced conversion to HTML string.\n * @ja HTML 文字列に強制変換\n *\n * @param src\n *  - `en` `HTMLTemplateElement` instance or HTML string\n *  - `ja` `HTMLTemplateElement` インスタンスまたは HTML 文字列\n */\nexport function toTemplateString(src: string | HTMLTemplateElement | undefined): string | undefined {\n    return src instanceof HTMLTemplateElement ? src.innerHTML : src;\n}\n\n/**\n * @en Forced conversion to `HTMLTemplateElement`. (If it is a Node, create a clone with `cloneNode(true)`)\n * @ja `HTMLTemplateElement` に強制変換 (Nodeである場合には `cloneNode(true)` による複製を作成)\n *\n * @param src\n *  - `en` `HTMLTemplateElement` instance or HTML string\n *  - `ja` `HTMLTemplateElement` インスタンスまたは HTML 文字列\n */\nexport function toTemplateElement(src: string | HTMLTemplateElement | undefined): HTMLTemplateElement | undefined {\n    const from = (str: string): HTMLTemplateElement => {\n        const template = document.createElement('template');\n        template.innerHTML = str;\n        return template;\n    };\n    return 'string' === typeof src ? from(src) : src?.cloneNode(true) as HTMLTemplateElement;\n}\n","import { safe } from '@cdp/core-utils';\n\n/*\n * SSR (Server Side Rendering) 環境においてもオブジェクト等の存在を保証する\n */\n\n/** @internal */ export const window                = safe(globalThis.window);\n/** @internal */ export const document              = safe(globalThis.document);\n/** @internal */ export const CustomEvent           = safe(globalThis.CustomEvent);\n/** @internal */ export const requestAnimationFrame = safe(globalThis.requestAnimationFrame);\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Nullish,\n    isNumber,\n    isFunction,\n    className,\n    getGlobalNamespace,\n} from '@cdp/core-utils';\nimport { document } from './ssr';\n\nexport type ElementBase = Node | Window;\nexport type ElementResult<T> = T extends ElementBase ? T : HTMLElement;\nexport type SelectorBase = Node | Window | string | Nullish;\nexport type ElementifySeed<T extends SelectorBase = HTMLElement> = T | (T extends ElementBase ? T[] : never) | NodeListOf<T extends Node ? T : never>;\nexport type QueryContext = ParentNode & Partial<NonElementParentNode>;\n\n/** @internal */\nexport function isWindowContext(x: unknown): x is Window {\n    return (x as Window)?.parent instanceof Window;\n}\n\n/** @internal */\nexport function elementify<T extends SelectorBase>(seed?: ElementifySeed<T>, context?: QueryContext | null): ElementResult<T>[] {\n    if (!seed) {\n        return [];\n    }\n\n    context = context ?? document;\n    const elements: Element[] = [];\n\n    try {\n        if ('string' === typeof seed) {\n            const html = seed.trim();\n            if (html.startsWith('<') && html.endsWith('>')) {\n                // markup\n                const template = document.createElement('template');\n                template.innerHTML = html;\n                elements.push(...template.content.children);\n            } else {\n                const selector = html;\n                if (isFunction(context.getElementById) && ('#' === selector[0]) && !/[ .<>:~]/.exec(selector)) {\n                    // pure ID selector\n                    const el = context.getElementById(selector.substring(1));\n                    el && elements.push(el);\n                } else if ('body' === selector) {\n                    // body\n                    elements.push(document.body);\n                } else {\n                    // other selectors\n                    elements.push(...context.querySelectorAll(selector));\n                }\n            }\n        } else if ((seed as Node).nodeType || isWindowContext(seed)) {\n            // Node/element, Window\n            elements.push(seed as Node as Element);\n        } else if (0 < (seed as T[]).length && ((seed as any)[0].nodeType || isWindowContext((seed as any)[0]))) {\n            // array of elements or collection of DOM\n            elements.push(...(seed as Node[] as Element[]));\n        }\n    } catch (e) {\n        console.warn(`elementify(${className(seed)}, ${className(context)}), failed. [error:${e}]`);\n    }\n\n    return elements as ElementResult<T>[];\n}\n\n/** @internal */\nexport function rootify<T extends SelectorBase>(seed?: ElementifySeed<T>, context?: QueryContext | null): ElementResult<T>[] {\n    const parse = (el: Element, pool: ParentNode[]): void => {\n        const root = (el instanceof HTMLTemplateElement) ? el.content : el;\n        pool.push(root);\n        const templates = root.querySelectorAll('template');\n        for (const t of templates) {\n            parse(t, pool);\n        }\n    };\n\n    const roots: ParentNode[] = [];\n\n    for (const el of elementify(seed, context)) {\n        parse(el as Element, roots);\n    }\n\n    return roots as ElementResult<T>[];\n}\n\n/**\n * @internal\n * @en Ensure positive number, if not returned `undefined`.\n * @en 正値の保証. 異なる場合 `undefined` を返却\n */\nexport function ensurePositiveNumber(value: number | undefined): number | undefined {\n    return (isNumber(value) && 0 <= value) ? value : undefined;\n}\n\n/**\n * @internal\n * @en For easing `swing` timing-function.\n * @ja easing `swing` 用タイミング関数\n *\n * @reference\n *  - https://stackoverflow.com/questions/9245030/looking-for-a-swing-like-easing-expressible-both-with-jquery-and-css3\n *  - https://stackoverflow.com/questions/5207301/jquery-easing-functions-without-using-a-plugin\n *\n * @param progress [0 - 1]\n */\nexport function swing(progress: number): number {\n    return 0.5 - (Math.cos(progress * Math.PI) / 2);\n}\n\n/**\n * @en {@link DOMStatic.utils.evaluate | evaluate}() options.\n * @ja {@link DOMStatic.utils.evaluate | evaluate}() に渡すオプション\n */\nexport interface EvalOptions {\n    type?: string;\n    src?: string;\n    nonce?: string;\n    noModule?: string;\n}\n\n/** @internal */\nconst _scriptsAttrs: (keyof EvalOptions)[] = [\n    'type',\n    'src',\n    'nonce',\n    'noModule',\n];\n\n/** @internal */\nexport function evaluate(code: string, options?: Element | EvalOptions, context?: Document | null): any {\n    const doc: Document = context ?? document;\n    const script = doc.createElement('script');\n    script.text = `CDP_DOM_EVAL_RETURN_VALUE_BRIDGE = (() => { return ${code}; })();`;\n\n    if (options) {\n        for (const attr of _scriptsAttrs) {\n            const val = (options as Record<string, string>)[attr] || (options as Element)?.getAttribute?.(attr);\n            if (val) {\n                script.setAttribute(attr, val);\n            }\n        }\n    }\n\n    // execute\n    try {\n        getGlobalNamespace('CDP_DOM_EVAL_RETURN_VALUE_BRIDGE');\n        doc.head.appendChild(script).parentNode!.removeChild(script);\n        const retval = (globalThis as Record<string, unknown>)['CDP_DOM_EVAL_RETURN_VALUE_BRIDGE'];\n        return retval;\n    } finally {\n        delete (globalThis as Record<string, unknown>)['CDP_DOM_EVAL_RETURN_VALUE_BRIDGE'];\n    }\n}\n","import { document, CustomEvent } from './ssr';\n\nexport interface ConnectEventMap {\n    'connected': Event;\n    'disconnected': Event;\n}\n\n/** @internal */\ninterface ObserverContext {\n    targets: Set<Node>;\n    observer: MutationObserver;\n}\n\nconst _observerMap = new Map<Node, ObserverContext>();\n\nconst queryObservedNode = (node: Node): Node | undefined => {\n    for (const [observedNode, context] of _observerMap) {\n        if (context.targets.has(node)) {\n            return observedNode;\n        }\n    }\n    return undefined;\n};\n\nconst dispatchTarget = (node: Node, event: Event, nodeIn: WeakSet<Node>, nodeOut: WeakSet<Node>): void => {\n    if (queryObservedNode(node) && !nodeIn.has(node)) {\n        nodeOut.delete(node);\n        nodeIn.add(node);\n        node.dispatchEvent(event);\n    }\n    for (const child of node.childNodes) {\n        dispatchTarget(child, event, nodeIn, nodeOut);\n    }\n};\n\nconst  dispatchAll = (nodes: NodeList, type: string, nodeIn: WeakSet<Node>, nodeOut: WeakSet<Node>): void => {\n    for (const node of nodes) {\n        Node.ELEMENT_NODE === node.nodeType && dispatchTarget(\n            node,\n            new CustomEvent(type, { bubbles: true, cancelable: true }),\n            nodeIn,\n            nodeOut,\n        );\n    }\n};\n\nconst start = (observedNode: Node): ObserverContext => {\n    const connected = new WeakSet<Node>();\n    const disconnected = new WeakSet<Node>();\n\n    const changes = (records: MutationRecord[]): void => {\n        for (const record of records) {\n            dispatchAll(record.removedNodes, 'disconnected', disconnected, connected);\n            dispatchAll(record.addedNodes, 'connected', connected, disconnected);\n        }\n    };\n\n    const context: ObserverContext = {\n        targets: new Set(),\n        observer: new MutationObserver(changes),\n    };\n    _observerMap.set(observedNode, context);\n    context.observer.observe(observedNode, { childList: true, subtree: true });\n\n    return context;\n};\n\nconst stopAll = (): void => {\n    for (const [, context] of _observerMap) {\n        context.targets.clear();\n        context.observer.disconnect();\n    }\n    _observerMap.clear();\n};\n\n/** @internal */\nexport const detectify = <T extends Node>(node: T, observed?: Node): T => {\n    const observedNode = observed ?? (node.ownerDocument?.body && node.ownerDocument) ?? document;\n    const context = _observerMap.get(observedNode) ?? start(observedNode);\n    context.targets.add(node);\n    return node;\n};\n\n/** @internal */\nexport const undetectify = <T extends Node>(node?: T): void => {\n    if (null == node) {\n        stopAll();\n    } else {\n        const observedNode = queryObservedNode(node);\n        if (observedNode) {\n            const context = _observerMap.get(observedNode)!;\n            context.targets.delete(node);\n            if (!context.targets.size) {\n                context.observer.disconnect();\n                _observerMap.delete(observedNode);\n            }\n        }\n    }\n};\n","import type { Writable } from '@cdp/core-utils';\nimport {\n    ElementBase,\n    ElementifySeed,\n    ElementResult,\n    SelectorBase,\n    QueryContext,\n    EvalOptions,\n    isWindowContext,\n    elementify,\n    rootify,\n    evaluate,\n} from './utils';\nimport { detectify, undetectify } from './detection';\nimport {\n    DOM,\n    DOMPlugin,\n    DOMClass,\n    DOMSelector,\n    DOMResult,\n    DOMIterateCallback,\n} from './class';\n\n/**\n * @en Provides functionality equivalent to `jQuery` DOM manipulation.\n * @ja `jQuery` の DOM 操作と同等の機能を提供\n *\n * @example <br>\n *\n * ```ts\n * import { dom as $ } from '@cdp/runtime';\n *\n * // Get the <button> element with the class 'continue' and change its HTML to 'Next Step...'\n * $('button.continue').html('Next Step...');\n * ```\n */\nexport interface DOMStatic {\n    /**\n     * @en Provides functionality equivalent to `jQuery` DOM manipulation. <br>\n     *     Create {@link DOM} instance from `selector` arg.\n     * @ja `jQuery` の DOM 操作と同等の機能を提供 <br>\n     *     指定された `selector` {@link DOM} インスタンスを作成\n     *\n     * @example <br>\n     *\n     * ```ts\n     * import { dom as $ } from '@cdp/runtime';\n     *\n     * // Get the <button> element with the class 'continue' and change its HTML to 'Next Step...'\n     * $('button.continue').html('Next Step...');\n     * ```\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるオブジェクト(群)またはセレクタ文字列\n     * @param context\n     *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n     *  - `ja` 使用する `Document` コンテキストを指定. 未指定の場合は環境の既定値が使用される.\n     * @returns {@link DOM} instance.\n     */\n    <T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null): DOMResult<T>;\n\n    /**\n     * @en The object's `prototype` alias.\n     * @ja オブジェクトの `prototype`エイリアス\n     */\n    fn: DOMClass & Record<string | symbol, unknown>;\n\n    /** DOM Utilities */\n    readonly utils: {\n        /**\n         * @en Check the value-type is Window.\n         * @ja Window 型であるか判定\n         *\n         * @param x\n         *  - `en` evaluated value\n         *  - `ja` 評価する値\n         */\n        isWindowContext(x: unknown): x is Window;\n\n        /**\n         * @en Create Element array from seed arg.\n         * @ja 指定された Seed から Element 配列を作成\n         *\n         * @param seed\n         *  - `en` Object(s) or the selector string which becomes origin of Element array.\n         *  - `ja` Element 配列のもとになるオブジェクト(群)またはセレクタ文字列\n         * @param context\n         *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n         *  - `ja` 使用する `Document` コンテキストを指定. 未指定の場合は環境の既定値が使用される.\n         * @returns Element[] based Node or Window object.\n         */\n        elementify<T extends SelectorBase>(seed?: ElementifySeed<T>, context?: QueryContext | null): ElementResult<T>[];\n\n        /**\n         * @en Create Element array from seed arg. <br>\n         *     And also lists for the `DocumentFragment` inside the `<template>` tag.\n         * @ja 指定された Seed から Element 配列を作成 <br>\n         *     `<template>` タグ内の `DocumentFragment` も列挙する\n         *\n         * @param seed\n         *  - `en` Object(s) or the selector string which becomes origin of Element array.\n         *  - `ja` Element 配列のもとになるオブジェクト(群)またはセレクタ文字列\n         * @param context\n         *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n         *  - `ja` 使用する `Document` コンテキストを指定. 未指定の場合は環境の既定値が使用される.\n         * @returns Element[] based Node.\n         */\n        rootify<T extends SelectorBase>(seed?: ElementifySeed<T>, context?: QueryContext | null): ElementResult<T>[];\n\n        /**\n         * @en The `eval` function by which script `nonce` attribute considered under the CSP condition.\n         * @ja CSP 環境においてスクリプト `nonce` 属性を考慮した `eval` 実行関数\n         */\n        evaluate(code: string, options?: Element | EvalOptions, context?: Document | null): any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n        /**\n         * @en Enabling the node to detect events of DOM connected and disconnected.\n         * @ja 要素に対して, DOM への接続, DOM からの切断イベントを検出可能にする\n         *\n         * @example <br>\n         *\n         * ```ts\n         * import { dom } from '@cdp/runtime';\n         * const { detectify, undetectify } = dom.utils;\n         *\n         * const el = document.createElement('div');\n         *\n         * // observation start\n         * detectify(el);\n         * el.addEventListener('connected', () => {\n         *     console.log('on connected');\n         * });\n         * el.addEventListener('disconnected', () => {\n         *     console.log('on disconnected');\n         * });\n         *\n         * // observation stop\n         * undetectify(el);\n         * ```\n         *\n         * @param node\n         *  - `en` target node\n         *  - `ja` 対象の要素\n         * @param observed\n         *  - `en` Specifies the root element to watch. If not specified, `ownerDocument` is evaluated first, followed by global `document`.\n         *  - `ja` 監視対象のルート要素を指定. 未指定の場合は `ownerDocument`, グローバル `document` の順に評価される\n         */\n        detectify<T extends Node>(node: T, observed?: Node): T;\n\n        /**\n         * @en Undetect connected and disconnected from DOM events for an element.\n         * @ja 要素に対して, DOM への接続, DOM からの切断イベントを検出を解除する\n         *\n         * @param node\n         *  - `en` target node. If not specified, execute all release.\n         *  - `ja` 対象の要素. 指定しない場合は全解除を実行\n         */\n        undetectify<T extends Node>(node?: T): void;\n    };\n}\n\n/** @internal */\nexport type DOMFactory = <T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null) => DOMResult<T>;\n\nlet _factory!: DOMFactory;\n\nconst dom = (<T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null): DOMResult<T> => {\n    return _factory(selector, context);\n}) as DOMStatic;\n\n(dom as Writable<DOMStatic>).utils = {\n    isWindowContext,\n    elementify,\n    rootify,\n    evaluate,\n    detectify,\n    undetectify,\n};\n\n/** @internal 循環参照回避のための遅延コンストラクションメソッド */\nexport function setup(fn: DOMClass, factory: DOMFactory): void {\n    _factory = factory;\n    (dom.fn as DOMClass) = fn;\n}\n\nexport {\n    ElementBase,\n    SelectorBase,\n    QueryContext,\n    EvalOptions,\n    DOM,\n    DOMPlugin,\n    DOMSelector,\n    DOMResult,\n    DOMIterateCallback,\n    dom,\n};\n","import type { Nullish, Writable } from '@cdp/core-utils';\nimport { isWindowContext } from './utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    DOM,\n    DOMSelector,\n    dom as $,\n} from './static';\n\n/** @internal */ const _createIterableIterator = Symbol('create-iterable-iterator');\n\n/**\n * @en Base abstraction class of {@link DOMClass}. This class provides iterator methods.\n * @ja {@link DOMClass} の基底抽象クラス. iterator を提供.\n */\nexport class DOMBase<T extends ElementBase> implements ArrayLike<T>, Iterable<T> {\n    /**\n     * @en number of `Element`\n     * @ja 内包する `Element` 数\n     */\n    readonly length: number;\n\n    /**\n     * @en `Element` accessor\n     * @ja `Element` への添え字アクセス\n     */\n    readonly [n: number]: T;\n\n    /**\n     * constructor\n     * \n     * @param elements\n     *  - `en` operation targets `Element` array.\n     *  - `ja` 操作対象の `Element` 配列\n     */\n    constructor(elements: T[]) {\n        const self: Writable<DOMAccess<T>> = this;\n        for (const [index, elem] of elements.entries()) {\n            self[index] = elem;\n        }\n        this.length = elements.length;\n    }\n\n    /**\n     * @en Check target is `Node` and connected to` Document` or `ShadowRoot`.\n     * @ja 対象が `Node` でありかつ `Document` または `ShadowRoot` に接続されているか判定\n     *\n     * @param el\n     *  - `en` {@link ElementBase} instance\n     *  - `ja` {@link ElementBase} インスタンス\n     */\n    get isConnected(): boolean {\n        for (const el of this) {\n            if (isNode(el) && el.isConnected) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: Iterable<T>\n\n    /**\n     * @en Iterator of {@link ElementBase} values in the array.\n     * @ja 格納している {@link ElementBase} にアクセス可能なイテレータオブジェクトを返却\n     */\n    [Symbol.iterator](): Iterator<T> {\n        const iterator = {\n            base: this,\n            pointer: 0,\n            next(): IteratorResult<T> {\n                if (this.pointer < this.base.length) {\n                    return {\n                        done: false,\n                        value: this.base[this.pointer++],\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!,\n                    };\n                }\n            },\n        };\n        return iterator as Iterator<T>;\n    }\n\n    /**\n     * @en Returns an iterable of key(index), value({@link ElementBase}) pairs for every entry in the array.\n     * @ja key(index), value({@link ElementBase}) 配列にアクセス可能なイテレータオブジェクトを返却\n     */\n    entries(): IterableIterator<[number, T]> {\n        return this[_createIterableIterator]((key: number, value: T) => [key, value]);\n    }\n\n    /**\n     * @en Returns an iterable of keys(index) in the array.\n     * @ja key(index) 配列にアクセス可能なイテレータオブジェクトを返却\n     */\n    keys(): IterableIterator<number> {\n        return this[_createIterableIterator]((key: number) => key);\n    }\n\n    /**\n     * @en Returns an iterable of values({@link ElementBase}) in the array.\n     * @ja values({@link ElementBase}) 配列にアクセス可能なイテレータオブジェクトを返却\n     */\n    values(): IterableIterator<T> {\n        return this[_createIterableIterator]((key: number, value: T) => value);\n    }\n\n    /** @internal common iterator create function */\n    private [_createIterableIterator]<R>(valueGenerator: (key: number, value: T) => R): IterableIterator<R> {\n        const context = {\n            base: this,\n            pointer: 0,\n        };\n\n        const iterator: IterableIterator<R> = {\n            next(): IteratorResult<R> {\n                const current = context.pointer;\n                if (current < context.base.length) {\n                    context.pointer++;\n                    return {\n                        done: false,\n                        value: valueGenerator(current, context.base[current]),\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!,\n                    };\n                }\n            },\n            [Symbol.iterator](): IterableIterator<R> {\n                return this;\n            },\n        };\n\n        return iterator;\n    }\n}\n\n/**\n * @en Base interface for DOM Mixin class.\n * @ja DOM Mixin クラスの既定インターフェイス\n */\nexport interface DOMIterable<T extends ElementBase = HTMLElement> extends Partial<DOMBase<T>> {\n    length: number;\n    [n: number]: T;\n    [Symbol.iterator]: () => Iterator<T>;\n}\n\n/**\n * @internal DOM access\n *\n * @example <br>\n *\n * ```ts\n *   const dom: DOMAccess<TElement> = this as DOMIterable<TElement>;\n * ```\n */\nexport interface DOMAccess<T extends ElementBase = HTMLElement> extends Partial<DOM<T>> { } // eslint-disable-line @typescript-eslint/no-empty-object-type\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check target is `Node`.\n * @ja 対象が `Node` であるか判定\n *\n * @param el\n *  - `en` {@link ElementBase} instance\n *  - `ja` {@link ElementBase} インスタンス\n */\nexport function isNode(el: unknown): el is Node {\n    return !!(el && (el as Node).nodeType);\n}\n\n/**\n * @en Check target is `Element`.\n * @ja 対象が `Element` であるか判定\n *\n * @param el\n *  - `en` {@link ElementBase} instance\n *  - `ja` {@link ElementBase} インスタンス\n */\nexport function isNodeElement(el: ElementBase | Nullish): el is Element {\n    return isNode(el) && (Node.ELEMENT_NODE === el.nodeType);\n}\n\n/**\n * @en Check target is `HTMLElement` or `SVGElement`.\n * @ja 対象が `HTMLElement` または `SVGElement` であるか判定\n *\n * @param el\n *  - `en` {@link ElementBase} instance\n *  - `ja` {@link ElementBase} インスタンス\n */\nexport function isNodeHTMLOrSVGElement(el: ElementBase | Nullish): el is HTMLElement | SVGElement {\n    return isNodeElement(el) && (null != (el as HTMLElement).dataset);\n}\n\n/**\n * @en Check target is `Element` or `Document`.\n * @ja 対象が `Element` または `Document` であるか判定\n *\n * @param el\n *  - `en` {@link ElementBase} instance\n *  - `ja` {@link ElementBase} インスタンス\n */\nexport function isNodeQueriable(el: ElementBase | Nullish): el is Element | Document {\n    return !!(el && (el as Node as Element).querySelector);\n}\n\n/**\n * @en Check target is `Document`.\n * @ja 対象が `Document` であるか判定\n *\n * @param el\n *  - `en` {@link ElementBase} instance\n *  - `ja` {@link ElementBase} インスタンス\n */\nexport function isNodeDocument(el: ElementBase | Nullish): el is Document {\n    return isNode(el) && (Node.DOCUMENT_NODE === el.nodeType);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check {@link DOM} target is `Element`.\n * @ja {@link DOM} が `Element` を対象にしているか判定\n *\n * @param dom\n *  - `en` {@link DOMIterable} instance\n *  - `ja` {@link DOMIterable} インスタンス\n */\nexport function isTypeElement(dom: DOMIterable<ElementBase>): dom is DOMIterable<Element> {\n    return isNodeElement(dom[0]);\n}\n\n/**\n * @en Check {@link DOM} target is `HTMLElement` or `SVGElement`.\n * @ja {@link DOM} が `HTMLElement` または `SVGElement` を対象にしているか判定\n *\n * @param dom\n *  - `en` {@link DOMIterable} instance\n *  - `ja` {@link DOMIterable} インスタンス\n */\nexport function isTypeHTMLOrSVGElement(dom: DOMIterable<ElementBase>): dom is DOMIterable<HTMLElement | SVGElement> {\n    return isNodeHTMLOrSVGElement(dom[0]);\n}\n\n/**\n * @en Check {@link DOM} target is `Document`.\n * @ja {@link DOM} が `Document` を対象にしているか判定\n *\n * @param dom\n *  - `en` {@link DOMIterable} instance\n *  - `ja` {@link DOMIterable} インスタンス\n */\nexport function isTypeDocument(dom: DOMIterable<ElementBase>): dom is DOMIterable<Document> {\n    return dom[0] instanceof Document;\n}\n\n/**\n * @en Check {@link DOM} target is `Window`.\n * @ja {@link DOM} が `Window` を対象にしているか判定\n *\n * @param dom\n *  - `en` {@link DOMIterable} instance\n *  - `ja` {@link DOMIterable} インスタンス\n */\nexport function isTypeWindow(dom: DOMIterable<ElementBase>): dom is DOMIterable<Window> {\n    return isWindowContext(dom[0]);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check the selector type is Nullish.\n * @ja Nullish セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isEmptySelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Nullish> {\n    return !selector;\n}\n\n/**\n * @en Check the selector type is String.\n * @ja String セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isStringSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, string> {\n    return 'string' === typeof selector;\n}\n\n/**\n * @en Check the selector type is Node.\n * @ja Node セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isNodeSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Node> {\n    return null != (selector as Node).nodeType;\n}\n\n/**\n * @en Check the selector type is Element.\n * @ja Element セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isElementSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Element> {\n    return selector instanceof Element;\n}\n\n/**\n * @en Check the selector type is Document.\n * @ja Document セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isDocumentSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Document> {\n    return selector instanceof Document;\n}\n\n/**\n * @en Check the selector type is Window.\n * @ja Window セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isWindowSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Window> {\n    return isWindowContext(selector);\n}\n\n/**\n * @en Check the selector is able to iterate.\n * @ja 走査可能なセレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isIterableSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, NodeListOf<Node>> {\n    return null != (selector as T[]).length;\n}\n\n/**\n * @en Check the selector type is {@link DOM}.\n * @ja {@link DOM} セレクタであるか判定\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isDOMSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, DOM> {\n    return selector instanceof DOMBase;\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check node name is argument.\n * @ja Node 名が引数で与えた名前と一致するか判定\n */\nexport function nodeName(elem: Node | null, name: string): boolean {\n    return !!(elem && elem.nodeName.toLowerCase() === name.toLowerCase());\n}\n\n/**\n * @en Get node offset parent. This function will work SVGElement, too.\n * @ja offset parent の取得. SVGElement にも適用可能\n */\nexport function getOffsetParent(node: Node): Element | null {\n    if ((node as HTMLElement).offsetParent) {\n        return (node as HTMLElement).offsetParent;\n    } else if (nodeName(node, 'svg')) {\n        const $svg = $(node);\n        const cssProps = $svg.css(['display', 'position']);\n        if ('none' === cssProps.display || 'fixed' === cssProps.position) {\n            return null;\n        } else {\n            let parent = $svg[0].parentElement;\n            while (parent) {\n                const { display, position } = $(parent).css(['display', 'position']);\n                if ('none' === display) {\n                    return null;\n                } else if (!position || 'static' === position) {\n                    parent = parent.parentElement;\n                } else {\n                    break;\n                }\n            }\n            return parent;\n        }\n    } else {\n        return null;\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    UnknownObject,\n    PlainObject,\n    NonFunctionPropertyNames,\n    TypedData,\n    isString,\n    isArray,\n    toTypedData,\n    fromTypedData,\n    assignValue,\n    camelize,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport { ElementBase } from './static';\nimport {\n    DOMIterable,\n    isNodeElement,\n    isNodeHTMLOrSVGElement,\n    isTypeElement,\n    isTypeHTMLOrSVGElement,\n} from './base';\n\nexport type DOMValueType<T, K = 'value'> = T extends HTMLSelectElement ? (string | string[]) : K extends keyof T ? T[K] : string;\nexport type DOMData = PlainObject<TypedData>;\n\n/** @internal helper for `val()`*/\nfunction isMultiSelectElement(el: ElementBase): el is HTMLSelectElement {\n    return isNodeElement(el) && 'select' === el.nodeName.toLowerCase() && (el as HTMLSelectElement).multiple;\n}\n\n/** @internal helper for `val()`*/\nfunction isInputElement(el: ElementBase): el is HTMLInputElement {\n    return isNodeElement(el) && (null != (el as HTMLInputElement).value);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the attributes methods.\n * @ja 属性操作メソッドを集約した Mixin Base クラス\n */\nexport class DOMAttributes<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Classes\n\n    /**\n     * @en Add css class to elements.\n     * @ja css class 要素に追加\n     *\n     * @param className\n     *  - `en` class name or class name list (array).\n     *  - `ja` クラス名またはクラス名の配列を指定\n     */\n    public addClass(className: string | string[]): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n        const classes = isArray(className) ? className : [className];\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.classList.add(...classes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Remove css class to elements.\n     * @ja css class 要素を削除\n     *\n     * @param className\n     *  - `en` class name or class name list (array).\n     *  - `ja` クラス名またはクラス名の配列を指定\n     */\n    public removeClass(className: string | string[]): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n        const classes = isArray(className) ? className : [className];\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.classList.remove(...classes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Determine whether any of the matched elements are assigned the given class.\n     * @ja 指定されたクラス名を少なくとも要素が持っているか判定\n     *\n     * @param className\n     *  - `en` class name\n     *  - `ja` クラス名\n     */\n    public hasClass(className: string): boolean {\n        if (!isTypeElement(this)) {\n            return false;\n        }\n        for (const el of this) {\n            if (isNodeElement(el) && el.classList.contains(className)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @en Add or remove one or more classes from each element in the set of matched elements, <br>\n     *     depending on either the class's presence or the value of the state argument.\n     * @ja 現在の状態に応じて, 指定されたクラス名を要素に追加/削除を実行\n     *\n     * @param className\n     *  - `en` class name or class name list (array).\n     *  - `ja` クラス名またはクラス名の配列を指定\n     * @param force\n     *  - `en` if this argument exists, true: the classes should be added / false: removed.\n     *  - `ja` 引数が存在する場合, true: クラスを追加 / false: クラスを削除\n     */\n    public toggleClass(className: string | string[], force?: boolean): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n\n        const classes = isArray(className) ? className : [className];\n        const operation = (() => {\n            if (null == force) {\n                return (elem: Element): void => {\n                    for (const name of classes) {\n                        elem.classList.toggle(name);\n                    }\n                };\n            } else if (force) {\n                return (elem: Element) => elem.classList.add(...classes);\n            } else {\n                return (elem: Element) => elem.classList.remove(...classes);\n            }\n        })();\n\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                operation(el);\n            }\n        }\n\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Properties\n\n    /**\n     * @en Get property value. <br>\n     *     The method gets the property value for only the first element in the matched set.\n     * @ja プロパティ値の取得 <br>\n     *     最初の要素が取得対象\n     *\n     * @param name\n     *  - `en` target property name\n     *  - `ja` プロパティ名を指定\n     */\n    public prop<T extends NonFunctionPropertyNames<TElement>>(name: T): TElement[T];\n\n    /**\n     * @en Set single property value for the set of matched elements.\n     * @ja 配下の要素に対して単一プロパティの設定\n     *\n     * @param name\n     *  - `en` target property name\n     *  - `ja` プロパティ名を指定\n     * @param value\n     *  - `en` target property value\n     *  - `ja` 設定するプロパティ値\n     */\n    public prop<T extends NonFunctionPropertyNames<TElement>>(name: T, value: TElement[T]): this;\n\n    /**\n     * @en Set multi property values for the set of matched elements.\n     * @ja 配下の要素に対して複数プロパティの設定\n     *\n     * @param properties\n     *  - `en` An object of property-value pairs to set.\n     *  - `ja` property-value ペアを持つオブジェクトを指定\n     */\n    public prop(properties: PlainObject): this;\n\n    public prop<T extends NonFunctionPropertyNames<TElement>>(key: T | PlainObject, value?: TElement[T]): TElement[T] | this {\n        if (null == value && isString(key)) {\n            // get first element property\n            const first = this[0] as TElement & Record<string, TElement[T]>;\n            return first && first[key];\n        } else {\n            // set property\n            for (const el of this) {\n                if (null != value) {\n                    // single\n                    assignValue(el as unknown as UnknownObject, key as string, value);\n                } else {\n                    // multiple\n                    for (const name of Object.keys(key)) {\n                        if (name in el) {\n                            assignValue(el as unknown as UnknownObject, name, (key as Record<string, TElement[T]>)[name]);\n                        }\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Attributes\n\n    /**\n     * @en Get attribute value. <br>\n     *     The method gets the attribute value for only the first element in the matched set.\n     * @ja 属性値の取得 <br>\n     *     最初の要素が取得対象\n     *\n     * @param name\n     *  - `en` target attribute name\n     *  - `ja` 属性名を指定\n     */\n    public attr(name: string): string | undefined;\n\n    /**\n     * @en Set single attribute value for the set of matched elements.\n     * @ja 配下の要素に対して単一属性の設定\n     *\n     * @param name\n     *  - `en` target attribute name\n     *  - `ja` 属性名を指定\n     * @param value\n     *  - `en` target attribute value. if `null` set, remove attribute.\n     *  - `ja` 設定する属性値. `null` が指定された場合削除\n     */\n    public attr(name: string, value: string | number | boolean | null): this;\n\n    /**\n     * @en Set multi attribute values for the set of matched elements.\n     * @ja 配下の要素に対して複数属性の設定\n     *\n     * @param attributes\n     *  - `en` An object of attribute-value pairs to set.\n     *  - `ja` attribute-value ペアを持つオブジェクトを指定\n     */\n    public attr(properties: PlainObject): this;\n\n    public attr(key: string | PlainObject, value?: string | number | boolean | null): string | undefined | this {\n        if (!isTypeElement(this)) {\n            // non element\n            return undefined === value ? undefined : this;\n        } else if (undefined === value && isString(key)) {\n            // get first element attribute\n            const attr = this[0].getAttribute(key);\n            return attr ?? undefined;\n        } else if (null === value) {\n            // remove attribute\n            return this.removeAttr(key as string);\n        } else {\n            // set attribute\n            for (const el of this) {\n                if (isNodeElement(el)) {\n                    if (null != value) {\n                        // single\n                        el.setAttribute(key as string, String(value));\n                    } else {\n                        // multiple\n                        for (const name of Object.keys(key)) {\n                            const val = (key as Record<string, unknown>)[name];\n                            if (null === val) {\n                                el.removeAttribute(name);\n                            } else {\n                                el.setAttribute(name, String(val));\n                            }\n                        }\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Remove specified attribute.\n     * @ja 指定した属性を削除\n     *\n     * @param name\n     *  - `en` attribute name or attribute name list (array).\n     *  - `ja` 属性名または属性名の配列を指定\n     */\n    public removeAttr(name: string | string[]): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n        const attrs = isArray(name) ? name : [name];\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                for (const attr of attrs) {\n                    el.removeAttribute(attr);\n                }\n            }\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Values\n\n    /**\n     * @en Get the current value of the first element in the set of matched elements.\n     * @ja value 値の取得. 最初の要素が取得対象\n     *\n     * @returns\n     *  - `en` `string` or `number` or `string[]` (`<select multiple=\"multiple\">`).\n     *  - `ja` `string` または `number` または `string[]` (`<select multiple=\"multiple\">`)\n     */\n    public val<T extends ElementBase = TElement>(): DOMValueType<T>;\n\n    /**\n     * @en Set the value of every matched element.\n     * @ja 配下の要素に対して value 値を設定\n     *\n     * @param value\n     *  - `en` `string` or `number` or `string[]` (`<select multiple=\"multiple\">`).\n     *  - `ja` `string` または `number` または `string[]` (`<select multiple=\"multiple\">`)\n     */\n    public val<T extends ElementBase = TElement>(value: DOMValueType<T>): this;\n\n    public val<T extends ElementBase = TElement>(value?: DOMValueType<T>): any {\n        if (!isTypeElement(this)) {\n            // non element\n            return null == value ? undefined : this;\n        }\n\n        if (null == value) {\n            // get first element value\n            const el = this[0];\n            if (isMultiSelectElement(el)) {\n                const values = [];\n                for (const option of el.selectedOptions) {\n                    values.push(option.value);\n                }\n                return values;\n            } else if ('value' in el) {\n                return (el as any).value;\n            } else {\n                // no support value\n                return undefined;\n            }\n        } else {\n            // set value\n            for (const el of this) {\n                if (isArray(value) && isMultiSelectElement(el)) {\n                    for (const option of el.options) {\n                        option.selected = value.includes(option.value);\n                    }\n                } else if (isInputElement(el)) {\n                    el.value = value as string;\n                }\n            }\n            return this;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Data\n\n    /**\n     * @en Return the values all `DOMStringMap` store set by an HTML5 data-* attribute for the first element in the collection.\n     * @ja 最初の要素の HTML5 data-* 属性で `DOMStringMap` に格納された全データ値を返却\n     */\n    public data(): DOMData | undefined;\n\n    /**\n     * @en Return the value at the named data store for the first element in the collection, as set by data(key, value) or by an HTML5 data-* attribute.\n     * @ja 最初の要素の key で指定した HTML5 data-* 属性値を返却\n     *\n     * @param key\n     *  - `en` string equivalent to data-`key` is given.\n     *  - `ja` data-`key` に相当する文字列を指定\n     */\n    public data(key: string): TypedData | undefined;\n\n    /**\n     * @en Store arbitrary data associated with the matched elements.\n     * @ja 配下の要素に対して任意のデータを格納\n     *\n     * @param key\n     *  - `en` string equivalent to data-`key` is given.\n     *  - `ja` data-`key` に相当する文字列を指定\n     * @param value\n     *  - `en` data value (not only `string`)\n     *  - `ja` 設定する値を指定 (文字列以外も受付可)\n     */\n    public data(key: string, value: TypedData): this;\n\n    public data(key?: string, value?: TypedData): DOMData | TypedData | undefined | this {\n        if (!isTypeHTMLOrSVGElement(this)) {\n            // non supported dataset element\n            return null == value ? undefined : this;\n        }\n\n        if (undefined === value) {\n            // get first element dataset\n            const dataset = this[0].dataset;\n            if (null == key) {\n                // get all data\n                const data: DOMData = {};\n                for (const prop of Object.keys(dataset)) {\n                    assignValue(data, prop, toTypedData(dataset[prop]));\n                }\n                return data;\n            } else {\n                // typed value\n                return toTypedData(dataset[camelize(key)]);\n            }\n        } else {\n            // set value\n            const prop = camelize(key ?? '');\n            if (prop) {\n                for (const el of this) {\n                    if (isNodeHTMLOrSVGElement(el)) {\n                        assignValue(el.dataset as unknown as UnknownObject, prop, fromTypedData(value));\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Remove specified data.\n     * @ja 指定したデータをデータ領域から削除\n     *\n     * @param key\n     *  - `en` string equivalent to data-`key` is given.\n     *  - `ja` data-`key` に相当する文字列を指定\n     */\n    public removeData(key: string | string[]): this {\n        if (!isTypeHTMLOrSVGElement(this)) {\n            return this;\n        }\n        const props = isArray(key) ? key.map(k => camelize(k)) : [camelize(key)];\n        for (const el of this) {\n            if (isNodeHTMLOrSVGElement(el)) {\n                const { dataset } = el;\n                for (const prop of props) {\n                    delete dataset[prop];\n                }\n            }\n        }\n        return this;\n    }\n}\n\nsetMixClassAttribute(DOMAttributes, 'protoExtendsOnly');\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    isFunction,\n    isString,\n    noop,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport { document } from './ssr';\nimport { isWindowContext } from './utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    QueryContext,\n    DOM,\n    DOMSelector,\n    DOMResult,\n    DOMIterateCallback,\n    dom as $,\n} from './static';\nimport {\n    DOMBase,\n    DOMIterable,\n    isNode,\n    isNodeElement,\n    isNodeQueriable,\n    isTypeElement,\n    isTypeWindow,\n    isEmptySelector,\n    isStringSelector,\n    isDocumentSelector,\n    isWindowSelector,\n    isNodeSelector,\n    isIterableSelector,\n    nodeName,\n    getOffsetParent,\n} from './base';\n\nexport type DOMModificationCallback<T extends ElementBase, U extends ElementBase> = (index: number, element: T) => U;\n\n/** @internal helper for `is()` and `filter()` */\nfunction winnow<T extends SelectorBase, U extends ElementBase>(\n    selector: DOMSelector<T> | DOMIterateCallback<U>,\n    dom: DOMTraversing<U>,\n    validCallback: (el: U) => unknown,\n    invalidCallback?: () => unknown,\n): any {\n    invalidCallback = invalidCallback ?? noop;\n\n    let retval: unknown;\n    for (const [index, el] of dom.entries()) {\n        if (isFunction(selector)) {\n            if (selector.call(el, index, el)) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isStringSelector(selector)) {\n            if ((el as Node as Element).matches?.(selector)) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isWindowSelector(selector)) {\n            if (isWindowContext(el)) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            } else {\n                retval = invalidCallback();\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isDocumentSelector(selector)) {\n            if (document === el as Node as Document) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            } else {\n                retval = invalidCallback();\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isNodeSelector(selector)) {\n            if (selector === el as Node) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isIterableSelector(selector)) {\n            for (const elem of selector) {\n                if (elem === el as Node) {\n                    retval = validCallback(el);\n                    if (undefined !== retval) {\n                        return retval;\n                    }\n                }\n            }\n        } else {\n            retval = invalidCallback();\n            if (undefined !== retval) {\n                return retval;\n            }\n        }\n    }\n\n    retval = invalidCallback();\n    if (undefined !== retval) {\n        return retval;\n    }\n}\n\n/** @internal helper for `parent()`, `parents()` and `siblings()` */\nfunction validParentNode(parentNode: Node | null): parentNode is Node {\n    return null != parentNode && Node.DOCUMENT_NODE !== parentNode.nodeType && Node.DOCUMENT_FRAGMENT_NODE !== parentNode.nodeType;\n}\n\n/** @internal helper for `children()`, `parent()`, `next()` and `prev()` */\nfunction validRetrieveNode<T extends SelectorBase>(node: Node | null, selector: DOMSelector<T> | undefined): node is Node {\n    if (node) {\n        if (selector) {\n            if ($(node).is(selector)) {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/** @internal helper for `nextUntil()` and `prevUntil() */\nfunction retrieveSiblings<\n    E extends ElementBase,\n    T extends Node = HTMLElement,\n    U extends SelectorBase = SelectorBase,\n    V extends SelectorBase = SelectorBase\n>(\n    sibling: 'previousElementSibling' | 'nextElementSibling',\n    dom: DOMTraversing<E>,\n    selector?: DOMSelector<U>, filter?: DOMSelector<V>\n): DOM<T> {\n    if (!isTypeElement(dom)) {\n        return $() as DOM<T>;\n    }\n\n    const siblings = new Set<Node>();\n\n    for (const el of dom as DOMIterable<Element>) {\n        let elem = el[sibling];\n        while (elem) {\n            if (null != selector) {\n                if ($(elem).is(selector)) {\n                    break;\n                }\n            }\n            if (filter) {\n                if ($(elem).is(filter)) {\n                    siblings.add(elem);\n                }\n            } else {\n                siblings.add(elem);\n            }\n            elem = elem[sibling];\n        }\n    }\n\n    return $([...siblings]) as DOM<T>;\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the traversing methods.\n * @ja トラバースメソッドを集約した Mixin Base クラス\n */\nexport class DOMTraversing<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Element Methods\n\n    /**\n     * @en Retrieve one of the elements matched by the {@link DOM} instance.\n     * @ja インデックスを指定して配下の要素にアクセス\n     *\n     * @param index\n     *  - `en` A zero-based integer indicating which element to retrieve. <br>\n     *         If negative index is counted from the end of the matched set.\n     *  - `ja` 0 base のインデックスを指定 <br>\n     *         負値が指定された場合, 末尾からのインデックスとして解釈される\n     */\n    public get(index: number): TElement | undefined;\n\n    /**\n     * @en Retrieve the elements matched by the {@link DOM} instance.\n     * @ja 配下の要素すべてを配列で取得\n     */\n    public get(): TElement[];\n\n    public get(index?: number): TElement[] | TElement | undefined {\n        if (null != index) {\n            index = Math.trunc(index);\n            return index < 0 ? this[index + this.length] : this[index];\n        } else {\n            return this.toArray();\n        }\n    }\n\n    /**\n     * @en Retrieve all the elements contained in the {@link DOM} set, as an array.\n     * @ja 配下の要素すべてを配列で取得\n     */\n    public toArray(): TElement[] {\n        return [...this];\n    }\n\n    /**\n     * @en Return the position of the first element within the {@link DOM} collection relative to its sibling elements.\n     * @ja {@link DOM} 内の最初の要素が兄弟要素の何番目に所属するかを返却\n     */\n    public index(): number | undefined;\n\n    /**\n     * @en Search for a given a selector, element, or {@link DOM} instance from among the matched elements.\n     * @ja セレクタ, 要素, または {@link DOM} インスタンスを指定し, 配下の何番目に所属しているかを返却\n     */\n    public index<T extends ElementBase>(selector: string | T | DOM<T>): number | undefined;\n\n    public index<T extends ElementBase>(selector?: string | T | DOM<T>): number | undefined {\n        if (!isTypeElement(this)) {\n            return undefined;\n        } else if (null == selector) {\n            let i = 0;\n            let child: Node | null = this[0];\n            while (null !== (child = child.previousSibling)) {\n                if (Node.ELEMENT_NODE === child.nodeType) {\n                    i += 1;\n                }\n            }\n            return i;\n        } else {\n            let elem: T | Element;\n            if (isString(selector)) {\n                elem = $(selector)[0];\n            } else {\n                elem = selector instanceof DOMBase ? selector[0] : selector;\n            }\n            const i = [...this].indexOf(elem as TElement & Element);\n            return 0 <= i ? i : undefined;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Traversing\n\n    /**\n     * @en Reduce the set of matched elements to the first in the set as {@link DOM} instance.\n     * @ja 管轄している最初の要素を {@link DOM} インスタンスにして取得\n     */\n    public first(): DOM<TElement> {\n        return $(this[0]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to the final one in the set as {@link DOM} instance.\n     * @ja 管轄している末尾の要素を {@link DOM} インスタンスにして取得\n     */\n    public last(): DOM<TElement> {\n        return $(this[this.length - 1]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Create a new {@link DOM} instance with elements added to the set from selector.\n     * @ja 指定された `selector` で取得した `Element` を追加した新規 {@link DOM} インスタンスを返却\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     * @param context\n     *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n     *  - `ja` 使用する `Document` コンテキストを指定. 未指定の場合は環境の既定値が使用される.\n     */\n    public add<T extends SelectorBase>(selector: DOMSelector<T>, context?: QueryContext): DOM<TElement> {\n        const $add = $(selector, context);\n        const elems = new Set([...this, ...$add]);\n        return $([...elems] as any);\n    }\n\n    /**\n     * @en Check the current matched set of elements against a selector, element, or {@link DOM} instance.\n     * @ja セレクタ, 要素, または {@link DOM} インスタンスを指定し, 現在の要素のセットと一致するか確認\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}, test function.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列, テスト関数\n     * @returns\n     *  - `en` `true` if at least one of these elements matches the given arguments.\n     *  - `ja` 引数に指定した条件が要素の一つでも一致すれば `true` を返却\n     */\n    public is<T extends SelectorBase>(selector: DOMSelector<T> | DOMIterateCallback<TElement>): boolean {\n        if (this.length <= 0 || isEmptySelector(selector as DOMSelector<T>)) {\n            return false;\n        }\n        return winnow(selector, this, () => true, () => false) as boolean;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to those that match the selector or pass the function's test.\n     * @ja セレクタ, 要素, または {@link DOM} インスタンスを指定し, 現在の要素のセットと一致したものを返却\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}, test function.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列, テスト関数\n     * @returns\n     *  - `en` New {@link DOM} instance including filtered elements.\n     *  - `ja` フィルタリングされた要素を内包する 新規 {@link DOM} インスタンス\n     */\n    public filter<T extends SelectorBase>(selector: DOMSelector<T> | DOMIterateCallback<TElement>): DOM<TElement> {\n        if (this.length <= 0 || isEmptySelector(selector as DOMSelector<T>)) {\n            return $() as DOM<TElement>;\n        }\n        const elements: TElement[] = [];\n        winnow(selector, this, (el: TElement) => { elements.push(el); });\n        return $(elements as Node[]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Remove elements from the set of match the selector or pass the function's test.\n     * @ja セレクタ, 要素, または {@link DOM} インスタンスを指定し, 現在の要素のセットと一致したものを削除して返却\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}, test function.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列, テスト関数\n     * @returns\n     *  - `en` New {@link DOM} instance excluding filtered elements.\n     *  - `ja` フィルタリングされた要素を以外を内包する 新規 {@link DOM} インスタンス\n     */\n    public not<T extends SelectorBase>(selector: DOMSelector<T> | DOMIterateCallback<TElement>): DOM<TElement> {\n        if (this.length <= 0 || isEmptySelector(selector as DOMSelector<T>)) {\n            return $() as DOM<TElement>;\n        }\n        const elements = new Set<TElement>([...this]);\n        winnow(selector, this, (el: TElement) => { elements.delete(el); });\n        return $([...elements] as Node[]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Get the descendants of each element in the current set of matched elements, filtered by a selector.\n     * @ja 配下の要素に対して指定したセレクタに一致する要素を検索\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public find<T extends SelectorBase = SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        if (!isString(selector)) {\n            const $selector = $(selector) as DOM<Node>;\n            return $selector.filter((index, elem) => {\n                for (const el of this) {\n                    if (isNode(el) && el !== elem && el.contains(elem)) {\n                        return true;\n                    }\n                }\n                return false;\n            }) as DOMResult<T>;\n        } else if (isTypeWindow(this)) {\n            return $();\n        } else {\n            const elements: Element[] = [];\n            for (const el of this) {\n                if (isNodeQueriable(el)) {\n                    const elems = el.querySelectorAll(selector);\n                    elements.push(...elems);\n                }\n            }\n            return $(elements as Node[]) as DOMResult<T>;\n        }\n    }\n\n    /**\n     * @en Reduce the set of matched elements to those that have a descendant that matches the selector.\n     * @ja 配下の要素に対して指定したセレクタに一致した子要素持つ要素を返却\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public has<T extends SelectorBase = SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        if (isTypeWindow(this)) {\n            return $();\n        }\n\n        const targets: Node[] = [];\n        for (const el of this) {\n            if (isNodeQueriable(el)) {\n                const $target = $(selector, el as Element) as DOM<Element>;\n                targets.push(...$target);\n            }\n        }\n\n        return this.filter((index, elem) => {\n            if (isNode(elem)) {\n                for (const el of new Set(targets)) {\n                    if (elem !== el && elem.contains(el)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }) as DOM<Node> as DOMResult<T>;\n    }\n\n    /**\n     * @en Pass each element in the current matched set through a function, producing a new {@link DOM} instance containing the return values.\n     * @ja コールバックで変更された要素を用いて新たに {@link DOM} インスタンスを構築\n     *\n     * @param callback\n     *  - `en` modification function object that will be invoked for each element in the current set.\n     *  - `ja` 各要素に対して呼び出される変更関数\n     */\n    public map<T extends ElementBase>(callback: DOMModificationCallback<TElement, T>): DOM<T> {\n        const elements: T[] = [];\n        for (const [index, el] of this.entries()) {\n            elements.push(callback.call(el, index, el));\n        }\n        return $(elements as Node[]) as DOM<T>;\n    }\n\n    /**\n     * @en Iterate over a {@link DOM} instance, executing a function for each matched element.\n     * @ja 配下の要素に対してコールバック関数を実行\n     *\n     * @param callback\n     *  - `en` callback function object that will be invoked for each element in the current set.\n     *  - `ja` 各要素に対して呼び出されるコールバック関数\n     */\n    public each(callback: DOMIterateCallback<TElement>): this {\n        for (const [index, el] of this.entries()) {\n            if (false === callback.call(el, index, el)) {\n                return this;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to a subset specified by a range of indices.\n     * @ja インデックス指定された範囲の要素を含む {@link DOM} インスタンスを返却\n     *\n     * @param begin\n     *  - `en` An integer indicating the 0-based position at which the elements begin to be selected.\n     *  - `ja` 取り出しの開始位置を示す 0 から始まるインデックス\n     * @param end\n     *  - `en` An integer indicating the 0-based position at which the elements stop being selected.\n     *  - `ja` 取り出しを終える直前の位置を示す 0 から始まるインデックス\n     */\n    public slice(begin?: number, end?: number): DOM<TElement> {\n        return $([...this].slice(begin, end) as Node[]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to the one at the specified index.\n     * @ja インデックス指定した要素を含む {@link DOM} インスタンスを返却\n     *\n     * @param index\n     *  - `en` A zero-based integer indicating which element to retrieve. <br>\n     *         If negative index is counted from the end of the matched set.\n     *  - `ja` 0 base のインデックスを指定 <br>\n     *         負値が指定された場合, 末尾からのインデックスとして解釈される\n     */\n    public eq(index: number): DOM<TElement> {\n        if (null == index) {\n            // for fail safe\n            return $() as DOM<TElement>;\n        } else {\n            return $(this.get(index)) as DOM<TElement>;\n        }\n    }\n\n    /**\n     * @en For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n     * @ja 開始要素から最も近い親要素を選択. セレクター指定した場合, マッチする最も近い親要素を返却\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}, test function.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列, テスト関数\n     */\n    public closest<T extends SelectorBase = SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        if (null == selector || !isTypeElement(this)) {\n            return $();\n        } else if (isString(selector)) {\n            const closests = new Set<Node>();\n            for (const el of this) {\n                if (isNodeElement(el)) {\n                    const c = el.closest(selector);\n                    if (c) {\n                        closests.add(c);\n                    }\n                }\n            }\n            return $([...closests]) as DOMResult<T>;\n        } else if (this.is(selector)) {\n            return $(this as unknown as Element) as DOMResult<T>;\n        } else {\n            return this.parents(selector).eq(0) as DOM<Node> as DOMResult<T>;\n        }\n    }\n\n    /**\n     * @en Get the children of each element in the set of matched elements, optionally filtered by a selector.\n     * @ja 各要素の子要素を取得. セレクタが指定された場合はフィルタリングされた結果を返却\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public children<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (isTypeWindow(this)) {\n            return $() as DOM<T>;\n        }\n\n        const children = new Set<Node>();\n        for (const el of this) {\n            if (isNodeQueriable(el)) {\n                for (const child of el.children) {\n                    if (validRetrieveNode(child, selector)) {\n                        children.add(child);\n                    }\n                }\n            }\n        }\n        return $([...children]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the first parent of each element in the current set of matched elements.\n     * @ja 管轄している各要素の最初の親要素を返却\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     * @returns {@link DOM} instance\n     */\n    public parent<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        const parents = new Set<Node>();\n        for (const el of this) {\n            if (isNode(el)) {\n                const parentNode = el.parentNode;\n                if (validParentNode(parentNode) && validRetrieveNode(parentNode, selector)) {\n                    parents.add(parentNode);\n                }\n            }\n        }\n        return $([...parents]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the ancestors of each element in the current set of matched elements.\n     * @ja 管轄している各要素の祖先の親要素を返却\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     * @returns {@link DOM} instance\n     */\n    public parents<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        return this.parentsUntil(undefined, selector);\n    }\n\n    /**\n     * @en Get the ancestors of each element in the current set of matched elements, <br>\n     *     up to but not including the element matched by the selector, DOM node, or {@link DOM} instance\n     * @ja 管轄している各要素の祖先で, 指定したセレクターや条件に一致する要素が出てくるまで選択して取得\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     * @param filter\n     *  - `en` filtered by a string selector.\n     *  - `ja` フィルタ用文字列セレクタ\n     * @returns {@link DOM} instance\n     */\n    public parentsUntil<\n        T extends Node = HTMLElement,\n        U extends SelectorBase = SelectorBase,\n        V extends SelectorBase = SelectorBase\n    >(selector?: DOMSelector<U>, filter?: DOMSelector<V>): DOM<T> {\n        let parents: Node[] = [];\n\n        for (const el of this) {\n            let parentNode = (el as Node).parentNode;\n            while (validParentNode(parentNode)) {\n                if (null != selector) {\n                    if ($(parentNode).is(selector)) {\n                        break;\n                    }\n                }\n                if (filter) {\n                    if ($(parentNode).is(filter)) {\n                        parents.push(parentNode);\n                    }\n                } else {\n                    parents.push(parentNode);\n                }\n                parentNode = parentNode.parentNode;\n            }\n        }\n\n        // 複数要素が対象になるときは反転\n        if (1 < this.length) {\n            parents = [...new Set(parents.reverse())].reverse();\n        }\n\n        return $(parents) as DOM<T>;\n    }\n\n    /**\n     * @en Get the immediately following sibling of each element in the set of matched elements. <br>\n     *     If a selector is provided, it retrieves the next sibling only if it matches that selector.\n     * @ja 要素集合の各要素の直後にあたる兄弟要素を抽出 <br>\n     *     条件式を指定し、結果セットから更に絞込みを行うことも可能\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public next<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (!isTypeElement(this)) {\n            return $() as DOM<T>;\n        }\n\n        const nextSiblings = new Set<Node>();\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const elem = el.nextElementSibling;\n                if (validRetrieveNode(elem, selector)) {\n                    nextSiblings.add(elem);\n                }\n            }\n        }\n        return $([...nextSiblings]) as DOM<T>;\n    }\n\n    /**\n     * @en Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.\n     * @ja マッチした要素集合内の各要素の次以降の全ての兄弟要素を取得. セレクタを指定することでフィルタリングすることが可能.\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public nextAll<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        return this.nextUntil(undefined, selector);\n    }\n\n    /**\n     * @en Get all following siblings of each element up to but not including the element matched by the selector.\n     * @ja マッチした要素の次以降の兄弟要素で, 指定したセレクターや条件に一致する要素が出てくるまで選択して取得\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     * @param filter\n     *  - `en` filtered by a string selector.\n     *  - `ja` フィルタ用文字列セレクタ\n     */\n    public nextUntil<\n        T extends Node = HTMLElement,\n        U extends SelectorBase = SelectorBase,\n        V extends SelectorBase = SelectorBase\n    >(selector?: DOMSelector<U>, filter?: DOMSelector<V>): DOM<T> {\n        return retrieveSiblings('nextElementSibling', this, selector, filter);\n    }\n\n    /**\n     * @en Get the immediately preceding sibling of each element in the set of matched elements. <br>\n     *     If a selector is provided, it retrieves the previous sibling only if it matches that selector.\n     * @ja マッチした要素集合の各要素の直前の兄弟要素を抽出 <br>\n     *     条件式を指定し、結果セットから更に絞込みを行うことも可能\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public prev<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (!isTypeElement(this)) {\n            return $() as DOM<T>;\n        }\n\n        const prevSiblings = new Set<Node>();\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const elem = el.previousElementSibling;\n                if (validRetrieveNode(elem, selector)) {\n                    prevSiblings.add(elem);\n                }\n            }\n        }\n        return $([...prevSiblings]) as DOM<T>;\n    }\n\n    /**\n     * @en Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\n     * @ja マッチした要素集合内の各要素の前以降の全ての兄弟要素を取得. セレクタを指定することでフィルタリングすることが可能.\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public prevAll<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        return this.prevUntil(undefined, selector);\n    }\n\n    /**\n     * @en Get all preceding siblings of each element up to but not including the element matched by the selector.\n     * @ja マッチした要素の前以降の兄弟要素で, 指定したセレクタや条件に一致する要素が出てくるまで選択して取得\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     * @param filter\n     *  - `en` filtered by a string selector.\n     *  - `ja` フィルタ用文字列セレクタ\n     */\n    public prevUntil<\n        T extends Node = HTMLElement,\n        U extends SelectorBase = SelectorBase,\n        V extends SelectorBase = SelectorBase\n    >(selector?: DOMSelector<U>, filter?: DOMSelector<V>): DOM<T> {\n        return retrieveSiblings('previousElementSibling', this, selector, filter);\n    }\n\n    /**\n     * @en Get the siblings of each element in the set of matched elements, optionally filtered by a selector\n     * @ja マッチした各要素の兄弟要素を取得\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public siblings<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (!isTypeElement(this)) {\n            return $() as DOM<T>;\n        }\n\n        const siblings = new Set<Node>();\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const parentNode = el.parentNode;\n                if (validParentNode(parentNode)) {\n                    for (const sibling of $(parentNode).children(selector)) {\n                        if (sibling !== el as Element) {\n                            siblings.add(sibling);\n                        }\n                    }\n                }\n            }\n        }\n        return $([...siblings]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the children of each element in the set of matched elements, including text and comment nodes.\n     * @ja テキストやHTMLコメントを含む子要素を取得\n     */\n    public contents<T extends Node = HTMLElement>(): DOM<T> {\n        if (isTypeWindow(this)) {\n            return $() as DOM<T>;\n        }\n\n        const contents = new Set<Node>();\n        for (const el of this) {\n            if (isNode(el)) {\n                if (nodeName(el, 'iframe')) {\n                    contents.add((el as HTMLIFrameElement).contentDocument as Node);\n                } else if (nodeName(el, 'template')) {\n                    contents.add((el as HTMLTemplateElement).content);\n                } else {\n                    for (const node of el.childNodes) {\n                        contents.add(node);\n                    }\n                }\n            }\n        }\n        return $([...contents]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the closest ancestor element that is positioned.\n     * @ja 要素の先祖要素で, スタイルでポジション指定(positiionがrelative, absolute, fixedのいずれか)されているものを取得\n     */\n    public offsetParent<T extends Node = HTMLElement>(): DOM<T> {\n        const rootElement = document.documentElement;\n        if (this.length <= 0) {\n            return $() as DOM<T>;\n        } else if (!isTypeElement(this)) {\n            return $(rootElement) as DOM<Node> as DOM<T>;\n        } else {\n            const offsets = new Set<Node>();\n            for (const el of this) {\n                const offset = getOffsetParent(el as Node) ?? rootElement;\n                offsets.add(offset);\n            }\n            return $([...offsets]) as DOM<T>;\n        }\n    }\n}\n\nsetMixClassAttribute(DOMTraversing, 'protoExtendsOnly');\n","import { isString, setMixClassAttribute } from '@cdp/core-utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    DOMSelector,\n    DOMResult,\n    DOM,\n    dom as $,\n} from './static';\nimport {\n    DOMIterable,\n    isNode,\n    isNodeElement,\n    isTypeElement,\n    isTypeDocument,\n    isTypeWindow,\n} from './base';\nimport { document } from './ssr';\n\n/** @internal check HTML string */\nfunction isHTMLString(src: string): boolean {\n    const subject = src.trim();\n    return ('<' === subject.slice(0, 1)) && ('>' === subject.slice(-1));\n}\n\n/** @internal helper for `append()`, `prepend()`, `before()` and `after()`  */\nfunction toNodeSet<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): Set<Node | string> {\n    const nodes = new Set<Node | string>();\n    for (const content of contents) {\n        if ((isString(content) && !isHTMLString(content)) || isNode(content)) {\n            nodes.add(content);\n        } else {\n            const $dom = $(content as DOM<Element>);\n            for (const node of $dom) {\n                if (isString(node) || (isNode(node) && Node.DOCUMENT_NODE !== node.nodeType)) {\n                    nodes.add(node);\n                }\n            }\n        }\n    }\n    return nodes;\n}\n\n/** @internal helper for `before()` and `after()`  */\nfunction toNode(node: Node | string): Node {\n    if (isString(node)) {\n        return document.createTextNode(node);\n    } else {\n        return node;\n    }\n}\n\n/** @internal helper for `detach()` and `remove()` */\nfunction removeElement<T extends SelectorBase, U extends ElementBase>(\n    selector: DOMSelector<T> | undefined,\n    dom: DOMIterable<U>,\n    keepListener: boolean\n): void {\n    const $dom: DOM<U> = null != selector\n        ? (dom as DOM<U>).filter(selector)\n        : dom as DOM<U>;\n\n    if (!keepListener) {\n        $dom.off();\n    }\n\n    for (const el of $dom) {\n        if (isNodeElement(el)) {\n            el.remove();\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the manipulation methods.\n * @ja マニピュレーションメソッドを集約した Mixin Base クラス\n */\nexport class DOMManipulation<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Insertion, Inside\n\n    /**\n     * @en Get the HTML contents of the first element in the set of matched elements.\n     * @ja 先頭要素の HTML を取得\n     */\n    public html(): string;\n\n    /**\n     * @en Set the HTML contents of each element in the set of matched elements.\n     * @ja 配下の要素に指定した HTML を設定\n     *\n     * @param htmlString\n     *  - `en` A string of HTML to set as the content of each matched element.\n     *  - `ja` 要素内に挿入する HTML 文字列を指定\n     */\n    public html(htmlString: string): this;\n\n    public html(htmlString?: string): string | this {\n        if (undefined === htmlString) {\n            // getter\n            const el = this[0];\n            return isNodeElement(el) ? el.innerHTML : '';\n        } else if (isString(htmlString)) {\n            // setter\n            for (const el of this) {\n                if (isNodeElement(el)) {\n                    el.innerHTML = htmlString;\n                }\n            }\n            return this;\n        } else {\n            // invalid arg\n            console.warn(`invalid arg. htmlString type:${typeof htmlString}`);\n            return this;\n        }\n    }\n\n    /**\n     * @en Get the text contents of the first element in the set of matched elements. <br>\n     *     jQuery returns the combined text of each element, but this method makes only first element's text.\n     * @ja 先頭要素のテキストを取得 <br>\n     *     jQuery は各要素の連結テキストを返却するが本メソッドは先頭要素のみを対象とする\n     */\n    public text(): string;\n\n    /**\n     * @en Set the content of each element in the set of matched elements to the specified text.\n     * @ja 配下の要素に指定したテキストを設定\n     *\n     * @param text\n     *  - `en` The text to set as the content of each matched element.\n     *  - `ja` 要素内に挿入するテキストを指定\n     */\n    public text(value: string | number | boolean): this;\n\n    public text(value?: string | number | boolean): string | this {\n        if (undefined === value) {\n            // getter\n            const el = this[0];\n            if (isNode(el)) {\n                const text = el.textContent;\n                return (null != text) ? text.trim() : '';\n            } else {\n                return '';\n            }\n        } else {\n            // setter\n            const text = isString(value) ? value : String(value);\n            for (const el of this) {\n                if (isNode(el)) {\n                    el.textContent = text;\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n     * @ja 配下の要素に引数で指定したコンテンツを追加\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or {@link DOM} instance.\n     *  - `ja` 追加する要素(群), テキストノード(群), HTML string, または {@link DOM} インスタンス\n     */\n    public append<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...contents);\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.append(...nodes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements to the end of the target.\n     * @ja 配下要素を他の要素に追加\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public appendTo<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).append(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n    /**\n     * @en Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n     * @ja 配下の要素の先頭に引数で指定したコンテンツを挿入\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or {@link DOM} instance.\n     *  - `ja` 追加する要素(群), テキストノード(群), HTML string, または {@link DOM} インスタンス\n     */\n    public prepend<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...contents);\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.prepend(...nodes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements to the beginning of the target.\n     * @ja 配下要素を他の要素の先頭に挿入\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public prependTo<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).prepend(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Insertion, Outside\n\n    /**\n     * @en Insert content, specified by the parameter, before each element in the set of matched elements.\n     * @ja 配下の要素の前に指定した HTML や要素を挿入\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or {@link DOM} instance.\n     *  - `ja` 追加する要素(群), テキストノード(群), HTML string, または {@link DOM} インスタンス\n     */\n    public before<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...contents);\n        for (const el of this) {\n            if (isNode(el) && el.parentNode) {\n                for (const node of nodes) {\n                    el.parentNode.insertBefore(toNode(node), el);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements before the target.\n     * @ja 配下の要素を指定した別要素の前に挿入\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public insertBefore<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).before(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n    /**\n     * @en Insert content, specified by the parameter, after each element in the set of matched elements.\n     * @ja 配下の要素の後ろに指定した HTML や要素を挿入\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or {@link DOM} instance.\n     *  - `ja` 追加する要素(群), テキストノード(群), HTML string, または {@link DOM} インスタンス\n     */\n    public after<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...[...contents].reverse());\n        for (const el of this) {\n            if (isNode(el) && el.parentNode) {\n                for (const node of nodes) {\n                    el.parentNode.insertBefore(toNode(node), el.nextSibling);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements after the target.\n     * @ja 配下の要素を指定した別要素の後ろに挿入\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public insertAfter<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).after(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Insertion, Around\n\n    /**\n     * @en Wrap an HTML structure around all elements in the set of matched elements.\n     * @ja 配下の要素を指定した別要素でそれぞれ囲む\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public wrapAll<T extends SelectorBase>(selector: DOMSelector<T>): this {\n        if (isTypeDocument(this) || isTypeWindow(this)) {\n            return this;\n        }\n\n        const el = this[0] as Node;\n\n        // The elements to wrap the target around\n        const $wrap = $(selector, el.ownerDocument).eq(0).clone(true) as DOM<Element>;\n\n        if (el.parentNode) {\n            $wrap.insertBefore(el);\n        }\n\n        $wrap.map((index: number, elem: Element) => {\n            while (elem.firstElementChild) {\n                elem = elem.firstElementChild;\n            }\n            return elem;\n        }).append(this as DOMIterable<Node> as DOM<Element>);\n\n        return this;\n    }\n\n    /**\n     * @en Wrap an HTML structure around the content of each element in the set of matched elements.\n     * @ja 配下の要素の内側を, 指定した別エレメントでそれぞれ囲む\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public wrapInner<T extends SelectorBase>(selector: DOMSelector<T>): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n\n        for (const el of this) {\n            const $el = $(el) as DOM<Element>;\n            const contents = $el.contents();\n            if (0 < contents.length) {\n                contents.wrapAll(selector);\n            } else {\n                $el.append(selector as Node);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Wrap an HTML structure around each element in the set of matched elements.\n     * @ja 配下の要素を, 指定した別要素でそれぞれ囲む\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public wrap<T extends SelectorBase>(selector: DOMSelector<T>): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n\n        for (const el of this) {\n            const $el = $(el) as DOM<Element>;\n            $el.wrapAll(selector);\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Remove the parents of the set of matched elements from the DOM, leaving the matched elements in their place.\n     * @ja 要素の親エレメントを削除\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` フィルタ用セレクタ\n     */\n    public unwrap<T extends SelectorBase>(selector?: DOMSelector<T>): this {\n        const self = this as DOMIterable<Node> as DOM<Element>;\n        self.parent(selector).not('body').each((index, elem) => {\n            $(elem).replaceWith(elem.childNodes);\n        });\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Removal\n\n    /**\n     * @en Remove all child nodes of the set of matched elements from the DOM.\n     * @ja 配下の要素内の子要素(テキストも対象)をすべて削除\n     */\n    public empty(): this {\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                while (el.firstChild) {\n                    el.removeChild(el.firstChild);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Remove the set of matched elements from the DOM. This method keeps event listener information.\n     * @ja 要素を DOM から削除. 削除後もイベントリスナは有効\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public detach<T extends SelectorBase>(selector?: DOMSelector<T>): this {\n        removeElement(selector, this, true);\n        return this;\n    }\n\n    /**\n     * @en Remove the set of matched elements from the DOM.\n     * @ja 要素を DOM から削除\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public remove<T extends SelectorBase>(selector?: DOMSelector<T>): this {\n        removeElement(selector, this, false);\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Replacement\n\n    /**\n     * @en Replace each element in the set of matched elements with the provided new content and return the set of elements that was removed.\n     * @ja 配下の要素を指定された別の要素や HTML と差し替え\n     *\n     * @param newContent\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public replaceWith<T extends SelectorBase>(newContent?: DOMSelector<T>): this {\n        const elem = (() => {\n            const $dom = $(newContent);\n            if (1 === $dom.length && isNodeElement($dom[0])) {\n                return $dom[0];\n            } else {\n                const fragment = document.createDocumentFragment();\n                for (const el of $dom) {\n                    if (isNodeElement(el)) {\n                        fragment.appendChild(el);\n                    }\n                }\n                return fragment;\n            }\n        })();\n\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.replaceWith(elem);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Replace each target element with the set of matched elements.\n     * @ja 配下の要素を指定した別の要素と差し替え\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public replaceAll<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).replaceWith(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n}\n\nsetMixClassAttribute(DOMManipulation, 'protoExtendsOnly');\n","import {\n    PlainObject,\n    isString,\n    isNumber,\n    isArray,\n    assignValue,\n    classify,\n    dasherize,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    ElementBase,\n    dom as $,\n} from './static';\nimport {\n    DOMIterable,\n    isNodeHTMLOrSVGElement,\n    isTypeHTMLOrSVGElement,\n    isTypeDocument,\n    isTypeWindow,\n    getOffsetParent,\n} from './base';\nimport { window } from './ssr';\n\n/** @internal helper for `css()` */\nfunction ensureChainCaseProperies(props: PlainObject<string | number | boolean | null>): PlainObject<string | null> {\n    const retval = {};\n    for (const key in props) {\n        assignValue(retval, dasherize(key), props[key]);\n    }\n    return retval;\n}\n\n/** @internal helper for `css()` get props */\nfunction getDefaultView(el: Element): Window {\n    return (el.ownerDocument && el.ownerDocument.defaultView) ?? window;\n}\n\n/** @internal helper for `css()` get props */\nfunction getComputedStyleFrom(el: Element): CSSStyleDeclaration {\n    const view = getDefaultView(el);\n    return view.getComputedStyle(el);\n}\n\n/** @internal helper for css value to number */\nfunction toNumber(val: string): number {\n    return parseFloat(val) || 0;\n}\n\n/** @internal */\nconst _resolver = {\n    width: ['left', 'right'],\n    height: ['top', 'bottom'],\n};\n\n/** @internal helper for size calcution */\nfunction getPadding(style: CSSStyleDeclaration, type: 'width' | 'height'): number {\n    return toNumber(style.getPropertyValue(`padding-${_resolver[type][0]}`))\n         + toNumber(style.getPropertyValue(`padding-${_resolver[type][1]}`));\n}\n\n/** @internal helper for size calcution */\nfunction getBorder(style: CSSStyleDeclaration, type: 'width' | 'height'): number {\n    return toNumber(style.getPropertyValue(`border-${_resolver[type][0]}-width`))\n         + toNumber(style.getPropertyValue(`border-${_resolver[type][1]}-width`));\n}\n\n/** @internal helper for size calcution */\nfunction getMargin(style: CSSStyleDeclaration, type: 'width' | 'height'): number {\n    return toNumber(style.getPropertyValue(`margin-${_resolver[type][0]}`))\n         + toNumber(style.getPropertyValue(`margin-${_resolver[type][1]}`));\n}\n\n/** @internal helper for `width()` and `heigth()` */\nfunction manageSizeFor<T extends ElementBase>(dom: DOMStyles<T>, type: 'width' | 'height', value?: number | string): number | DOMStyles<T> {\n    if (null == value) {\n        // getter\n        if (isTypeWindow(dom)) {\n            // スクロールバーを除いた幅 (clientWidth / clientHeight)\n            return (dom[0].document.documentElement as unknown as Record<string, number>)[`client${classify(type)}`];\n        } else if (isTypeDocument(dom)) {\n            // (scrollWidth / scrollHeight)\n            return (dom[0].documentElement as unknown as Record<string, number>)[`scroll${classify(type)}`];\n        } else {\n            const el = dom[0];\n            if (isNodeHTMLOrSVGElement(el)) {\n                const style = getComputedStyleFrom(el);\n                const size = toNumber(style.getPropertyValue(type));\n                if ('border-box' === style.getPropertyValue('box-sizing')) {\n                    return size - (getBorder(style, type) + getPadding(style, type));\n                } else {\n                    return size;\n                }\n            } else {\n                return 0;\n            }\n        }\n    } else {\n        // setter\n        return dom.css(type, isString(value) ? value : `${value}px`);\n    }\n}\n\n/** @internal helper for `innerWidth()` and `innerHeigth()` */\nfunction manageInnerSizeFor<T extends ElementBase>(dom: DOMStyles<T>, type: 'width' | 'height', value?: number | string): number | DOMStyles<T> {\n    if (null == value) {\n        // getter\n        if (isTypeWindow(dom) || isTypeDocument(dom)) {\n            return manageSizeFor(dom as DOMStyles<T>, type);\n        } else {\n            const el = dom[0];\n            if (isNodeHTMLOrSVGElement(el)) {\n                // (clientWidth / clientHeight)\n                return (el as unknown as Record<string, number>)[`client${classify(type)}`];\n            } else {\n                return 0;\n            }\n        }\n    } else if (isTypeWindow(dom) || isTypeDocument(dom)) {\n        // setter (no reaction)\n        return dom;\n    } else {\n        // setter\n        const isTextProp = isString(value);\n        for (const el of dom) {\n            if (isNodeHTMLOrSVGElement(el)) {\n                const { style, newVal } = (() => {\n                    if (isTextProp) {\n                        el.style.setProperty(type, value);\n                    }\n                    const style = getComputedStyleFrom(el);\n                    const newVal = isTextProp ? toNumber(style.getPropertyValue(type)) : value;\n                    return { style, newVal };\n                })();\n                if ('border-box' === style.getPropertyValue('box-sizing')) {\n                    el.style.setProperty(type, `${newVal + getBorder(style, type)}px`);\n                } else {\n                    el.style.setProperty(type, `${newVal - getPadding(style, type)}px`);\n                }\n            }\n        }\n        return dom;\n    }\n}\n\n/** @internal */ interface ParseOuterSizeArgsResult { includeMargin: boolean; value: number | string; }\n\n/** @internal helper for `outerWidth()` and `outerHeigth()` */\nfunction parseOuterSizeArgs(...args: unknown[]): ParseOuterSizeArgsResult {\n    let [value, includeMargin] = args;\n    if (!isNumber(value) && !isString(value)) {\n        includeMargin = !!value;\n        value = undefined;\n    }\n    return { includeMargin, value } as ParseOuterSizeArgsResult;\n}\n\n/** @internal helper for `outerWidth()` and `outerHeigth()` */\nfunction manageOuterSizeFor<T extends ElementBase>(dom: DOMStyles<T>, type: 'width' | 'height', includeMargin: boolean, value?: number | string): number | DOMStyles<T> {\n    if (null == value) {\n        // getter\n        if (isTypeWindow(dom)) {\n            // スクロールバーを含めた幅 (innerWidth / innerHeight)\n            return (dom[0] as unknown as Record<string, number>)[`inner${classify(type)}`];\n        } else if (isTypeDocument(dom)) {\n            return manageSizeFor(dom as DOMStyles<T>, type);\n        } else {\n            const el = dom[0];\n            if (isNodeHTMLOrSVGElement(el)) {\n                // (offsetWidth / offsetHeight)\n                const offset = getOffsetSize(el, type);\n                if (includeMargin) {\n                    const style = getComputedStyleFrom(el);\n                    return offset + getMargin(style, type);\n                } else {\n                    return offset;\n                }\n            } else {\n                return 0;\n            }\n        }\n    } else if (isTypeWindow(dom) || isTypeDocument(dom)) {\n        // setter (no reaction)\n        return dom;\n    } else {\n        // setter\n        const isTextProp = isString(value);\n        for (const el of dom) {\n            if (isNodeHTMLOrSVGElement(el)) {\n                const { style, newVal } = (() => {\n                    if (isTextProp) {\n                        el.style.setProperty(type, value);\n                    }\n                    const style = getComputedStyleFrom(el);\n                    const margin = includeMargin ? getMargin(style, type) : 0;\n                    const newVal = (isTextProp ? toNumber(style.getPropertyValue(type)) : value) - margin;\n                    return { style, newVal };\n                })();\n                if ('content-box' === style.getPropertyValue('box-sizing')) {\n                    el.style.setProperty(type, `${newVal - getBorder(style, type) - getPadding(style, type)}px`);\n                } else {\n                    el.style.setProperty(type, `${newVal}px`);\n                }\n            }\n        }\n        return dom;\n    }\n}\n\n/** @internal helper for `position()` and `offset()` */\nfunction getOffsetPosition(el: Element): { top: number; left: number; } {\n    // for display none\n    if (el.getClientRects().length <= 0) {\n        return { top: 0, left: 0 };\n    }\n\n    const rect = el.getBoundingClientRect();\n    const view = getDefaultView(el);\n    return {\n        top: rect.top + view.scrollY,\n        left: rect.left + view.scrollX,\n    };\n}\n\n/**\n * @en Get offset[Width | Height]. This function will work SVGElement, too.\n * @ja offse[Width | Height] の取得. SVGElement にも適用可能\n */\nexport function getOffsetSize(el: HTMLOrSVGElement, type: 'width' | 'height'): number {\n    if (null != (el as HTMLElement).offsetWidth) {\n        // (offsetWidth / offsetHeight)\n        return (el as unknown as Record<string, number>)[`offset${classify(type)}`];\n    } else {\n        /*\n         * [NOTE] SVGElement は offsetWidth がサポートされない\n         *        getBoundingClientRect() は transform に影響を受けるため,\n         *        定義通り border, paddin を含めた値を算出する\n         */\n        const style = getComputedStyleFrom(el as SVGElement);\n        const size = toNumber(style.getPropertyValue(type));\n        if ('content-box' === style.getPropertyValue('box-sizing')) {\n            return size + getBorder(style, type) + getPadding(style, type);\n        } else {\n            return size;\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the style management methods.\n * @ja スタイル関連メソッドを集約した Mixin Base クラス\n */\nexport class DOMStyles<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Styles\n\n    /**\n     * @en Get the computed style properties for the first element in the set of matched elements.\n     * @ja 先頭要素の CSS に設定されているプロパティ値を取得\n     *\n     * @param name\n     *  - `en` CSS property name as chain-cace.\n     *  - `ja` CSS プロパティ名をチェインケースで指定\n     * @returns\n     *  - `en` CSS property value string.\n     *  - `ja` CSS プロパティ値を文字列で返却\n     */\n    public css(name: string): string;\n\n    /**\n     * @en Get the multiple computed style properties for the first element in the set of matched elements.\n     * @ja 先頭要素の CSS に設定されているプロパティ値を複数取得\n     *\n     * @param names\n     *  - `en` CSS property name array as chain-cace.\n     *  - `ja` CSS プロパティ名配列をチェインケースで指定\n     * @returns\n     *  - `en` CSS property-value object.\n     *  - `ja` CSS プロパティを格納したオブジェクト\n     */\n    public css(names: string[]): PlainObject<string>;\n\n    /**\n     * @en Set CSS propertiy for the set of matched elements.\n     * @ja 要素の CSS プロパティに値を設定\n     *\n     * @param name\n     *  - `en` CSS property name as chain-cace.\n     *  - `ja` CSS プロパティ名をチェインケースで指定\n     * @param value\n     *  - `en` string value to set for the property. if null passed, remove property.\n     *  - `ja` 設定する値を文字列で指定. null 指定で削除.\n     */\n    public css(name: string, value: string | null): this;\n\n    /**\n     * @en Set one or more CSS properties for the set of matched elements.\n     * @ja 要素の CSS 複数のプロパティに値を設定\n     *\n     * @param properties\n     *  - `en` An object of property-value pairs to set.\n     *  - `ja` CSS プロパティを格納したオブジェクト\n     */\n    public css(properties: PlainObject<string | number | boolean | null>): this;\n\n    public css(name: string | string[] | PlainObject<string | number | boolean | null>, value?: string | null): string | PlainObject<string> | this {\n        // valid elements\n        if (!isTypeHTMLOrSVGElement(this)) {\n            if (isString(name)) {\n                return null == value ? '' : this;\n            } else if (isArray(name)) {\n                return {} as PlainObject<string>;\n            } else {\n                return this;\n            }\n        }\n\n        if (isString(name)) {\n            if (undefined === value) {\n                // get property single\n                const el = this[0] as Element;\n                return getComputedStyleFrom(el).getPropertyValue(dasherize(name));\n            } else {\n                // set property single\n                const propName = dasherize(name);\n                const remove = (null === value);\n                for (const el of this) {\n                    if (isNodeHTMLOrSVGElement(el)) {\n                        if (remove) {\n                            el.style.removeProperty(propName);\n                        } else {\n                            el.style.setProperty(propName, value);\n                        }\n                    }\n                }\n                return this;\n            }\n        } else if (isArray(name)) {\n            // get multiple properties\n            const el = this[0] as Element;\n            const view = getDefaultView(el);\n            const props = {} as PlainObject<string>;\n            for (const key of name) {\n                const propName = dasherize(key);\n                props[key] = view.getComputedStyle(el).getPropertyValue(propName);\n            }\n            return props;\n        } else {\n            // set multiple properties\n            const props = ensureChainCaseProperies(name);\n            for (const el of this) {\n                if (isNodeHTMLOrSVGElement(el)) {\n                    const { style } = el;\n                    for (const propName in props) {\n                        if (null === props[propName]) {\n                            style.removeProperty(propName);\n                        } else {\n                            style.setProperty(propName, props[propName]);\n                        }\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Get the current computed width for the first element in the set of matched elements or set the width of every matched element.\n     * @ja 最初の要素の計算済み横幅をピクセル単位で取得\n     */\n    public width(): number;\n\n    /**\n     * @en Set the CSS width of each element in the set of matched elements.\n     * @ja 配下の要素の横幅を指定\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` 引数の値が数値のときは `px` として扱い, 文字列は CSS のルールに従う\n     */\n    public width(value: number | string): this;\n\n    public width(value?: number | string): number | this {\n        return manageSizeFor(this, 'width', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed height for the first element in the set of matched elements or set the width of every matched element.\n     * @ja 最初の要素の計算済み立幅をピクセル単位で取得\n     */\n    public height(): number;\n\n    /**\n     * @en Set the CSS height of each element in the set of matched elements.\n     * @ja 配下の要素の縦幅を指定\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` 引数の値が数値のときは `px` として扱い, 文字列は CSS のルールに従う\n     */\n    public height(value: number | string): this;\n\n    public height(value?: number | string): number | this {\n        return manageSizeFor(this, 'height', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed inner width for the first element in the set of matched elements, including padding but not border.\n     * @ja 最初の要素の内部横幅(borderは除き、paddingは含む)を取得\n     */\n    public innerWidth(): number;\n\n    /**\n     * @en Set the CSS inner width of each element in the set of matched elements.\n     * @ja 配下の要素の内部横幅(borderは除き、paddingは含む)を設定\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` 引数の値が数値のときは `px` として扱い, 文字列は CSS のルールに従う\n     */\n    public innerWidth(value: number | string): this;\n\n    public innerWidth(value?: number | string): number | this {\n        return manageInnerSizeFor(this, 'width', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed inner height for the first element in the set of matched elements, including padding but not border.\n     * @ja 最初の要素の内部縦幅(borderは除き、paddingは含む)を取得\n     */\n    public innerHeight(): number;\n\n    /**\n     * @en Set the CSS inner height of each element in the set of matched elements.\n     * @ja 配下の要素の内部縦幅(borderは除き、paddingは含む)を設定\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` 引数の値が数値のときは `px` として扱い, 文字列は CSS のルールに従う\n     */\n    public innerHeight(value: number | string): this;\n\n    public innerHeight(value?: number | string): number | this {\n        return manageInnerSizeFor(this, 'height', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed outer width (including padding, border, and optionally margin) for the first element in the set of matched elements.\n     * @ja 最初の要素の外部横幅(border、paddingを含む)を取得. オプション指定によりマージン領域を含めたものも取得可\n     *\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` マージン領域を含める場合は true を指定\n     */\n    public outerWidth(includeMargin?: boolean): number;\n\n    /**\n     * @en Set the CSS outer width of each element in the set of matched elements.\n     * @ja 配下の要素の外部横幅(border、paddingを含む)を設定\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` 引数の値が数値のときは `px` として扱い, 文字列は CSS のルールに従う\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` マージン領域を含める場合は true を指定\n     */\n    public outerWidth(value: number | string, includeMargin?: boolean): this;\n\n    public outerWidth(...args: unknown[]): number | this {\n        const { includeMargin, value } = parseOuterSizeArgs(...args);\n        return manageOuterSizeFor(this, 'width', includeMargin, value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed outer height (including padding, border, and optionally margin) for the first element in the set of matched elements.\n     * @ja 最初の要素の外部縦幅(border、paddingを含む)を取得. オプション指定によりマージン領域を含めたものも取得可\n     *\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` マージン領域を含める場合は true を指定\n     */\n    public outerHeight(includeMargin?: boolean): number;\n\n    /**\n     * @en Set the CSS outer height of each element in the set of matched elements.\n     * @ja 配下の要素の外部縦幅(border、paddingを含む)を設定\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` 引数の値が数値のときは `px` として扱い, 文字列は CSS のルールに従う\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` マージン領域を含める場合は true を指定\n     */\n    public outerHeight(value: number | string, includeMargin?: boolean): this;\n\n    public outerHeight(...args: unknown[]): number | this {\n        const { includeMargin, value } = parseOuterSizeArgs(...args);\n        return manageOuterSizeFor(this, 'height', includeMargin, value) as (number | this);\n    }\n\n    /**\n     * @en Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.\n     * @ja 最初の要素の親要素からの相対的な表示位置を返却\n     */\n    public position(): { top: number; left: number; } {\n        // valid elements\n        if (!isTypeHTMLOrSVGElement(this)) {\n            return { top: 0, left: 0 };\n        }\n\n        let offset: { top: number; left: number; };\n        let parentOffset = { top: 0, left: 0 };\n        const el = this[0];\n        const { position, marginTop: mt, marginLeft: ml } = $(el).css(['position', 'marginTop', 'marginLeft']);\n        const marginTop = toNumber(mt);\n        const marginLeft = toNumber(ml);\n\n        // position:fixed elements are offset from the viewport, which itself always has zero offset\n        if ('fixed' === position) {\n            // Assume position:fixed implies availability of getBoundingClientRect\n            offset = el.getBoundingClientRect();\n        } else {\n            offset = getOffsetPosition(el);\n\n            // Account for the *real* offset parent, which can be the document or its root element\n            // when a statically positioned element is identified\n            const doc = el.ownerDocument;\n            let offsetParent = getOffsetParent(el) ?? doc.documentElement;\n            let $offsetParent = $(offsetParent);\n            while (offsetParent &&\n                (offsetParent === doc.body || offsetParent === doc.documentElement) &&\n                'static' === $offsetParent.css('position')\n            ) {\n                offsetParent = offsetParent.parentNode as Element;\n                $offsetParent = $(offsetParent);\n            }\n            if (offsetParent && offsetParent !== el && Node.ELEMENT_NODE === offsetParent.nodeType) {\n                // Incorporate borders into its offset, since they are outside its content origin\n                parentOffset = getOffsetPosition(offsetParent);\n                const { borderTopWidth, borderLeftWidth } = $offsetParent.css(['borderTopWidth', 'borderLeftWidth']);\n                parentOffset.top += toNumber(borderTopWidth);\n                parentOffset.left += toNumber(borderLeftWidth);\n            }\n        }\n\n        // Subtract parent offsets and element margins\n        return {\n            top: offset.top - parentOffset.top - marginTop,\n            left: offset.left - parentOffset.left - marginLeft,\n        };\n    }\n\n    /**\n     * @en Get the current coordinates of the first element in the set of matched elements, relative to the document.\n     * @ja document を基準として, マッチしている要素集合の1つ目の要素の現在の座標を取得\n     */\n    public offset(): { top: number; left: number; };\n\n    /**\n     * @en Set the current coordinates of every element in the set of matched elements, relative to the document.\n     * @ja 配下の要素に document を基準にした現在座標を設定\n     *\n     * @param coordinates\n     *  - `en` An object containing the properties `top` and `left`.\n     *  - `ja` `top`, `left` プロパティを含むオブジェクトを指定\n     */\n    public offset(coordinates: { top?: number; left?: number; }): this;\n\n    public offset(coordinates?: { top?: number; left?: number; }): { top: number; left: number; } | this {\n        // valid elements\n        if (!isTypeHTMLOrSVGElement(this)) {\n            return null == coordinates ? { top: 0, left: 0 } : this;\n        } else if (null == coordinates) {\n            // get\n            return getOffsetPosition(this[0]);\n        } else {\n            // set\n            for (const el of this) {\n                const $el = $(el);\n                const props: { top?: string; left?: string; } = {};\n                const { position, top: cssTop, left: cssLeft } = $el.css(['position', 'top', 'left']);\n\n                // Set position first, in-case top/left are set even on static elem\n                if ('static' === position) {\n                    (el as HTMLElement).style.position = 'relative';\n                }\n\n                const curOffset = $el.offset();\n                const curPosition = (() => {\n                    const needCalculatePosition\n                        = ('absolute' === position || 'fixed' === position) && (cssTop + cssLeft).includes('auto');\n                    if (needCalculatePosition) {\n                        return $el.position();\n                    } else {\n                        return { top: toNumber(cssTop), left: toNumber(cssLeft) };\n                    }\n                })();\n\n                if (null != coordinates.top) {\n                    props.top = `${(coordinates.top - curOffset.top) + curPosition.top}px`;\n                }\n                if (null != coordinates.left) {\n                    props.left = `${(coordinates.left - curOffset.left) + curPosition.left}px`;\n                }\n\n                $el.css(props as PlainObject<string>);\n            }\n            return this;\n        }\n    }\n}\n\nsetMixClassAttribute(DOMStyles, 'protoExtendsOnly');\n","/* eslint-disable\n    no-invalid-this,\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Accessible,\n    isFunction,\n    isString,\n    isArray,\n    combination,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport { CustomEvent } from './ssr';\nimport {\n    ElementBase,\n    DOM,\n    dom as $,\n} from './static';\nimport { DOMIterable, isTypeElement } from './base';\nimport type { ConnectEventMap } from './detection';\n\n/** @internal */\ninterface InternalEventListener extends EventListener {\n    origin?: EventListener;\n}\n\n/** @internal */\ninterface EventListenerHandler {\n    listener: InternalEventListener;\n    proxy: EventListener;\n}\n\n/** @internal */\ninterface BindInfo {\n    registered: Set<EventListener>;\n    handlers: EventListenerHandler[];\n}\n\n/** @internal */\ntype BindEventContext = Record<string, BindInfo>;\n\n/** @internal */\nconst enum Const {\n    COOKIE_SEPARATOR  = '|',\n    ADDRESS_EVENT     = 0,\n    ADDRESS_NAMESPACE = 1,\n    ADDRESS_OPTIONS   = 2,\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */\nconst _eventContextMap = {\n    eventData: new WeakMap<ElementBase, unknown[]>(),\n    eventListeners: new WeakMap<ElementBase, BindEventContext>(),\n    liveEventListeners: new WeakMap<ElementBase, BindEventContext>(),\n};\n\n/** @internal query event-data from element */\nfunction queryEventData(event: Event): unknown[] {\n    const data = _eventContextMap.eventData.get(event.target as Element) ?? [];\n    data.unshift(event);\n    return data;\n}\n\n/** @internal register event-data with element */\nfunction registerEventData(elem: ElementBase, eventData: unknown[]): void {\n    _eventContextMap.eventData.set(elem, eventData);\n}\n\n/** @internal delete event-data by element */\nfunction deleteEventData(elem: ElementBase): void {\n    _eventContextMap.eventData.delete(elem);\n}\n\n/** @internal normalize event namespace */\nfunction normalizeEventNamespaces(event: string): string {\n    const namespaces = event.split('.');\n    const main = namespaces.shift()!;\n    if (!namespaces.length) {\n        return main;\n    } else {\n        namespaces.sort();\n        return `${main}.${namespaces.join('.')}`;\n    }\n}\n\n/** @internal split event namespaces */\nfunction splitEventNamespaces(event: string): { type: string; namespace: string; }[] {\n    const retval: { type: string; namespace: string; }[] = [];\n\n    const namespaces = event.split('.');\n    const main = namespaces.shift()!;\n\n    if (!namespaces.length) {\n        retval.push({ type: main, namespace: '' });\n    } else {\n        namespaces.sort();\n\n        const combos: string[][] = [];\n        for (let i = namespaces.length; i >= 1; i--) {\n            combos.push(...combination(namespaces, i));\n        }\n\n        const signature = `.${namespaces.join('.')}.`;\n        retval.push({ type: main, namespace: signature });\n        for (const ns of combos) {\n            retval.push({ type: `${main}.${ns.join('.')}`, namespace: signature });\n        }\n    }\n\n    return retval;\n}\n\n/** @internal reverse resolution event namespaces */\nfunction resolveEventNamespaces(elem: ElementBase, event: string): { type: string; namespace: string; }[] {\n    const retval: { type: string; namespace: string; }[] = [];\n\n    const namespaces = event.split('.');\n    const main = namespaces.shift()!;\n    const type = normalizeEventNamespaces(event);\n\n    if (!namespaces.length) {\n        retval.push({ type: main, namespace: '' });\n    } else {\n        const query = (context: BindEventContext | undefined): void => {\n            if (context) {\n                const cookies = Object.keys(context);\n\n                const signatures = cookies.filter(cookie => {\n                    return type === cookie.split(Const.COOKIE_SEPARATOR)[Const.ADDRESS_EVENT];\n                }).map(cookie => {\n                    return cookie.split(Const.COOKIE_SEPARATOR)[Const.ADDRESS_NAMESPACE];\n                });\n\n                const siblings = cookies.filter(cookie => {\n                    for (const signature of signatures) {\n                        if (signature === cookie.split(Const.COOKIE_SEPARATOR)[Const.ADDRESS_NAMESPACE]) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }).map(cookie => {\n                    const seed = cookie.split(Const.COOKIE_SEPARATOR);\n                    return { type: seed[Const.ADDRESS_EVENT], namespace: seed[Const.ADDRESS_NAMESPACE] };\n                });\n\n                retval.push(...siblings);\n            }\n        };\n\n        const { eventListeners, liveEventListeners } = _eventContextMap;\n        query(eventListeners.get(elem));\n        query(liveEventListeners.get(elem));\n    }\n\n    return retval;\n}\n\n/** @internal convert event cookie from event name, selector, options */\nfunction toCookie(event: string, namespace: string, selector: string, options: AddEventListenerOptions): string {\n    const opts = { ...options };\n    delete opts.once;\n    return `${event}${Const.COOKIE_SEPARATOR}${namespace}${Const.COOKIE_SEPARATOR}${JSON.stringify(opts)}${Const.COOKIE_SEPARATOR}${selector}`;\n}\n\n/** @internal get listener handlers context by element and event */\nfunction getEventListenersHandlers(elem: ElementBase, event: string, namespace: string, selector: string, options: AddEventListenerOptions, ensure: boolean): BindInfo {\n    const eventListeners = selector ? _eventContextMap.liveEventListeners : _eventContextMap.eventListeners;\n    if (!eventListeners.has(elem)) {\n        if (ensure) {\n            eventListeners.set(elem, {});\n        } else {\n            return {\n                registered: undefined!,\n                handlers: [],\n            };\n        }\n    }\n\n    const context = eventListeners.get(elem)!;\n    const cookie = toCookie(event, namespace, selector, options);\n    if (!context[cookie]) {\n        context[cookie] = {\n            registered: new Set<EventListener>(),\n            handlers: [],\n        };\n    }\n\n    return context[cookie];\n}\n\n/** @internal query all event and handler by element, for all `off()` and `clone(true)` */\nfunction extractAllHandlers(elem: ElementBase, remove = true): { event: string; handler: EventListener; options: object; }[] {\n    const handlers: { event: string; handler: EventListener; options: object; }[] = [];\n\n    const query = (context: BindEventContext | undefined): boolean => {\n        if (context) {\n            for (const cookie of Object.keys(context)) {\n                const seed = cookie.split(Const.COOKIE_SEPARATOR);\n                const event = seed[Const.ADDRESS_EVENT];\n                const options = JSON.parse(seed[Const.ADDRESS_OPTIONS]);\n                for (const handler of context[cookie].handlers) {\n                    handlers.push({ event, handler: handler.proxy, options });\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const { eventListeners, liveEventListeners } = _eventContextMap;\n    query(eventListeners.get(elem)) && remove && eventListeners.delete(elem);\n    query(liveEventListeners.get(elem)) && remove && liveEventListeners.delete(elem);\n\n    return handlers;\n}\n\n/** @internal query namespace event and handler by element, for `off(`.${namespace}`)` */\nfunction extractNamespaceHandlers(elem: ElementBase, namespaces: string): { event: string; handler: EventListener; options: object; }[] {\n    const handlers: { event: string; handler: EventListener; options: object; }[] = [];\n\n    const names = namespaces.split('.').filter(n => !!n);\n    const namespaceFilter = (cookie: string): boolean => {\n        for (const namespace of names) {\n            if (cookie.includes(`.${namespace}.`)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    const query = (context: BindEventContext | undefined): void => {\n        if (context) {\n            const cookies = Object.keys(context).filter(namespaceFilter);\n            for (const cookie of cookies) {\n                const seed = cookie.split(Const.COOKIE_SEPARATOR);\n                const event = seed[Const.ADDRESS_EVENT];\n                const options = JSON.parse(seed[Const.ADDRESS_OPTIONS]);\n                const { registered, handlers: _handlers } = context[cookie];\n                for (const handler of _handlers) {\n                    handlers.push({ event, handler: handler.proxy, options });\n                    registered.delete(handler.listener);\n                }\n            }\n        }\n    };\n\n    const { eventListeners, liveEventListeners } = _eventContextMap;\n    query(eventListeners.get(elem));\n    query(liveEventListeners.get(elem));\n\n    return handlers;\n}\n\n/** @internal */\ninterface ParseEventArgsResult {\n    type: string[];\n    selector: string;\n    listener: InternalEventListener;\n    options: AddEventListenerOptions;\n}\n\n/** @internal parse event args */\nfunction parseEventArgs(...args: unknown[]): ParseEventArgsResult {\n    let [type, selector, listener, options] = args;\n    if (isFunction(selector)) {\n        [type, listener, options] = args;\n        selector = undefined;\n    }\n\n    type = !type ? [] : (isArray(type) ? type : [type]);\n    selector = selector || '';\n    if (!options) {\n        options = {};\n    } else if (true === options) {\n        options = { capture: true };\n    }\n\n    return { type, selector, listener, options } as ParseEventArgsResult;\n}\n\n/** @internal */ const _noTrigger = ['resize', 'scroll'];\n\n/** @internal event-shortcut impl */\nfunction eventShortcut<T extends ElementBase>(\n    this: DOMEvents<Accessible<T, () => void>>,\n    name: string,\n    handler?: EventListener,\n    options?: boolean | AddEventListenerOptions\n): DOMEvents<T> {\n    if (null == handler) {\n        for (const el of this) {\n            if (!_noTrigger.includes(name)) {\n                if (isFunction(el[name])) {\n                    el[name]();\n                } else {\n                    $(el as any).trigger(name as any);\n                }\n            }\n        }\n        return this;\n    } else {\n        return this.on(name as any, handler as any, options);\n    }\n}\n\n/** @internal helper for `clone()` */\nfunction cloneEvent(src: Element, dst: Element): void {\n    const contexts = extractAllHandlers(src, false);\n    for (const context of contexts) {\n        dst.addEventListener(context.event, context.handler, context.options);\n    }\n}\n\n/** @internal helper for `clone()` */\nfunction cloneElement(elem: Element, withEvents: boolean, deep: boolean): Element {\n    const clone = elem.cloneNode(true) as Element;\n\n    if (withEvents) {\n        if (deep) {\n            const srcElements = elem.querySelectorAll('*');\n            const dstElements = clone.querySelectorAll('*');\n            for (const [index] of srcElements.entries()) {\n                cloneEvent(srcElements[index], dstElements[index]);\n            }\n        } else {\n            cloneEvent(elem, clone);\n        }\n    }\n\n    return clone;\n}\n\n/** @internal helper for self event manage */\nfunction handleSelfEvent<TElement extends ElementBase>(\n    self: DOMEvents<TElement>,\n    callback: (event: Event, ...args: unknown[]) => void,\n    eventName: EventTypeOrNamespace<DOMEventMap<HTMLElement | Window>>,\n    permanent: boolean,\n): DOMEvents<TElement> {\n    function fireCallBack(this: Element, e: Event): void {\n        if (e.target !== this) {\n            return;\n        }\n        callback.call(this, e);\n        if (!permanent) {\n            (self as DOMEvents<Node>).off(eventName, fireCallBack);\n        }\n    }\n    isFunction(callback) && (self as DOMEvents<Node>).on(eventName, fireCallBack);\n    return self;\n}\n\n//__________________________________________________________________________________________________//\n\n/* eslint-disable @stylistic:js/indent */\nexport type DOMEventMap<T>\n    = T extends Window ? WindowEventMap\n    : T extends Document ? DocumentEventMap\n    : T extends HTMLBodyElement ? HTMLBodyElementEventMap & ConnectEventMap\n    : T extends HTMLMediaElement ? HTMLMediaElementEventMap & ConnectEventMap\n    : T extends HTMLElement ? HTMLElementEventMap & ConnectEventMap\n    : T extends Element ? ElementEventMap & ConnectEventMap\n    : GlobalEventHandlersEventMap;\n/* eslint-enable @stylistic:js/indent */\n\nexport type DOMEventListener<T = HTMLElement, M extends DOMEventMap<T> = DOMEventMap<T>> = (event: M[keyof M], ...args: unknown[]) => unknown;\n\nexport type EventWithNamespace<T extends DOMEventMap<any>> = keyof T | `${string & keyof T}.${string}`;\nexport type MakeEventType<T, M> = T extends keyof M ? keyof M : (T extends `${string & keyof M}.${infer C}` ? `${string & keyof M}.${C}` : never);\nexport type EventType<T extends DOMEventMap<any>> = MakeEventType<EventWithNamespace<T>, T>;\nexport type EventTypeOrNamespace<T extends DOMEventMap<any>> = EventType<T> | `.${string}`;\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the event managements.\n * @ja イベント管理を集約した Mixin Base クラス\n */\nexport class DOMEvents<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Events basic\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja 要素に対して, 1つまたは複数のイベントハンドラを設定 (動的要素にも有効)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` イベント発行元をフィルタリングするセレクタ文字列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public on<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        selector: string,\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja 要素に対して, 1つまたは複数のイベントハンドラを設定 (動的要素にも有効)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public on<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public on(...args: unknown[]): this {\n        const { type: events, selector, listener, options } = parseEventArgs(...args);\n\n        function handleLiveEvent(e: Event): void {\n            if (e.defaultPrevented) {\n                return;\n            }\n            const eventData = queryEventData(e);\n            const $target = $(e.target as Element | null) as DOM<Element>;\n            if ($target.is(selector)) {\n                listener.apply($target[0], eventData);\n            } else {\n                for (const parent of $target.parents()) {\n                    if ($(parent).is(selector)) {\n                        listener.apply(parent, eventData);\n                    }\n                }\n            }\n        }\n\n        function handleEvent(this: DOMEvents<TElement>, e: Event): void {\n            listener.apply(this, queryEventData(e));\n        }\n\n        const proxy = selector ? handleLiveEvent : handleEvent;\n\n        for (const el of this) {\n            for (const event of events) {\n                const combos = splitEventNamespaces(event);\n                for (const combo of combos) {\n                    const { type, namespace } = combo;\n                    const { registered, handlers } = getEventListenersHandlers(el, type, namespace, selector, options, true);\n                    if (registered && !registered.has(listener)) {\n                        registered.add(listener);\n                        handlers.push({\n                            listener,\n                            proxy,\n                        });\n                        el.addEventListener(type, proxy, options);\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Remove event handler. The handler designated at {@link DOMEvents.on | on}() or {@link DOMEvents.once | once}() and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja 設定されているイベントハンドラの解除. {@link DOMEvents.on | on}() または {@link DOMEvents.once | once}() と同条件で指定したものが解除される <br>\n     *     引数が無い場合はすべてのハンドラが解除される.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` イベント発行元をフィルタリングするセレクタ文字列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public off<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        selector: string,\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Remove event handler. The handler designated at {@link DOMEvents.on | on}() or {@link DOMEvents.once | once}() and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja 設定されているイベントハンドラの解除. {@link DOMEvents.on | on}() または {@link DOMEvents.once | once}() と同条件で指定したものが解除される <br>\n     *     引数が無い場合はすべてのハンドラが解除される.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public off<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Remove all event handler.\n     * @ja 設定されているすべてのイベントハンドラの解除\n     */\n    public off(): this;\n\n    public off(...args: unknown[]): this {\n        const { type: events, selector, listener, options } = parseEventArgs(...args);\n\n        if (events.length <= 0) {\n            for (const el of this) {\n                const contexts = extractAllHandlers(el);\n                for (const context of contexts) {\n                    el.removeEventListener(context.event, context.handler, context.options);\n                }\n            }\n        } else {\n            for (const el of this) {\n                for (const event of events) {\n                    if (event.startsWith('.')) {\n                        const contexts = extractNamespaceHandlers(el, event);\n                        for (const context of contexts) {\n                            el.removeEventListener(context.event, context.handler, context.options);\n                        }\n                    } else {\n                        const combos = resolveEventNamespaces(el, event);\n                        for (const combo of combos) {\n                            const { type, namespace } = combo;\n                            const { registered, handlers } = getEventListenersHandlers(el, type, namespace, selector, options, false);\n                            if (0 < handlers.length) {\n                                for (let i = handlers.length - 1; i >= 0; i--) { // backward operation\n                                    const handler = handlers[i];\n                                    if (\n                                        (listener && handler.listener === listener) ||\n                                        (handler?.listener?.origin === listener) ||\n                                        (!listener)\n                                    ) {\n                                        el.removeEventListener(type, handler.proxy, options);\n                                        handlers.splice(i, 1);\n                                        registered.delete(handler.listener);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Add event handler function to one or more events to the elements that will be executed only once. (live event available)\n     * @ja 要素に対して, 一度だけ呼び出されるイベントハンドラを設定 (動的要素に対しても有効)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` イベント発行元をフィルタリングするセレクタ文字列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public once<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        selector: string,\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Add event handler function to one or more events to the elements that will be executed only once. (live event available)\n     * @ja 要素に対して, 一度だけ呼び出されるイベントハンドラを設定 (動的要素に対しても有効)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public once<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public once(...args: unknown[]): this {\n        const { type, selector, listener, options } = parseEventArgs(...args);\n        const opts = { ...options, ...{ once: true } };\n\n        const self = this;\n        function onceHandler(this: DOMEvents<TElement>, ...eventArgs: unknown[]): void {\n            listener.apply(this, eventArgs);\n            self.off(type as any, selector, onceHandler, opts);\n            delete onceHandler.origin;\n        }\n        onceHandler.origin = listener as InternalEventListener | undefined;\n        return this.on(type as any, selector, onceHandler, opts);\n    }\n\n    /**\n     * @en Execute all handlers added to the matched elements for the specified event.\n     * @ja 設定されているイベントハンドラに対してイベントを発行\n     *\n     * @example <br>\n     *\n     * ```ts\n     * // w/ event-namespace behaviour\n     * $('.link').on('click.hoge.piyo', (e) => { ... });\n     * $('.link').on('click.hoge',  (e) => { ... });\n     *\n     * $('.link').trigger('.hoge');           // compile error. (not fire)\n     * $('.link').trigger('click.hoge');      // fire both.\n     * $('.link').trigger('click.hoge.piyo'); // fire only first one\n     * ```\n     * @param seed\n     *  - `en` event name or event name array. / `Event` instance or `Event` instance array.\n     *  - `ja` イベント名またはイベント名配列 / `Event` インスタンスまたは `Event` インスタンス配列\n     * @param eventData\n     *  - `en` optional sending data.\n     *  - `ja` 送信する任意のデータ\n     */\n    public trigger<TEventMap extends DOMEventMap<TElement>>(\n        seed: EventType<TEventMap> | (EventType<TEventMap>)[] | Event | Event[] | (EventType<TEventMap> | Event)[],\n        ...eventData: unknown[]\n    ): this {\n        const convert = (arg: EventType<TEventMap> | Event): Event => {\n            if (isString(arg)) {\n                return new CustomEvent(normalizeEventNamespaces(arg), {\n                    detail: eventData,\n                    bubbles: true,\n                    cancelable: true,\n                });\n            } else {\n                return arg as Event;\n            }\n        };\n\n        const events = isArray(seed) ? seed : [seed];\n\n        for (const event of events) {\n            const e = convert(event);\n            for (const el of this) {\n                registerEventData(el, eventData);\n                el.dispatchEvent(e);\n                deleteEventData(el);\n            }\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Events utility\n\n    /**\n     * @en Shortcut for {@link DOMEvents.once | once}('transitionstart').\n     * @ja {@link DOMEvents.once | once}('transitionstart') のユーティリティ\n     *\n     * @param callback\n     *  - `en` `transitionstart` handler.\n     *  - `ja` `transitionstart` ハンドラ\n     * @param permanent\n     *  - `en` if set `true`, callback keep living until elements removed.\n     *  - `ja` `true` を設定した場合, 要素が削除されるまでコールバックが有効\n     */\n    public transitionStart(callback: (event: TransitionEvent, ...args: unknown[]) => void, permanent = false): this {\n        return handleSelfEvent(this, callback, 'transitionstart', permanent) as this;\n    }\n\n    /**\n     * @en Shortcut for {@link DOMEvents.once | once}('transitionend').\n     * @ja {@link DOMEvents.once | once}('transitionend') のユーティリティ\n     *\n     * @param callback\n     *  - `en` `transitionend` handler.\n     *  - `ja` `transitionend` ハンドラ\n     * @param permanent\n     *  - `en` if set `true`, callback keep living until elements removed.\n     *  - `ja` `true` を設定した場合, 要素が削除されるまでコールバックが有効\n     */\n    public transitionEnd(callback: (event: TransitionEvent, ...args: unknown[]) => void, permanent = false): this {\n        return handleSelfEvent(this, callback, 'transitionend', permanent) as this;\n    }\n\n    /**\n     * @en Shortcut for {@link DOMEvents.once | once}('animationstart').\n     * @ja {@link DOMEvents.once | once}('animationstart') のユーティリティ\n     *\n     * @param callback\n     *  - `en` `animationstart` handler.\n     *  - `ja` `animationstart` ハンドラ\n     * @param permanent\n     *  - `en` if set `true`, callback keep living until elements removed.\n     *  - `ja` `true` を設定した場合, 要素が削除されるまでコールバックが有効\n     */\n    public animationStart(callback: (event: AnimationEvent, ...args: unknown[]) => void, permanent = false): this {\n        return handleSelfEvent(this, callback, 'animationstart', permanent) as this;\n    }\n\n    /**\n     * @en Shortcut for {@link DOMEvents.once | once}('animationend').\n     * @ja {@link DOMEvents.once | once}('animationend') のユーティリティ\n     *\n     * @param callback\n     *  - `en` `animationend` handler.\n     *  - `ja` `animationend` ハンドラ\n     * @param permanent\n     *  - `en` if set `true`, callback keep living until elements removed.\n     *  - `ja` `true` を設定した場合, 要素が削除されるまでコールバックが有効\n     */\n    public animationEnd(callback: (event: AnimationEvent, ...args: unknown[]) => void, permanent = false): this {\n        return handleSelfEvent(this, callback, 'animationend', permanent) as this;\n    }\n\n    /**\n     * @en Bind one or two handlers to the matched elements, to be executed when the `mouseenter` and `mouseleave` the elements.\n     * @ja 1つまたは2つのハンドラを指定し, 一致した要素の `mouseenter`, `mouseleave` を検知\n     *\n     * @param handlerIn(Out)\n     *  - `en` A function to execute when the `mouseenter` the element. <br>\n     *        If handler set only one, a function to execute when the `mouseleave` the element, too.\n     *  - `ja` `mouseenter` イベントハンドラを指定. <br>\n     *          引数が1つである場合, `mouseleave` ハンドラも兼ねる\n     * @param handlerOut\n     *  - `en` A function to execute when the `mouseleave` the element.\n     *  - `ja` `mouseleave` ハンドラを指定\n     */\n    public hover(handlerIn: DOMEventListener, handlerOut?: DOMEventListener): this {\n        handlerOut = handlerOut ?? handlerIn;\n        return this.mouseenter(handlerIn).mouseleave(handlerOut);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Events shortcut\n\n    /**\n     * @en Trigger or handle `click` event.\n     * @ja `click` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public click(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('click', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `dblclick` event.\n     * @ja `dblclick` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public dblclick(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('dblclick', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `blur` event.\n     * @ja `blur` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public blur(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('blur', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `focus` event.\n     * @ja `focus` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public focus(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('focus', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `focusin` event.\n     * @ja `focusin` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public focusin(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('focusin', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `focusout` event.\n     * @ja `focusout` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public focusout(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('focusout', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `keyup` event.\n     * @ja `keyup` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public keyup(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('keyup', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `keydown` event.\n     * @ja `keydown` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public keydown(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('keydown', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `keypress` event.\n     * @ja `keypress` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public keypress(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('keypress', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `submit` event.\n     * @ja `submit` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public submit(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('submit', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `contextmenu` event.\n     * @ja `contextmenu` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public contextmenu(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('contextmenu', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `change` event.\n     * @ja `change` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public change(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('change', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mousedown` event.\n     * @ja `mousedown` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mousedown(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mousedown', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mousemove` event.\n     * @ja `mousemove` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mousemove(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mousemove', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseup` event.\n     * @ja `mouseup` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mouseup(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseup', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseenter` event.\n     * @ja `mouseenter` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mouseenter(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseenter', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseleave` event.\n     * @ja `mouseleave` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mouseleave(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseleave', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseout` event.\n     * @ja `mouseout` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mouseout(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseout', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseover` event.\n     * @ja `mouseover` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public mouseover(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseover', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchstart` event.\n     * @ja `touchstart` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public touchstart(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchstart', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchend` event.\n     * @ja `touchend` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public touchend(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchend', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchmove` event.\n     * @ja `touchmove` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public touchmove(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchmove', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchcancel` event.\n     * @ja `touchcancel` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public touchcancel(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchcancel', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `resize` event.\n     * @ja `resize` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public resize(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('resize', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `scroll` event.\n     * @ja `scroll` イベントの発行または捕捉\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` イベントハンドラを指定. 省略した場合はイベントを発行\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public scroll(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('scroll', handler, options);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Copying\n\n    /**\n     * @en Create a deep copy of the set of matched elements.\n     * @ja 配下の要素のディープコピーを作成\n     *\n     * @param withEvents\n     *  - `en` A Boolean indicating whether event handlers should be copied along with the elements.\n     *  - `ja` イベントハンドラもコピーするかどうかを決定\n     * @param deep\n     *  - `en` A Boolean indicating whether event handlers for all children of the cloned element should be copied.\n     *  - `ja` boolean値で、配下の要素のすべての子要素に対しても、付随しているイベントハンドラをコピーするかどうかを決定\n     */\n    public clone(withEvents = false, deep = false): DOM<TElement> {\n        const self = this as DOMIterable<TElement> as DOM<TElement>;\n        if (!isTypeElement(self)) {\n            return self;\n        }\n        return self.map((index: number, el: TElement) => {\n            return cloneElement(el as Node as Element, withEvents, deep) as Node as TElement;\n        });\n    }\n}\n\nsetMixClassAttribute(DOMEvents, 'protoExtendsOnly');\n","import {\n    Nullish,\n    isNumber,\n    isFunction,\n    classify,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    isWindowContext,\n    ensurePositiveNumber,\n    swing,\n} from './utils';\nimport { ElementBase } from './static';\nimport {\n    DOMIterable,\n    isNodeElement,\n    isNodeHTMLOrSVGElement,\n    isNodeDocument,\n} from './base';\nimport { getOffsetSize } from './styles';\nimport { requestAnimationFrame } from './ssr';\n\n/**\n * @en {@link DOM}`.scrollTo()` options definition.\n * @ja {@link DOM}`.scrollTo()` に指定するオプション定義\n */\nexport interface DOMScrollOptions {\n    /**\n     * @en the vertical scroll value by pixcels.\n     * @ja 縦スクロール量をピクセルで指定\n     */\n    top?: number;\n\n    /**\n     * @en the horizontal scroll value by pixcels.\n     * @ja 横スクロール量をピクセルで指定\n     */\n    left?: number;\n\n    /**\n     * @en the time to spend on scroll. [msec]\n     * @ja スクロールに費やす時間 [msec]\n     */\n    duration?: number;\n\n    /**\n     * @en timing function default: 'swing'\n     * @ja タイミング関数 既定値: 'swing'\n     */\n    easing?: 'linear' | 'swing' | ((progress: number) => number);\n\n    /**\n     * @en scroll completion callback.\n     * @ja スクロール完了コールバック\n     */\n    callback?: () => void;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal query scroll target element */\nfunction queryTargetElement(el: ElementBase | Nullish): Element | null {\n    if (isNodeElement(el)) {\n        return el;\n    } else if (isNodeDocument(el)) {\n        return el.documentElement;\n    } else if (isWindowContext(el)) {\n        return el.document.documentElement;\n    } else {\n        return null;\n    }\n}\n\n/** @internal helper for `scrollTo()` */\nfunction parseArgs(...args: unknown[]): DOMScrollOptions {\n    const options: DOMScrollOptions = { easing: 'swing' };\n    if (1 === args.length) {\n        Object.assign(options, args[0]);\n    } else {\n        const [left, top, duration, easing, callback] = args;\n        Object.assign(options, {\n            top,\n            left,\n            duration,\n            easing,\n            callback,\n        });\n    }\n\n    options.top      = ensurePositiveNumber(options.top);\n    options.left     = ensurePositiveNumber(options.left);\n    options.duration = ensurePositiveNumber(options.duration);\n\n    return options;\n}\n\n/** @internal helper for `scrollTo()` */\nfunction execScroll(el: HTMLElement | SVGElement, options: DOMScrollOptions): void {\n    const { top, left, duration, easing, callback } = options;\n\n    const initialTop = el.scrollTop;\n    const initialLeft = el.scrollLeft;\n    let enableTop = isNumber(top);\n    let enableLeft = isNumber(left);\n\n    // non animation case\n    if (!duration) {\n        let notify = false;\n        if (enableTop && top !== initialTop) {\n            el.scrollTop = top!;\n            notify = true;\n        }\n        if (enableLeft && left !== initialLeft) {\n            el.scrollLeft = left!;\n            notify = true;\n        }\n        if (notify && isFunction(callback)) {\n            callback();\n        }\n        return;\n    }\n\n    const calcMetrics = (enable: boolean, base: number, initialValue: number, type: 'width' | 'height'): { max: number; new: number; initial: number; } => {\n        if (!enable) {\n            return { max: 0, new: 0, initial: 0 };\n        }\n        const maxValue = (el as unknown as Record<string, number>)[`scroll${classify(type)}`] - getOffsetSize(el, type);\n        const newValue = Math.max(Math.min(base, maxValue), 0);\n        return { max: maxValue, new: newValue, initial: initialValue };\n    };\n\n    const metricsTop = calcMetrics(enableTop, top!, initialTop, 'height');\n    const metricsLeft = calcMetrics(enableLeft, left!, initialLeft, 'width');\n\n    if (enableTop && metricsTop.new === metricsTop.initial) {\n        enableTop = false;\n    }\n    if (enableLeft && metricsLeft.new === metricsLeft.initial) {\n        enableLeft = false;\n    }\n    if (!enableTop && !enableLeft) {\n        // need not to scroll\n        return;\n    }\n\n    const calcProgress = (value: number): number => {\n        if (isFunction(easing)) {\n            return easing(value);\n        } else {\n            return 'linear' === easing ? value : swing(value);\n        }\n    };\n\n    const delta = { top: 0, left: 0 };\n    const startTime = Date.now();\n\n    const animate = (): void => {\n        const elapse = Date.now() - startTime;\n        const progress = Math.max(Math.min(elapse / duration, 1), 0);\n        const progressCoeff = calcProgress(progress);\n\n        // update delta\n        if (enableTop) {\n            delta.top = metricsTop.initial + (progressCoeff * (metricsTop.new - metricsTop.initial));\n        }\n        if (enableLeft) {\n            delta.left = metricsLeft.initial + (progressCoeff * (metricsLeft.new - metricsLeft.initial));\n        }\n\n        // check done\n        if ((enableTop && metricsTop.new > metricsTop.initial && delta.top >= metricsTop.new)       || // scroll down\n            (enableTop && metricsTop.new < metricsTop.initial && delta.top <= metricsTop.new)       || // scroll up\n            (enableLeft && metricsLeft.new > metricsLeft.initial && delta.left >= metricsLeft.new)  || // scroll right\n            (enableLeft && metricsLeft.new < metricsLeft.initial && delta.left <= metricsLeft.new)     // scroll left\n        ) {\n            // ensure destination\n            enableTop && (el.scrollTop = metricsTop.new);\n            enableLeft && (el.scrollLeft = metricsLeft.new);\n            if (isFunction(callback)) {\n                callback();\n            }\n            // release reference immediately.\n            el = null!;\n            return;\n        }\n\n        // update scroll position\n        enableTop && (el.scrollTop = delta.top);\n        enableLeft && (el.scrollLeft = delta.left);\n\n        requestAnimationFrame(animate);\n    };\n\n    requestAnimationFrame(animate);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the manipulation methods.\n * @ja スクロールメソッドを集約した Mixin Base クラス\n */\nexport class DOMScroll<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Scroll\n\n    /**\n     * @en Get the number of pixels vertical scrolled.\n     * @ja 縦方向スクロールされたピクセル数を取得\n     */\n    public scrollTop(): number;\n\n    /**\n     * @en Set the number of pixels vertical scrolled.\n     * @ja 縦方向スクロールするピクセル数を指定\n     *\n     * @param position\n     *  - `en` the scroll value by pixcels.\n     *  - `ja` スクロール量をピクセルで指定\n     * @param duration\n     *  - `en` the time to spend on scroll. [msec]\n     *  - `ja` スクロールに費やす時間 [msec]\n     * @param easing\n     *  - `en` timing function default: 'swing'\n     *  - `ja` タイミング関数 既定値: 'swing'\n     * @param callback\n     *  - `en` scroll completion callback.\n     *  - `ja` スクロール完了コールバック\n     */\n    public scrollTop(\n        position: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): this;\n\n    public scrollTop(\n        position?: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): number | this {\n        if (null == position) {\n            // getter\n            const el = queryTargetElement(this[0]);\n            return el ? el.scrollTop : 0;\n        } else {\n            // setter\n            return this.scrollTo({\n                top: position,\n                duration,\n                easing,\n                callback,\n            });\n        }\n    }\n\n    /**\n     * @en Get the number of pixels horizontal scrolled.\n     * @ja 横方向スクロールされたピクセル数を取得\n     */\n    public scrollLeft(): number;\n\n    /**\n     * @en Set the number of pixels horizontal scrolled.\n     * @ja 横方向スクロールするピクセル数を指定\n     *\n     * @param position\n     *  - `en` the scroll value by pixcels.\n     *  - `ja` スクロール量をピクセルで指定\n     * @param duration\n     *  - `en` the time to spend on scroll. [msec]\n     *  - `ja` スクロールに費やす時間 [msec]\n     * @param easing\n     *  - `en` timing function default: 'swing'\n     *  - `ja` タイミング関数 既定値: 'swing'\n     * @param callback\n     *  - `en` scroll completion callback.\n     *  - `ja` スクロール完了コールバック\n     */\n    public scrollLeft(\n        position: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): this;\n\n    public scrollLeft(\n        position?: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): number | this {\n        if (null == position) {\n            // getter\n            const el = queryTargetElement(this[0]);\n            return el ? el.scrollLeft : 0;\n        } else {\n            // setter\n            return this.scrollTo({\n                left: position,\n                duration,\n                easing,\n                callback,\n            });\n        }\n    }\n\n    /**\n     * @en Set the number of pixels vertical and horizontal scrolled.\n     * @ja 縦横方向スクロールするピクセル数を指定\n     *\n     * @param x\n     *  - `en` the horizontal scroll value by pixcels.\n     *  - `ja` 横スクロール量をピクセルで指定\n     * @param y\n     *  - `en` the vertical scroll value by pixcels.\n     *  - `ja` 縦スクロール量をピクセルで指定\n     * @param duration\n     *  - `en` the time to spend on scroll. [msec]\n     *  - `ja` スクロールに費やす時間 [msec]\n     * @param easing\n     *  - `en` timing function default: 'swing'\n     *  - `ja` タイミング関数 既定値: 'swing'\n     * @param callback\n     *  - `en` scroll completion callback.\n     *  - `ja` スクロール完了コールバック\n     */\n    public scrollTo(\n        x: number,\n        y: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): this;\n\n    /**\n     * @en Set the scroll values by optoins.\n     * @ja オプションを用いてスクロール指定\n     */\n    public scrollTo(options: DOMScrollOptions): this;\n\n    public scrollTo(...args: unknown[]): this {\n        const options = parseArgs(...args);\n        for (const el of this) {\n            const elem = queryTargetElement(el);\n            if (isNodeHTMLOrSVGElement(elem)) {\n                execScroll(elem, options);\n            }\n        }\n        return this;\n    }\n}\n\nsetMixClassAttribute(DOMScroll, 'protoExtendsOnly');\n","import {\n    Writable,\n    setMixClassAttribute,\n    noop,\n} from '@cdp/core-utils';\nimport type { ElementBase, DOM } from './static';\nimport {\n    DOMIterable,\n    isNodeElement,\n    isTypeElement,\n} from './base';\n\n/**\n * @en {@link DOM} effect parameter.\n * @ja {@link DOM} エフェクト効果のパラメータ\n */\nexport type DOMEffectParameters = Keyframe[] | PropertyIndexedKeyframes | null;\n\n/**\n * @en {@link DOM} effect options.\n * @ja {@link DOM} エフェクト効果のオプション\n */\nexport type DOMEffectOptions = number | KeyframeAnimationOptions;\n\n/**\n * @en {@link DOM} effect context object.\n * @ja {@link DOM} のエフェクト効果のコンテキストオブジェクト\n */\nexport interface DOMEffectContext<TElement extends ElementBase> {\n    /**\n     * @en {@link DOM} instance that called {@link DOMEffects.animate | animate}() method.\n     * @ja {@link DOMEffects.animate | animate}() メソッドを実行した {@link DOM} インスタンス\n     */\n    readonly dom: DOM<TElement>;\n\n    /**\n     * @en `Element` and `Animation` instance map by execution {@link DOMEffects.animate | animate}() method at this time.\n     * @ja 今回 {@link DOMEffects.animate | animate}() 実行した `Element` と `Animation` インスタンスのマップ\n     */\n    readonly animations: Map<TElement, Animation>;\n\n    /**\n     * @en The current finished Promise for this animation.\n     * @ja 対象アニメーションの終了時に発火する `Promise` オブジェクト\n     */\n    readonly finished: Promise<DOMEffectContext<TElement>>;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */ const _animContextMap = new WeakMap<Element, Set<Animation>>();\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the animation/effect methods.\n * @ja アニメーション/エフェクト操作メソッドを集約した Mixin Base クラス\n */\nexport class DOMEffects<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Effects animation\n\n    /**\n     * @en Start animation by `Web Animation API`.\n     * @ja `Web Animation API` を用いてアニメーションを実行\n     */\n    public animate(params: DOMEffectParameters, options: DOMEffectOptions): DOMEffectContext<TElement> {\n        const result = {\n            dom: this as DOMIterable<TElement> as DOM<TElement>,\n            animations: new Map<TElement, Animation>(),\n        } as Writable<DOMEffectContext<TElement>>;\n\n        if (!isTypeElement(this)) {\n            result.finished = Promise.resolve(result);\n            return result;\n        }\n\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const anim = el.animate(params, options);\n                const context = _animContextMap.get(el) ?? new Set();\n                context.add(anim);\n                _animContextMap.set(el, context);\n                result.animations.set(el as Node as TElement, anim);\n            }\n        }\n\n        result.finished = Promise.all([...result.animations.values()].map(anim => anim.finished)).then(() => result);\n\n        return result;\n    }\n\n    /**\n     * @en Cancel current running animation.\n     * @ja 現在実行しているアニメーションを中止\n     */\n    public cancel(): this {\n        if (isTypeElement(this)) {\n            for (const el of this) {\n                const context = _animContextMap.get(el as Element);\n                if (context) {\n                    for (const animation of context) {\n                        animation.cancel();\n                    }\n                    _animContextMap.delete(el as Element);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Finish current running animation.\n     * @ja 現在実行しているアニメーションを終了\n     */\n    public finish(): this {\n        if (isTypeElement(this)) {\n            for (const el of this) {\n                const context = _animContextMap.get(el as Element);\n                if (context) {\n                    for (const animation of context) {\n                        animation.finish();\n                    }\n                    // finish では破棄しない\n                }\n            }\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Effects utility\n\n    /**\n     * @en Execute force reflow.\n     * @ja 強制リフローを実行\n     */\n    public reflow(): this {\n        if (this[0] instanceof HTMLElement) {\n            for (const el of this as unknown as DOM)  {\n                noop(el.offsetHeight);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Execute force repaint.\n     * @ja 強制再描画を実行\n     */\n    public repaint(): this {\n        if (this[0] instanceof HTMLElement) {\n            for (const el of this as unknown as DOM)  {\n                const current = el.style.display;\n                el.style.display = 'none';\n                el.style.display = current;\n            }\n        }\n        return this;\n    }\n}\n\nsetMixClassAttribute(DOMEffects, 'protoExtendsOnly');\n","import {\n    Class,\n    mixins,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    ElementifySeed,\n    QueryContext,\n    elementify,\n} from './utils';\nimport { DOMBase } from './base';\nimport { DOMAttributes } from './attributes';\nimport { DOMTraversing } from './traversing';\nimport { DOMManipulation } from './manipulation';\nimport { DOMStyles } from './styles';\nimport { DOMEvents } from './events';\nimport { DOMScroll } from './scroll';\nimport { DOMEffects } from './effects';\n\ntype DOMFeatures<T extends ElementBase>\n    = DOMBase<T>\n    & DOMAttributes<T>\n    & DOMTraversing<T>\n    & DOMManipulation<T>\n    & DOMStyles<T>\n    & DOMEvents<T>\n    & DOMScroll<T>\n    & DOMEffects<T>;\n\n/**\n * @en {@link DOM} plugin method definition.\n * @ja {@link DOM} プラグインメソッド定義\n *\n * @note\n *  - プラグイン拡張定義はこのインターフェイスマージする.\n *  - TypeScript 3.7 時点で, module interface のマージは module の完全なパスを必要とするため,\n *    本レポジトリでは bundle した `dist/dom.d.ts` を提供する.\n *\n * @see\n *  - https://github.com/microsoft/TypeScript/issues/33326\n *  - https://stackoverflow.com/questions/57848134/trouble-updating-an-interface-using-declaration-merging\n */\nexport interface DOMPlugin { } // eslint-disable-line @typescript-eslint/no-empty-object-type\n\n/**\n * @en This interface provides DOM operations like `jQuery` library.\n * @ja `jQuery` のようなDOM 操作を提供するインターフェイス\n */\nexport interface DOM<T extends ElementBase = HTMLElement> extends DOMFeatures<T>, DOMPlugin { }\n\nexport type DOMSelector<T extends SelectorBase = HTMLElement> = ElementifySeed<T> | DOM<T extends ElementBase ? T : never>;\nexport type DOMResult<T extends SelectorBase> = T extends DOM<ElementBase> ? T : (T extends ElementBase ? DOM<T> : DOM<HTMLElement>);\nexport type DOMIterateCallback<T extends ElementBase> = (index: number, element: T) => boolean | void;\n\n/**\n * @en This class provides DOM operations like `jQuery` library.\n * @ja `jQuery` のようなDOM 操作を提供\n *\n * UNSUPPORTED METHOD LIST\n *\n * [Traversing]\n *  .addBack()\n *  .end()\n *\n * [Effects]\n * .show()\n * .hide()\n * .toggle()\n * .stop()\n * .clearQueue()\n * .delay()\n * .dequeue()\n * .fadeIn()\n * .fadeOut()\n * .fadeTo()\n * .fadeToggle()\n * .queue()\n * .slideDown()\n * .slideToggle()\n * .slideUp()\n */\nexport class DOMClass extends mixins(\n    DOMBase,\n    DOMAttributes,\n    DOMTraversing,\n    DOMManipulation,\n    DOMStyles,\n    DOMEvents,\n    DOMScroll,\n    DOMEffects,\n) {\n    /**\n     * private constructor\n     *\n     * @param elements\n     *  - `en` operation targets `Element` array.\n     *  - `ja` 操作対象の `Element` 配列\n     */\n    private constructor(elements: ElementBase[]) {\n        super(elements);\n        // all source classes have no constructor.\n    }\n\n    /**\n     * @en Create {@link DOM} instance from `selector` arg.\n     * @ja 指定された `selector` {@link DOM} インスタンスを作成\n     *\n     * @internal\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n     *  - `ja` {@link DOM} のもとになるオブジェクト(群)またはセレクタ文字列\n     * @param context\n     *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n     *  - `ja` 使用する `Document` コンテキストを指定. 未指定の場合は環境の既定値が使用される.\n     * @returns {@link DOM} instance.\n     */\n    public static create<T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null): DOMResult<T> {\n        if (selector && !context) {\n            if (isDOMClass(selector)) {\n                return selector as DOMResult<T>;\n            }\n        }\n        return new DOMClass((elementify(selector as ElementifySeed<T>, context))) as unknown as DOMResult<T>;\n    }\n}\n\n// mixin による `instanceof` は無効に設定\nsetMixClassAttribute(DOMClass as unknown as Class, 'instanceOf', null);\n\n/**\n * @en Check the value-type is {@link DOM}.\n * @ja {@link DOM} 型であるか判定\n *\n * @param x\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isDOMClass(x: unknown): x is DOM {\n    return x instanceof DOMClass;\n}\n","import { setup } from './static';\nimport { DOMClass } from './class';\n\n// init for static\nsetup(DOMClass.prototype, DOMClass.create);\n\nexport * from './exports';\nexport { default as default } from './exports';\n","import { safe } from '@cdp/core-utils';\n\n/* ts4.7+ patch: non internal */\n/** !internal */ const navigator        = safe(globalThis.navigator);\n/** !internal */ const screen           = safe(globalThis.screen);\n/** !internal */ const devicePixelRatio = safe(globalThis.devicePixelRatio);\n\n/** @internal */ export const context = { navigator, screen, devicePixelRatio };\n","import { Writable, getGlobal } from '@cdp/core-utils';\nimport { context as globalContext } from './ssr';\n\n/** @internal ts4.7+ patch */\nconst { navigator, screen, devicePixelRatio } = globalContext;\n\n/** @internal */\nconst enum Threshold {\n    TABLET_MIN_WIDTH = 600, // fallback detection value\n}\n\n/**\n * @en Platform information.\n * @ja プラットフォーム情報\n *\n * @see other framework implementation <br>\n *  - Framework7\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-device.js\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-device.d.ts\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-support.js\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-support.d.ts\n *    - https://github.com/framework7io/framework7/blob/v4/src/core/utils/device.js    // check legacy device: iPhoneX etc\n *    - https://github.com/framework7io/framework7/blob/v4/src/core/utils/device.d.ts\n *  - OnsenUI\n *    - https://github.com/OnsenUI/OnsenUI/blob/master/core/src/ons/platform.js\n *  - Web\n *    - https://www.bit-hive.com/articles/20190820\n */\nexport interface Platform {\n    /** true for iOS info */\n    readonly ios: boolean;\n    /** true for Android info */\n    readonly android: boolean;\n    /** true for Android Chrome */\n    readonly androidChrome: boolean;\n    /** true for desktop browser */\n    readonly desktop: boolean;\n    /** true for mobile info */\n    readonly mobile: boolean;\n    /** true for smart phone (including iPod) info */\n    readonly phone: boolean;\n    /** true for tablet info */\n    readonly tablet: boolean;\n    /** true for iPhone */\n    readonly iphone: boolean;\n    /** true for iPhoneX */\n    readonly iphoneX: boolean;\n    /** true for iPod */\n    readonly ipod: boolean;\n    /** true for iPad */\n    readonly ipad: boolean;\n    /** true for MS Edge browser */\n    readonly edge: boolean;\n    /** true for Internet Explorer browser*/\n    readonly ie: boolean;\n    /** true for FireFox browser*/\n    readonly firefox: boolean;\n    /** true for desktop MacOS */\n    readonly macos: boolean;\n    /** true for desktop Windows */\n    readonly windows: boolean;\n    /** true when app running in cordova environment */\n    readonly cordova: boolean;\n    /** true when app running in electron environment */\n    readonly electron: boolean;\n    /** Contains OS can be ios, android or windows (for Windows Phone) */\n    readonly os: string;\n    /** Contains OS version, e.g. 11.2.0 */\n    readonly osVersion: string | null | undefined;\n    /** Device pixel ratio */\n    readonly pixelRatio: number;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */\nconst maybeTablet = (width: number, height: number): boolean => {\n    return (Threshold.TABLET_MIN_WIDTH <= Math.min(width, height));\n};\n\n/** @internal */\nconst supportTouch = (): boolean => {\n    return !!((navigator.maxTouchPoints > 0) || ('ontouchstart' in globalThis));\n};\n\n/**\n * @internal\n * @see Screen.orientation <br>\n *  - https://developer.mozilla.org/ja/docs/Web/API/Screen/orientation\n */\nconst supportOrientation = (ua: string): boolean => {\n    return ('orientation' in globalThis) || (0 <= ua.indexOf('Windows Phone'));\n};\n\n/**\n * @en Query platform information.\n * @ja プラットフォーム情報の取得\n *\n * @param context\n *  - `en` given `Navigator`, `Screen`, `devicePixelRatio` information.\n *  - `ja` 環境の `Navigator`, `Screen`, `devicePixelRatio` を指定\n */\nexport const queryPlatform = (\n    context?: {\n        navigator?: { userAgent: string; platform: string; standalone?: boolean; };\n        screen?: { width: number; height: number; };\n        devicePixelRatio?: number;\n    }\n): Platform => {\n    context = context ?? { navigator, screen, devicePixelRatio };\n    const info = {\n        ios: false,\n        android: false,\n        androidChrome: false,\n        desktop: false,\n        mobile: false,\n        phone: false,\n        tablet: false,\n        iphone: false,\n        iphoneX: false,\n        ipod: false,\n        ipad: false,\n        edge: false,\n        ie: false,\n        firefox: false,\n        macos: false,\n        windows: false,\n        cordova: !!((getGlobal() as Record<string, unknown>)['cordova']),\n        electron: false,\n    } as unknown as Writable<Platform>;\n\n    const { userAgent: ua, platform: os, standalone } = context.navigator ?? navigator as { userAgent: string; platform: string; standalone?: boolean; };\n    const { width: screenWidth, height: screenHeight } = context.screen ?? screen;\n    const pixelRatio = context.devicePixelRatio;\n\n    const android  = /(Android);?[\\s/]+([\\d.]+)?/.exec(ua);\n    let   ipad     = /(iPad).*OS\\s([\\d_]+)/.exec(ua);\n    const ipod     = /(iPod)(.*OS\\s([\\d_]+))?/.exec(ua);\n    let   iphone   = !ipad && /(iPhone\\sOS|iOS)\\s([\\d_]+)/.exec(ua);\n    const ie       = 0 <= ua.indexOf('MSIE ') || 0 <= ua.indexOf('Trident/');\n    const edge     = 0 <= ua.indexOf('Edge/');\n    const firefox  = 0 <= ua.indexOf('Gecko/') && 0 <= ua.indexOf('Firefox/');\n    const windows  = 'Win32' === os;\n    let   macos    = 'MacIntel' === os;\n    const electron = ua.toLowerCase().startsWith('electron');\n\n    // iPhone(X) / iPad(Pro)Desktop Mode\n    if (!iphone && !ipad\n        && macos\n        && supportTouch()\n        && (undefined !== standalone\n//            (1024 === screenWidth && 1366 === screenHeight) // Pro 12.9 portrait\n//         || (1366 === screenWidth && 1024 === screenHeight) // Pro 12.9 landscape\n//         || ( 834 === screenWidth && 1194 === screenHeight) // Pro 11 portrait\n//         || (1194 === screenWidth &&  834 === screenHeight) // Pro 11 landscape\n//         || ( 834 === screenWidth && 1112 === screenHeight) // Pro 10.5 portrait\n//         || (1112 === screenWidth &&  834 === screenHeight) // Pro 10.5 landscape\n//         || ( 768 === screenWidth && 1024 === screenHeight) // other portrait\n//         || (1024 === screenWidth &&  768 === screenHeight) // other landscape\n        )\n    ) {\n        const regex = /(Version)\\/([\\d.]+)/.exec(ua);\n        if (maybeTablet(screenWidth, screenHeight)) {\n            ipad = regex;\n        } else {\n            iphone = regex;\n        }\n        macos = false;\n    }\n\n    info.ie = ie;\n    info.edge = edge;\n    info.firefox = firefox;\n\n    // Android\n    if (android && !windows) {\n        info.os = 'android';\n        info.osVersion = android[2];\n        info.android = true;\n        info.androidChrome = 0 <= ua.toLowerCase().indexOf('chrome');\n        if (0 <= ua.indexOf('Mobile')) {\n            info.phone = true;\n        } else {\n            info.tablet = true;\n        }\n    }\n    if (ipad ?? iphone ?? ipod) {\n        info.os = 'ios';\n        info.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n        info.osVersion = iphone[2].replace(/_/g, '.');\n        info.phone = true;\n        info.iphone = true;\n        // iPhone X\n        if (\n            (375 === screenWidth && 812 === screenHeight) // X, XS portrait\n         || (812 === screenWidth && 375 === screenHeight) // X, XS landscape\n         || (414 === screenWidth && 896 === screenHeight) // XS Max, XR portrait\n         || (896 === screenWidth && 414 === screenHeight) // XS Max, XR landscape\n        ) {\n            info.iphoneX = true;\n        }\n    }\n    if (ipad) {\n        info.osVersion = ipad[2].replace(/_/g, '.');\n        info.tablet = true;\n        info.ipad = true;\n    }\n    if (ipod) {\n        info.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        info.phone = true;\n        info.ipod = true;\n    }\n\n    // Desktop\n    info.desktop = !supportOrientation(ua);\n    if (info.desktop) {\n        info.electron = electron;\n        info.macos    = macos;\n        info.windows  = windows;\n        info.macos && (info.os = 'macos');\n        info.windows && (info.os = 'windows');\n    }\n\n    // Mobile\n    info.mobile = !info.desktop;\n    if (info.mobile && !info.phone && !info.tablet) {\n        if (maybeTablet(screenWidth, screenHeight)) {\n            info.tablet = true;\n        } else {\n            info.phone = true;\n        }\n    }\n\n    // Pixel Ratio\n    info.pixelRatio = pixelRatio ?? 1;\n\n    return info;\n};\n\n/**\n * @en Platform information on runtime.\n * @ja ランタイムのプラットフォーム情報\n */\nexport const platform = queryPlatform();\n","const consoleLogger = {\n  type: 'logger',\n\n  log(args) {\n    this.output('log', args);\n  },\n\n  warn(args) {\n    this.output('warn', args);\n  },\n\n  error(args) {\n    this.output('error', args);\n  },\n\n  output(type, args) {\n    /* eslint no-console: 0 */\n    if (console && console[type]) console[type].apply(console, args);\n  },\n};\n\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{ prefix: `${this.prefix}:${moduleName}:` },\n      ...this.options,\n    });\n  }\n\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\n\nexport default new Logger();\n","class EventEmitter {\n  constructor() {\n    // This is an Object containing Maps:\n    //\n    // { [event: string]: Map<listener: function, numTimesAdded: number> }\n    //\n    // We use a Map for O(1) insertion/deletion and because it can have functions as keys.\n    //\n    // We keep track of numTimesAdded (the number of times it was added) because if you attach the same listener twice,\n    // we should actually call it twice for each emitted event.\n    this.observers = {};\n  }\n\n  on(events, listener) {\n    events.split(' ').forEach((event) => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n\n    this.observers[event].delete(listener);\n  }\n\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nexport default EventEmitter;\n","// http://lea.verou.me/2016/12/resolve-promises-externally-with-this-one-weird-trick/\nexport const defer = () => {\n  let res;\n  let rej;\n\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n\n  promise.resolve = res;\n  promise.reject = rej;\n\n  return promise;\n};\n\nexport const makeString = (object) => {\n  if (object == null) return '';\n  /* eslint prefer-template: 0 */\n  return '' + object;\n};\n\nexport const copy = (a, s, t) => {\n  a.forEach((m) => {\n    if (s[m]) t[m] = s[m];\n  });\n};\n\n// We extract out the RegExp definition to improve performance with React Native Android, which has poor RegExp\n// initialization performance\nconst lastOfPathSeparatorRegExp = /###/g;\n\nconst cleanKey = (key) =>\n  key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n\nconst canNotTraverseDeeper = (object) => !object || typeof object === 'string';\n\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = typeof path !== 'string' ? path : path.split('.');\n  let stackIndex = 0;\n  // iterate through the stack, but leave the last item\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    // prevent prototype pollution\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex]),\n  };\n};\n\nexport const setPath = (object, path, newValue) => {\n  const { obj, k } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last && last.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\n\nexport const pushPath = (object, path, newValue, concat) => {\n  const { obj, k } = getLastOfPath(object, path, Object);\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n};\n\nexport const getPath = (object, path) => {\n  const { obj, k } = getLastOfPath(object, path);\n\n  if (!obj) return undefined;\n  return obj[k];\n};\n\nexport const getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  // Fallback to default values\n  return getPath(defaultData, key);\n};\n\nexport const deepExtend = (target, source, overwrite) => {\n  /* eslint no-restricted-syntax: 0 */\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch\n        if (\n          typeof target[prop] === 'string' ||\n          target[prop] instanceof String ||\n          typeof source[prop] === 'string' ||\n          source[prop] instanceof String\n        ) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\n\nexport const regexEscape = (str) =>\n  /* eslint no-useless-escape: 0 */\n  str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\n/* eslint-disable */\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n};\n/* eslint-enable */\n\nexport const escape = (data) => {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, (s) => _entityMap[s]);\n  }\n\n  return data;\n};\n\n/**\n * This is a reusable regular expression cache class. Given a certain maximum number of regular expressions we're\n * allowed to store in the cache, it provides a way to avoid recreating regular expression objects over and over.\n * When it needs to evict something, it evicts the oldest one.\n */\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    // Since our capacity tends to be fairly small, `.shift()` will be fairly quick despite being O(n). We just use a\n    // normal array to keep it simple.\n    this.regExpQueue = [];\n  }\n\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\n\nconst chars = [' ', ',', '?', '!', ';'];\n// We cache RegExps to improve performance with React Native Android, which has poor RegExp initialization performance.\n// Capacity of 20 should be plenty, as nsSeparator/keySeparator don't tend to vary much across calls.\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\n\nexport const looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(\n    (c) => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0,\n  );\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(\n    `(${possibleChars.map((c) => (c === '?' ? '\\\\?' : c)).join('|')})`,\n  );\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\n\n/**\n * Given\n *\n * 1. a top level object obj, and\n * 2. a path to a deeply nested string or object within it\n *\n * Find and return that deeply nested string or object. The caveat is that the keys of objects within the nesting chain\n * may contain period characters. Therefore, we need to DFS and explore all possible keys at each step until we find the\n * deeply nested string or object.\n */\nexport const deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length; ) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\n\nexport const getCleanedCode = (code) => code && code.replace('_', '-');\n","import EventEmitter from './EventEmitter.js';\nimport { getPath, deepFind, setPath, deepExtend } from './utils.js';\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = { ns: ['translation'], defaultNS: 'translation' }) {\n    super();\n\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    const ignoreJSONStructure =\n      options.ignoreJSONStructure !== undefined\n        ? options.ignoreJSONStructure\n        : this.options.ignoreJSONStructure;\n\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (typeof key === 'string' && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n\n  addResource(lng, ns, key, value, options = { silent: false }) {\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n\n    setPath(this.data, path, value);\n\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n\n  addResources(lng, ns, resources, options = { silent: false }) {\n    /* eslint no-restricted-syntax: 0 */\n    for (const m in resources) {\n      if (typeof resources[m] === 'string' || Array.isArray(resources[m]))\n        this.addResource(lng, ns, m, resources[m], { silent: true });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n\n  addResourceBundle(\n    lng,\n    ns,\n    resources,\n    deep,\n    overwrite,\n    options = { silent: false, skipCopy: false },\n  ) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n\n    let pack = getPath(this.data, path) || {};\n\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources)); // make a copy to fix #2081\n\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = { ...pack, ...resources };\n    }\n\n    setPath(this.data, path, pack);\n\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n\n    this.emit('removed', lng, ns);\n  }\n\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n\n    // COMPATIBILITY: remove extend in v2.1.0\n    if (this.options.compatibilityAPI === 'v1') return { ...{}, ...this.getResource(lng, ns) };\n\n    return this.getResource(lng, ns);\n  }\n\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = (data && Object.keys(data)) || [];\n    return !!n.find((v) => data[v] && Object.keys(data[v]).length > 0);\n  }\n\n  toJSON() {\n    return this.data;\n  }\n}\n\nexport default ResourceStore;\n","export default {\n  processors: {},\n\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n\n  handle(processors, value, key, options, translator) {\n    processors.forEach((processor) => {\n      if (this.processors[processor])\n        value = this.processors[processor].process(value, key, options, translator);\n    });\n\n    return value;\n  },\n};\n","import baseLogger from './logger.js';\nimport EventEmitter from './EventEmitter.js';\nimport postProcessor from './postProcessor.js';\nimport { copy as utilsCopy, looksLikeObjectPath } from './utils.js';\n\nconst checkedLoadedFor = {};\n\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n\n    utilsCopy(\n      [\n        'resourceStore',\n        'languageUtils',\n        'pluralResolver',\n        'interpolator',\n        'backendConnector',\n        'i18nFormat',\n        'utils',\n      ],\n      services,\n      this,\n    );\n\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n\n    this.logger = baseLogger.create('translator');\n  }\n\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n\n  exists(key, options = { interpolation: {} }) {\n    if (key === undefined || key === null) {\n      return false;\n    }\n\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n\n  extractFromKey(key, options) {\n    let nsSeparator =\n      options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage =\n      !this.options.userDefinedKeySeparator &&\n      !options.keySeparator &&\n      !this.options.userDefinedNsSeparator &&\n      !options.nsSeparator &&\n      !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces,\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (\n        nsSeparator !== keySeparator ||\n        (nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1)\n      )\n        namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    return {\n      key,\n      namespaces,\n    };\n  }\n\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      /* eslint prefer-rest-params: 0 */\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = { ...options };\n    if (!options) options = {};\n\n    // non valid keys handling\n    if (keys === undefined || keys === null /* || keys === '' */) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n\n    const returnDetails =\n      options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n\n    // separators\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    // get namespace(s)\n    const { key, namespaces } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n\n    // return key on CIMode\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode =\n      options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options),\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options),\n        };\n      }\n      return key;\n    }\n\n    // resolve from store\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = (resolved && resolved.usedKey) || key;\n    const resExactUsedKey = (resolved && resolved.exactUsedKey) || key;\n\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays =\n      options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n\n    // object\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject =\n      typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n    if (\n      handleAsObjectInI18nFormat &&\n      res &&\n      handleAsObject &&\n      noObject.indexOf(resType) < 0 &&\n      !(typeof joinArrays === 'string' && Array.isArray(res))\n    ) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler\n          ? this.options.returnedObjectHandler(resUsedKey, res, { ...options, ns: namespaces })\n          : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n\n      // if we got a separator we loop over children - else we just return object as is\n      // as having it set to false means no hierarchy so no lookup for nested values\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(res);\n        const copy = resTypeIsArray ? [] : {}; // apply child translation on a copy\n\n        /* eslint no-restricted-syntax: 0 */\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{ joinArrays: false, ns: namespaces },\n            });\n            if (copy[m] === deepKey) copy[m] = res[m]; // if nothing found use original value as fallback\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && Array.isArray(res)) {\n      // array special treatment\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      // string, empty or null\n      let usedDefault = false;\n      let usedKey = false;\n\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling\n        ? this.pluralResolver.getSuffix(lng, options.count, options)\n        : '';\n      const defaultValueSuffixOrdinalFallback =\n        options.ordinal && needsPluralHandling\n          ? this.pluralResolver.getSuffix(lng, options.count, { ordinal: false })\n          : '';\n      const needsZeroSuffixLookup =\n        needsPluralHandling &&\n        !options.ordinal &&\n        options.count === 0 &&\n        this.pluralResolver.shouldUseIntlApi();\n      const defaultValue =\n        (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`]) ||\n        options[`defaultValue${defaultValueSuffix}`] ||\n        options[`defaultValue${defaultValueSuffixOrdinalFallback}`] ||\n        options.defaultValue;\n\n      // fallback value\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n\n      const missingKeyNoValueFallbackToKey =\n        options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n\n      // save missing\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(\n          updateMissing ? 'updateKey' : 'missingKey',\n          lng,\n          namespace,\n          key,\n          updateMissing ? defaultValue : res,\n        );\n        if (keySeparator) {\n          const fk = this.resolve(key, { ...options, keySeparator: false });\n          if (fk && fk.res)\n            this.logger.warn(\n              'Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.',\n            );\n        }\n\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(\n          this.options.fallbackLng,\n          options.lng || this.language,\n        );\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing =\n            hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(\n              l,\n              namespace,\n              k,\n              defaultForMissing,\n              updateMissing,\n              options,\n            );\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(\n              l,\n              namespace,\n              k,\n              defaultForMissing,\n              updateMissing,\n              options,\n            );\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach((language) => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (\n                needsZeroSuffixLookup &&\n                options[`defaultValue${this.options.pluralSeparator}zero`] &&\n                suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0\n              ) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach((suffix) => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n\n      // extend\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n\n      // append namespace if still key\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey)\n        res = `${namespace}:${key}`;\n\n      // parseMissingKeyHandler\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(\n            this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key,\n            usedDefault ? res : undefined,\n          );\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n\n    // return\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n\n  extendTranslation(res, key, options, resolved, lastKey) {\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(\n        res,\n        { ...this.options.interpolation.defaultVariables, ...options },\n        options.lng || this.language || resolved.usedLng,\n        resolved.usedNS,\n        resolved.usedKey,\n        { resolved },\n      );\n    } else if (!options.skipInterpolation) {\n      // i18next.parsing\n      if (options.interpolation)\n        this.interpolator.init({\n          ...options,\n          ...{ interpolation: { ...this.options.interpolation, ...options.interpolation } },\n        });\n      const skipOnVariables =\n        typeof res === 'string' &&\n        (options && options.interpolation && options.interpolation.skipOnVariables !== undefined\n          ? options.interpolation.skipOnVariables\n          : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        // has nesting aftbeforeer interpolation\n        nestBef = nb && nb.length;\n      }\n\n      // interpolate\n      let data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n      if (this.options.interpolation.defaultVariables)\n        data = { ...this.options.interpolation.defaultVariables, ...data };\n      res = this.interpolator.interpolate(\n        res,\n        data,\n        options.lng || this.language || resolved.usedLng,\n        options,\n      );\n\n      // nesting\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        // has nesting after interpolation\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res)\n        options.lng = this.language || resolved.usedLng;\n      if (options.nest !== false)\n        res = this.interpolator.nest(\n          res,\n          (...args) => {\n            if (lastKey && lastKey[0] === args[0] && !options.context) {\n              this.logger.warn(\n                `It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`,\n              );\n              return null;\n            }\n            return this.translate(...args, key);\n          },\n          options,\n        );\n\n      if (options.interpolation) this.interpolator.reset();\n    }\n\n    // post process\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n    if (\n      res !== undefined &&\n      res !== null &&\n      postProcessorNames &&\n      postProcessorNames.length &&\n      options.applyPostProcessor !== false\n    ) {\n      res = postProcessor.handle(\n        postProcessorNames,\n        res,\n        key,\n        this.options && this.options.postProcessPassResolved\n          ? {\n              i18nResolved: { ...resolved, usedParams: this.getUsedParamsDetails(options) },\n              ...options,\n            }\n          : options,\n        this,\n      );\n    }\n\n    return res;\n  }\n\n  resolve(keys, options = {}) {\n    let found;\n    let usedKey; // plain key\n    let exactUsedKey; // key with context / plural\n    let usedLng;\n    let usedNS;\n\n    if (typeof keys === 'string') keys = [keys];\n\n    // forEach possible key\n    keys.forEach((k) => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const needsZeroSuffixLookup =\n        needsPluralHandling &&\n        !options.ordinal &&\n        options.count === 0 &&\n        this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling =\n        options.context !== undefined &&\n        (typeof options.context === 'string' || typeof options.context === 'number') &&\n        options.context !== '';\n\n      const codes = options.lngs\n        ? options.lngs\n        : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n\n      namespaces.forEach((ns) => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n\n        if (\n          !checkedLoadedFor[`${codes[0]}-${ns}`] &&\n          this.utils &&\n          this.utils.hasLoadedNamespace &&\n          !this.utils.hasLoadedNamespace(usedNS)\n        ) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(\n            `key \"${usedKey}\" for languages \"${codes.join(\n              ', ',\n            )}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`,\n            'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!',\n          );\n        }\n\n        codes.forEach((code) => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n\n          const finalKeys = [key];\n\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling)\n              pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            // get key for plural if needed\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(\n                  key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator),\n                );\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n\n            // get key for context if needed\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n\n              // get key for context + plural if needed\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(\n                    contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator),\n                  );\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n\n          // iterate over finalKeys starting with most specific pluralkey (-> contextkey only) -> singularkey only\n          let possibleKey;\n          /* eslint no-cond-assign: 0 */\n          while ((possibleKey = finalKeys.pop())) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n\n    return { res: found, usedKey, exactUsedKey, usedLng, usedNS };\n  }\n\n  isValidLookup(res) {\n    return (\n      res !== undefined &&\n      !(!this.options.returnNull && res === null) &&\n      !(!this.options.returnEmptyString && res === '')\n    );\n  }\n\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat && this.i18nFormat.getResource)\n      return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n\n  getUsedParamsDetails(options = {}) {\n    // we need to remember to extend this array whenever new option properties are added\n    const optionsKeys = [\n      'defaultValue',\n      'ordinal',\n      'context',\n      'replace',\n      'lng',\n      'lngs',\n      'fallbackLng',\n      'ns',\n      'keySeparator',\n      'nsSeparator',\n      'returnObjects',\n      'returnDetails',\n      'joinArrays',\n      'postProcess',\n      'interpolation',\n    ];\n\n    const useOptionsReplaceForData = options.replace && typeof options.replace !== 'string';\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n\n    if (this.options.interpolation.defaultVariables) {\n      data = { ...this.options.interpolation.defaultVariables, ...data };\n    }\n\n    // avoid reporting options (execpt count) as usedParams\n    if (!useOptionsReplaceForData) {\n      data = { ...data };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n\n    return data;\n  }\n\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n\n    for (const option in options) {\n      if (\n        Object.prototype.hasOwnProperty.call(options, option) &&\n        prefix === option.substring(0, prefix.length) &&\n        undefined !== options[option]\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nexport default Translator;\n","import baseLogger from './logger.js';\nimport { getCleanedCode } from './utils.js';\n\nconst capitalize = (string) => string.charAt(0).toUpperCase() + string.slice(1);\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n\n  formatLanguageCode(code) {\n    // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      if (typeof Intl !== 'undefined' && typeof Intl.getCanonicalLocales !== 'undefined') {\n        try {\n          let formattedCode = Intl.getCanonicalLocales(code)[0];\n          if (formattedCode && this.options.lowerCaseLng) {\n            formattedCode = formattedCode.toLowerCase();\n          }\n          if (formattedCode) return formattedCode;\n        } catch (e) {\n          /* fall through */\n        }\n      }\n      // fallback for non-Intl environments\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n\n      if (this.options.lowerCaseLng) {\n        p = p.map((part) => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n\n        // if length 2 guess it's a country\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n\n      return p.join('-');\n    }\n\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return (\n      !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1\n    );\n  }\n\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n\n    let found;\n\n    // pick first supported code or if no restriction pick the first one (highest prio)\n    codes.forEach((code) => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n\n    // if we got no match in supportedLngs yet - check for similar locales\n    // first  de-CH --> de\n    // second de-CH --> de-DE\n    if (!found && this.options.supportedLngs) {\n      codes.forEach((code) => {\n        if (found) return;\n\n        const lngOnly = this.getLanguagePartFromCode(code);\n        // eslint-disable-next-line no-return-assign\n        if (this.isSupportedCode(lngOnly)) return (found = lngOnly);\n\n        // eslint-disable-next-line array-callback-return\n        found = this.options.supportedLngs.find((supportedLng) => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (\n            supportedLng.indexOf('-') > 0 &&\n            lngOnly.indexOf('-') < 0 &&\n            supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly\n          )\n            return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    // if nothing found, use fallbackLng\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n\n    return found;\n  }\n\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n\n    if (!code) return fallbacks.default || [];\n\n    // assume we have an object defining fallbacks\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n\n    return found || [];\n  }\n\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(\n      fallbackCode || this.options.fallbackLng || [],\n      code,\n    );\n\n    const codes = [];\n    const addCode = (c) => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n\n    if (typeof code === 'string' && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly')\n        addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n\n    fallbackCodes.forEach((fc) => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n\n    return codes;\n  }\n}\n\nexport default LanguageUtil;\n","import baseLogger from './logger.js';\nimport { getCleanedCode } from './utils.js'\n\n// definition http://translate.sourceforge.net/wiki/l10n/pluralforms\n/* eslint-disable */\nlet sets = [\n  { lngs: ['ach','ak','am','arn','br','fil','gun','ln','mfe','mg','mi','oc', 'pt', 'pt-BR',\n    'tg', 'tl', 'ti','tr','uz','wa'], nr: [1,2], fc: 1 },\n\n  { lngs: ['af','an','ast','az','bg','bn','ca','da','de','dev','el','en',\n    'eo','es','et','eu','fi','fo','fur','fy','gl','gu','ha','hi',\n    'hu','hy','ia','it','kk','kn','ku','lb','mai','ml','mn','mr','nah','nap','nb',\n    'ne','nl','nn','no','nso','pa','pap','pms','ps','pt-PT','rm','sco',\n    'se','si','so','son','sq','sv','sw','ta','te','tk','ur','yo'], nr: [1,2], fc: 2 },\n\n  { lngs: ['ay','bo','cgg','fa','ht','id','ja','jbo','ka','km','ko','ky','lo',\n    'ms','sah','su','th','tt','ug','vi','wo','zh'], nr: [1], fc: 3 },\n\n  { lngs: ['be','bs', 'cnr', 'dz','hr','ru','sr','uk'], nr: [1,2,5], fc: 4 },\n\n  { lngs: ['ar'], nr: [0,1,2,3,11,100], fc: 5 },\n  { lngs: ['cs','sk'], nr: [1,2,5], fc: 6 },\n  { lngs: ['csb','pl'], nr: [1,2,5], fc: 7 },\n  { lngs: ['cy'], nr: [1,2,3,8], fc: 8 },\n  { lngs: ['fr'], nr: [1,2], fc: 9 },\n  { lngs: ['ga'], nr: [1,2,3,7,11], fc: 10 },\n  { lngs: ['gd'], nr: [1,2,3,20], fc: 11 },\n  { lngs: ['is'], nr: [1,2], fc: 12 },\n  { lngs: ['jv'], nr: [0,1], fc: 13 },\n  { lngs: ['kw'], nr: [1,2,3,4], fc: 14 },\n  { lngs: ['lt'], nr: [1,2,10], fc: 15 },\n  { lngs: ['lv'], nr: [1,2,0], fc: 16 },\n  { lngs: ['mk'], nr: [1,2], fc: 17 },\n  { lngs: ['mnk'], nr: [0,1,2], fc: 18 },\n  { lngs: ['mt'], nr: [1,2,11,20], fc: 19 },\n  { lngs: ['or'], nr: [2,1], fc: 2 },\n  { lngs: ['ro'], nr: [1,2,20], fc: 20 },\n  { lngs: ['sl'], nr: [5,1,2,3], fc: 21 },\n  { lngs: ['he','iw'], nr: [1,2,20,21], fc: 22 }\n]\n\nlet _rulesPluralsTypes = {\n  1: (n) => Number(n > 1),\n  2: (n) => Number(n != 1),\n  3: (n) => 0,\n  4: (n) => Number(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2),\n  5: (n) => Number(n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5),\n  6: (n) => Number((n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2),\n  7: (n) => Number(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2),\n  8: (n) => Number((n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3),\n  9: (n) => Number(n >= 2),\n  10: (n) => Number(n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : 4),\n  11: (n) => Number((n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3),\n  12: (n) => Number(n%10!=1 || n%100==11),\n  13: (n) => Number(n !== 0),\n  14: (n) => Number((n==1) ? 0 : (n==2) ? 1 : (n == 3) ? 2 : 3),\n  15: (n) => Number(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2),\n  16: (n) => Number(n%10==1 && n%100!=11 ? 0 : n !== 0 ? 1 : 2),\n  17: (n) => Number(n==1 || n%10==1 && n%100!=11 ? 0 : 1),\n  18: (n) => Number(n==0 ? 0 : n==1 ? 1 : 2),\n  19: (n) => Number(n==1 ? 0 : n==0 || ( n%100>1 && n%100<11) ? 1 : (n%100>10 && n%100<20 ) ? 2 : 3),\n  20: (n) => Number(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2),\n  21: (n) => Number(n%100==1 ? 1 : n%100==2 ? 2 : n%100==3 || n%100==4 ? 3 : 0),\n  22: (n) => Number(n==1 ? 0 : n==2 ? 1 : (n<0 || n>10) && n%10==0 ? 2 : 3)\n};\n/* eslint-enable */\n\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5,\n};\n\nconst createRules = () => {\n  const rules = {};\n  sets.forEach((set) => {\n    set.lngs.forEach((l) => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n\n    this.logger = baseLogger.create('pluralResolver');\n\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n\n    this.rules = createRules();\n\n    // Cache calls to Intl.PluralRules, since repeated calls can be slow in runtimes like React Native\n    // and the memory usage difference is negligible\n    this.pluralRulesCache = {};\n  }\n\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n\n  getRule(code, options = {}) {\n    if (this.shouldUseIntlApi()) {\n      try {\n        const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n        const type = options.ordinal ? 'ordinal' : 'cardinal';\n        const cacheKey = JSON.stringify({ cleanedCode, type });\n        if (cacheKey in this.pluralRulesCache) {\n          return this.pluralRulesCache[cacheKey];\n        }\n        const rule = new Intl.PluralRules(cleanedCode, { type });\n        this.pluralRulesCache[cacheKey] = rule;\n        return rule;\n      } catch (err) {\n        return;\n      }\n    }\n\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n\n  needsPlural(code, options = {}) {\n    const rule = this.getRule(code, options);\n\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n\n    return rule && rule.numbers.length > 1;\n  }\n\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map((suffix) => `${key}${suffix}`);\n  }\n\n  getSuffixes(code, options = {}) {\n    const rule = this.getRule(code, options);\n\n    if (!rule) {\n      return [];\n    }\n\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories\n        .sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2])\n        .map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n\n    return rule.numbers.map((number) => this.getSuffix(code, number, options));\n  }\n\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n\n    // special treatment for lngs only having singular and plural\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n\n    const returnSuffix = () => (\n      this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString()\n    );\n\n    // COMPATIBILITY JSON\n    // v1\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n      // eslint-disable-next-line no-else-return\n    } else if (/* v2 */ this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (/* v3 - gettext index */ this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nexport default PluralResolver;\n","import {\n  getPathWithDefaults,\n  deepFind,\n  escape as utilsEscape,\n  regexEscape,\n  makeString,\n} from './utils.js';\nimport baseLogger from './logger.js';\n\nconst deepFindWithDefaults = (\n  data,\n  defaultData,\n  key,\n  keySeparator = '.',\n  ignoreJSONStructure = true,\n) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && typeof key === 'string') {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\n\nconst regexSafe = (val) => val.replace(/\\$/g, '$$$$');\n\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n\n    this.options = options;\n    this.format = (options.interpolation && options.interpolation.format) || ((value) => value);\n    this.init(options);\n  }\n\n  /* eslint no-param-reassign: 0 */\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = { escapeValue: true };\n\n    const {\n      escape,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat,\n    } = options.interpolation;\n\n    this.escape = escape !== undefined ? escape : utilsEscape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n\n    this.formatSeparator = formatSeparator || ',';\n\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n\n    this.nestingPrefix = nestingPrefix\n      ? regexEscape(nestingPrefix)\n      : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix\n      ? regexEscape(nestingSuffix)\n      : nestingSuffixEscaped || regexEscape(')');\n\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n\n    this.maxReplaces = maxReplaces || 1000;\n\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n\n    // the regexp\n    this.resetRegExp();\n  }\n\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp && existingRegExp.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(\n      this.regexpUnescape,\n      `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`,\n    );\n    this.nestingRegexp = getOrResetRegExp(\n      this.nestingRegexp,\n      `${this.nestingPrefix}(.+?)${this.nestingSuffix}`,\n    );\n  }\n\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n\n    const defaultData =\n      (this.options && this.options.interpolation && this.options.interpolation.defaultVariables) ||\n      {};\n\n    const handleFormat = (key) => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(\n          data,\n          defaultData,\n          key,\n          this.options.keySeparator,\n          this.options.ignoreJSONStructure,\n        );\n        return this.alwaysFormat\n          ? this.format(path, undefined, lng, { ...options, ...data, interpolationkey: key })\n          : path;\n      }\n\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n\n      return this.format(\n        deepFindWithDefaults(\n          data,\n          defaultData,\n          k,\n          this.options.keySeparator,\n          this.options.ignoreJSONStructure,\n        ),\n        f,\n        lng,\n        {\n          ...options,\n          ...data,\n          interpolationkey: k,\n        },\n      );\n    };\n\n    this.resetRegExp();\n\n    const missingInterpolationHandler =\n      (options && options.missingInterpolationHandler) || this.options.missingInterpolationHandler;\n\n    const skipOnVariables =\n      options && options.interpolation && options.interpolation.skipOnVariables !== undefined\n        ? options.interpolation.skipOnVariables\n        : this.options.interpolation.skipOnVariables;\n\n    const todos = [\n      {\n        // unescape if has unescapePrefix/Suffix\n        regex: this.regexpUnescape,\n        safeValue: (val) => regexSafe(val),\n      },\n      {\n        // regular escape on demand\n        regex: this.regexp,\n        safeValue: (val) => (this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)),\n      },\n    ];\n    todos.forEach((todo) => {\n      replaces = 0;\n      /* eslint no-cond-assign: 0 */\n      while ((match = todo.regex.exec(str))) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = ''; // undefined becomes empty string\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue; // this makes sure it continues to detect others\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n\n    let clonedOptions;\n\n    // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (\n        (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes) ||\n        matchedDoubleQuotes.length % 2 !== 0\n      ) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n\n      try {\n        clonedOptions = JSON.parse(optionsString);\n\n        if (inheritedOptions) clonedOptions = { ...inheritedOptions, ...clonedOptions };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n\n      // assert we do not get a endless loop on interpolating defaultValue again and again\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1)\n        delete clonedOptions.defaultValue;\n      return key;\n    };\n\n    // regular escape on demand\n    while ((match = this.nestingRegexp.exec(str))) {\n      let formatters = [];\n\n      clonedOptions = { ...options };\n      clonedOptions =\n        clonedOptions.replace && typeof clonedOptions.replace !== 'string'\n          ? clonedOptions.replace\n          : clonedOptions;\n      clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n      delete clonedOptions.defaultValue; // assert we do not get a endless loop on interpolating defaultValue again and again\n\n      /**\n       * If there is more than one parameter (contains the format separator). E.g.:\n       *   - t(a, b)\n       *   - t(a, b, c)\n       *\n       * And those parameters are not dynamic values (parameters do not include curly braces). E.g.:\n       *   - Not t(a, { \"key\": \"{{variable}}\" })\n       *   - Not t(a, b, {\"keyA\": \"valueA\", \"keyB\": \"valueB\"})\n       */\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map((elem) => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n\n      // is only the nesting key (key1 = '$(key2)') return the value without stringify\n      if (value && match[0] === str && typeof value !== 'string') return value;\n\n      // no string to include or empty\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n\n      if (doReduce) {\n        value = formatters.reduce(\n          // eslint-disable-next-line no-loop-func\n          (v, f) =>\n            this.format(v, f, options.lng, { ...options, interpolationkey: match[1].trim() }),\n          value.trim(),\n        );\n      }\n\n      // Nested keys should not be escaped by default #854\n      // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nexport default Interpolator;\n","import baseLogger from './logger.js';\nimport { getCleanedCode } from './utils.js';\n\nconst parseFormatStr = (formatStr) => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n\n    const optStr = p[1].substring(0, p[1].length - 1);\n\n    // extra for currency\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n\n      opts.forEach((opt) => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest\n            .join(':')\n            .trim()\n            .replace(/^'+|'+$/g, ''); // trim and replace ''\n\n          const trimmedKey = key.trim();\n\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          // eslint-disable-next-line no-restricted-globals\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n\n  return {\n    formatName,\n    formatOptions,\n  };\n};\n\nconst createCachedFormatter = (fn) => {\n  const cache = {};\n  return (val, lng, options) => {\n    let optForCache = options;\n    // this cache optimization will only work for keys having 1 interpolated value\n    if (\n      options &&\n      options.interpolationkey &&\n      options.formatParams &&\n      options.formatParams[options.interpolationkey] &&\n      options[options.interpolationkey]\n    ) {\n      optForCache = {\n        ...optForCache,\n        [options.interpolationkey]: undefined,\n      };\n    }\n    const key = lng + JSON.stringify(optForCache);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n};\n\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, { ...opt });\n        return (val) => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, { ...opt, style: 'currency' });\n        return (val) => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, { ...opt });\n        return (val) => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, { ...opt });\n        return (val) => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, { ...opt });\n        return (val) => formatter.format(val);\n      }),\n    };\n    this.init(options);\n  }\n\n  /* eslint no-param-reassign: 0 */\n  init(services, options = { interpolation: {} }) {\n    const iOpts = options.interpolation;\n\n    this.formatSeparator = iOpts.formatSeparator\n      ? iOpts.formatSeparator\n      : iOpts.formatSeparator || ',';\n  }\n\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (\n      formats.length > 1 &&\n      formats[0].indexOf('(') > 1 &&\n      formats[0].indexOf(')') < 0 &&\n      formats.find((f) => f.indexOf(')') > -1)\n    ) {\n      const lastIndex = formats.findIndex((f) => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n\n    const result = formats.reduce((mem, f) => {\n      const { formatName, formatOptions } = parseFormatStr(f);\n\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          // options passed explicit for that formatted value\n          const valOptions =\n            (options && options.formatParams && options.formatParams[options.interpolationkey]) ||\n            {};\n\n          // language\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions,\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n        // eslint-disable-next-line no-else-return\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n\n    return result;\n  }\n}\n\nexport default Formatter;\n","import { pushPath } from './utils.js';\nimport baseLogger from './logger.js';\nimport EventEmitter from './EventEmitter.js';\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\n\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n\n    this.state = {};\n    this.queue = [];\n\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n\n  queueLoad(languages, namespaces, options, callback) {\n    // find what needs to be loaded\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n\n    languages.forEach((lng) => {\n      let hasAllNamespaces = true;\n\n      namespaces.forEach((ns) => {\n        const name = `${lng}|${ns}`;\n\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2; // loaded\n        } else if (this.state[name] < 0) {\n          // nothing to do for err\n        } else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1; // pending\n\n          hasAllNamespaces = false;\n\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback,\n      });\n    }\n\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces),\n    };\n  }\n\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n\n    if (err) this.emit('failedLoading', lng, ns, err);\n\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, { skipCopy: true });\n    }\n\n    // set loaded\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n\n    // consolidated loading done in this run - only emit once for a loaded namespace\n    const loaded = {};\n\n    // callback if ready\n    this.queue.forEach((q) => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n\n      if (err) q.errors.push(err);\n\n      if (q.pendingCount === 0 && !q.done) {\n        // only do once per loaded -> this.emit('loaded', q.loaded);\n        Object.keys(q.loaded).forEach((l) => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach((n) => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n\n        /* eslint no-param-reassign: 0 */\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n\n    // emit consolidated loaded event\n    this.emit('loaded', loaded);\n\n    // remove done load requests\n    this.queue = this.queue.filter((q) => !q.done);\n  }\n\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {}); // noting to load\n\n    // Limit parallelism of calls to backend\n    // This is needed to prevent trying to open thousands of\n    // sockets or file descriptors, which can cause failures\n    // and actually make the entire process take longer.\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({ lng, ns, fcName, tried, wait, callback });\n      return;\n    }\n    this.readingCalls++;\n\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data /* = retryFlag */ && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      // no callback\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          // promise\n          r.then((data) => resolver(null, data)).catch(resolver);\n        } else {\n          // sync\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n\n    // normal with callback\n    return fc(lng, ns, resolver);\n  }\n\n  /* eslint consistent-return: 0 */\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback(); // nothing to load and no pendings...callback now\n      return null; // pendings will trigger callback\n    }\n\n    toLoad.toLoad.forEach((name) => {\n      this.loadOne(name);\n    });\n  }\n\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, { reload: true }, callback);\n  }\n\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data)\n        this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n\n      this.loaded(name, err, data);\n    });\n  }\n\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (\n      this.services.utils &&\n      this.services.utils.hasLoadedNamespace &&\n      !this.services.utils.hasLoadedNamespace(namespace)\n    ) {\n      this.logger.warn(\n        `did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`,\n        'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!',\n      );\n      return;\n    }\n\n    // ignore non valid keys\n    if (key === undefined || key === null || key === '') return;\n\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate,\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        // no callback\n        try {\n          let r;\n          if (fc.length === 5) {\n            // future callback-less api for i18next-locize-backend\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            // promise\n            r.then((data) => clb(null, data)).catch(clb);\n          } else {\n            // sync\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        // normal with callback\n        fc(languages, namespace, key, fallbackValue, clb /* unused callback */, opts);\n      }\n    }\n\n    // write to store to avoid resending\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nexport default Connector;\n","export const get = () => ({\n  debug: false,\n  initImmediate: true,\n\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false, // string or array of namespaces\n\n  supportedLngs: false, // array with supported languages\n  nonExplicitSupportedLngs: false,\n  load: 'all', // | currentOnly | languageOnly\n  preload: false, // array with preload languages\n\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n\n  partialBundledLanguages: false, // allow bundling certain languages that are not remotely fetched\n  saveMissing: false, // enable to send missing values\n  updateMissing: false, // enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)\n  saveMissingTo: 'fallback', // 'current' || 'all'\n  saveMissingPlurals: true, // will save all forms not only singular key\n  missingKeyHandler: false, // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n  missingInterpolationHandler: false, // function(str, match)\n\n  postProcess: false, // string or array of postProcessor names\n  postProcessPassResolved: false, // pass resolved object into 'options.i18nResolved' for postprocessor\n  returnNull: false, // allows null value as valid translation\n  returnEmptyString: true, // allows empty string value as valid translation\n  returnObjects: false,\n  joinArrays: false, // or string to join array\n  returnedObjectHandler: false, // function(key, value, options) triggered if key returns object but returnObjects is set to false\n  parseMissingKeyHandler: false, // function(key) parsed a key that was not found in t() before returning\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: (args) => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (typeof args[1] === 'string') ret.defaultValue = args[1];\n    if (typeof args[2] === 'string') ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach((key) => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    /** @type {import('i18next').FormatFunction} */\n    format: (value) => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    // prefixEscaped: '{{',\n    // suffixEscaped: '}}',\n    // unescapeSuffix: '',\n    unescapePrefix: '-',\n\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    // nestingPrefixEscaped: '$t(',\n    // nestingSuffixEscaped: ')',\n    // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n    maxReplaces: 1000, // max replaces to prevent endless loop\n    skipOnVariables: true,\n  },\n});\n\n/* eslint no-param-reassign: 0 */\nexport const transformOptions = (options) => {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n\n  // extend supportedLngs with cimode\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n\n  return options;\n};\n","import baseLogger from './logger.js';\nimport EventEmitter from './EventEmitter.js';\nimport ResourceStore from './ResourceStore.js';\nimport Translator from './Translator.js';\nimport LanguageUtils from './LanguageUtils.js';\nimport PluralResolver from './PluralResolver.js';\nimport Interpolator from './Interpolator.js';\nimport Formatter from './Formatter.js';\nimport BackendConnector from './BackendConnector.js';\nimport { get as getDefaults, transformOptions } from './defaults.js';\nimport postProcessor from './postProcessor.js';\nimport { defer } from './utils.js';\n\nconst noop = () => {}\n\n// Binds the member functions of the given class instance so that they can be\n// destructured or used as callbacks.\nconst bindMemberFunctions = (inst) => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst))\n  mems.forEach((mem) => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst)\n    }\n  })\n}\n\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = { external: [] };\n\n    bindMemberFunctions(this);\n\n    if (callback && !this.isInitialized && !options.isClone) {\n      // https://github.com/i18next/i18next/issues/879\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (typeof options.ns === 'string') {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n\n    const defOpts = getDefaults();\n    this.options = { ...defOpts, ...this.options, ...transformOptions(options) };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = { ...defOpts.interpolation, ...this.options.interpolation }; // do not use reference\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n\n    const createClassOnDemand = (ClassOrObject) => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n\n    // init services\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n\n      const lu = new LanguageUtils(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix,\n      });\n\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      }\n\n      s.backendConnector = new BackendConnector(\n        createClassOnDemand(this.modules.backend),\n        s.resourceStore,\n        s,\n        this.options,\n      );\n      // pipe events from backendConnector\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n\n      this.translator = new Translator(this.services, this.options);\n      // pipe events from translator\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng)\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0]\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n\n    // append api\n    const storeApi = [\n      'getResource',\n      'hasResourceBundle',\n      'getResourceBundle',\n      'getDataByLanguage',\n    ];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = [\n      'addResource',\n      'addResources',\n      'addResourceBundle',\n      'removeResourceBundle',\n    ];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n\n    const deferred = defer();\n\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n\n        deferred.resolve(t); // not rejecting on err (as err is only a loading translation failed warning)\n        callback(err, t);\n      };\n      // fix for use cases when calling changeLanguage before finished to initialized (i.e. https://github.com/i18next/i18next/issues/1552)\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n\n    return deferred;\n  }\n\n  /* eslint consistent-return: 0 */\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = typeof language === 'string' ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback(); // avoid loading resources for cimode\n\n      const toLoad = [];\n\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n\n      if (!usedLng) {\n        // at least load fallbacks in this case\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n\n      this.services.backendConnector.load(toLoad, this.options.ns, (e) => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve(); // not rejecting on err (as err is only a loading translation failed warning)\n      callback(err);\n    });\n    return deferred;\n  }\n\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()')\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()')\n\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n\n    if (module.type === 'logger' || (module.log && module.warn && module.error)) {\n      this.modules.logger = module;\n    }\n\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n\n    return this;\n  }\n\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n\n    const setLngProps = (l) => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      // find the first language resolved language\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n\n    const setLng = lngs => {\n      // if detected lng is falsy, set it to empty array, to make sure at least the fallbackLng will be used\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      // depending on API in detector lng can be a string (old) or an array of languages ordered in priority\n      const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n\n    return deferred;\n  }\n\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let options;\n      if (typeof opts !== 'object') {\n        options = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = { ...opts };\n      }\n\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      if (options.keyPrefix !== '') options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n\n  t(...args) {\n    return this.translator && this.translator.translate(...args);\n  }\n\n  exists(...args) {\n    return this.translator && this.translator.exists(...args);\n  }\n\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n\n    // we're in cimode so this shall pass\n    if (lng.toLowerCase() === 'cimode') return true;\n\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n\n    // optional injected check\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n\n    // loaded -> SUCCESS\n    if (this.hasResourceBundle(lng, ns)) return true;\n\n    // were not loading at all -> SEMI SUCCESS\n    if (!this.services.backendConnector.backend || (this.options.resources && !this.options.partialBundledLanguages)) return true;\n\n    // failed loading ns - but at least fallback is not pending -> SEMI SUCCESS\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n\n    return false;\n  }\n\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (typeof ns === 'string') ns = [ns];\n\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n\n    return deferred;\n  }\n\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n\n    if (typeof lngs === 'string') lngs = [lngs];\n    const preloaded = this.options.preload || [];\n\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    // Exit early if all given languages are already preloaded\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n\n    return deferred;\n  }\n\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n\n    const rtlLngs = [\n      'ar',\n      'shu',\n      'sqr',\n      'ssh',\n      'xaa',\n      'yhd',\n      'yud',\n      'aao',\n      'abh',\n      'abv',\n      'acm',\n      'acq',\n      'acw',\n      'acx',\n      'acy',\n      'adf',\n      'ads',\n      'aeb',\n      'aec',\n      'afb',\n      'ajp',\n      'apc',\n      'apd',\n      'arb',\n      'arq',\n      'ars',\n      'ary',\n      'arz',\n      'auz',\n      'avl',\n      'ayh',\n      'ayl',\n      'ayn',\n      'ayp',\n      'bbz',\n      'pga',\n      'he',\n      'iw',\n      'ps',\n      'pbt',\n      'pbu',\n      'pst',\n      'prp',\n      'prd',\n      'ug',\n      'ur',\n      'ydd',\n      'yds',\n      'yih',\n      'ji',\n      'yi',\n      'hbo',\n      'men',\n      'xmn',\n      'fa',\n      'jpr',\n      'peo',\n      'pes',\n      'prs',\n      'dv',\n      'sam',\n      'ckb'\n    ];\n\n    const languageUtils = (this.services && this.services.languageUtils) || new LanguageUtils(getDefaults()) // for uninitialized usage\n\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1\n      ? 'rtl'\n      : 'ltr';\n  }\n\n  static createInstance(options = {}, callback) { return new I18n(options, callback) }\n\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = { ...this.options, ...options, ...{ isClone: true } };\n    const clone = new I18n(mergedOptions);\n    if ((options.debug !== undefined || options.prefix !== undefined)) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = { ...this.services };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions; // sync options\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n\n    return clone;\n  }\n\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\n\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nexport default instance;\n","import i18next from './i18next.js';\n\nexport default i18next;\n\nexport const createInstance = i18next.createInstance;\n\nexport const dir = i18next.dir;\nexport const init = i18next.init;\nexport const loadResources = i18next.loadResources;\nexport const reloadResources = i18next.reloadResources;\nexport const use = i18next.use;\nexport const changeLanguage = i18next.changeLanguage;\nexport const getFixedT = i18next.getFixedT;\nexport const t = i18next.t;\nexport const exists = i18next.exists;\nexport const setDefaultNamespace = i18next.setDefaultNamespace;\nexport const hasLoadedNamespace = i18next.hasLoadedNamespace;\nexport const loadNamespaces = i18next.loadNamespaces;\nexport const loadLanguages = i18next.loadLanguages;\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    default as i18next,\n    i18n as i18nextInstance,\n    FallbackLngObjList as i18nextFallbackLngObjList,\n    FallbackLng as i18nextFallbackLng,\n    InterpolationOptions as i18nextInterpolationOptions,\n    ReactOptions as i18nextReactOptions,\n    InitOptions as i18nextInitOptions,\n    TOptionsBase as i18nextTOptionsBase,\n    TOptions as i18nextTOptions,\n    ExistsFunction as i18nextExistsFunction,\n    WithT as i18nextWithT,\n    TFunction as i18nextTFunction,\n    Resource as i18nextResource,\n    ResourceLanguage as i18nextResourceLanguage,\n    ResourceKey as i18nextResourceKey,\n    Interpolator as i18nextInterpolator,\n    ResourceStore as i18nextResourceStore,\n    Services as i18nextServices,\n    Module as i18nextModule,\n    CallbackError as i18nextCallbackError,\n    ReadCallback as i18nextReadCallback,\n    MultiReadCallback as i18nextMultiReadCallback,\n    BackendModule as i18nextBackendModule,\n    LanguageDetectorModule as i18nextLanguageDetectorModule,\n    LanguageDetectorAsyncModule as i18nextLanguageDetectorAsyncModule,\n    PostProcessorModule as i18nextPostProcessorModule,\n    LoggerModule as i18nextLoggerModule,\n    I18nFormatModule as i18nextI18nFormatModule,\n    ThirdPartyModule as i18nextThirdPartyModule,\n    Modules as i18nextModules,\n    Newable as i18nextNewable,\n} from 'i18next';\n\nconst i18n: i18n.i18n = i18next;\n\ndeclare namespace i18n {\n    export type i18n = i18nextInstance;\n    export type FallbackLngObjList = i18nextFallbackLngObjList;\n    export type FallbackLng = i18nextFallbackLng;\n    export type InterpolationOptions = i18nextInterpolationOptions;\n    export type ReactOptions = i18nextReactOptions;\n    export type InitOptions = i18nextInitOptions;\n    export type TOptionsBase = i18nextTOptionsBase;\n    export type TOptions<T extends Record<string, unknown> = Record<string, any>> = i18nextTOptions<T>;\n    export type ExistsFunction<K extends string = string, T extends Record<string, unknown> = Record<string, any>> = i18nextExistsFunction<K, T>;\n    export type WithT = i18nextWithT;\n    export type TFunction = i18nextTFunction;\n    export type Resource = i18nextResource;\n    export type ResourceLanguage = i18nextResourceLanguage;\n    export type ResourceKey = i18nextResourceKey;\n    export type Interpolator = i18nextInterpolator;\n    export type ResourceStore = i18nextResourceStore;\n    export type Services = i18nextServices;\n    export type Module = i18nextModule;\n    export type CallbackError = i18nextCallbackError;\n    export type ReadCallback = i18nextReadCallback;\n    export type MultiReadCallback = i18nextMultiReadCallback;\n    export type BackendModule<T = Record<string, unknown>> = i18nextBackendModule<T>;\n    export type LanguageDetectorModule = i18nextLanguageDetectorModule;\n    export type LanguageDetectorAsyncModule = i18nextLanguageDetectorAsyncModule;\n    export type PostProcessorModule = i18nextPostProcessorModule;\n    export type LoggerModule = i18nextLoggerModule;\n    export type I18nFormatModule = i18nextI18nFormatModule;\n    export type ThirdPartyModule = i18nextThirdPartyModule;\n    export type Modules = i18nextModules;\n    export type Newable<T> = i18nextNewable<T>;\n}\n\nexport { i18n };\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        I18N = CDP_KNOWN_MODULE.I18N * LOCAL_CODE_RANGE_GUIDE.FUNCTION,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        I18N_DECLARE    = RESULT_CODE_BASE.DECLARE,\n        ERROR_I18N_CORE_LAYER = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.I18N + 1, 'i18next error'),\n    }\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const navigator = safe(globalThis.navigator);\n","import { i18n } from '@cdp/extension-i18n';\nimport { isFunction } from '@cdp/core-utils';\nimport { RESULT_CODE, toResult } from '@cdp/result';\nimport { request } from '@cdp/ajax';\nimport { toUrl } from '@cdp/web-utils';\nimport { I18NOptions } from '../interfaces';\n\n/** @internal */\nconst enum Default {\n    LOAD_PATH = 'res/locales/{{ns}}.{{lng}}.json',\n}\n\n/** @internal */ type FallbackResourceMap = Record<string, string>;\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en The class a simple `i18next` backend built-in plugin. It will load resources from a backend server using the `fetch` API.\n * @ja `fetch` API を用いた `i18next` backend ビルトインプラグインクラス\n *\n * @internal\n */\nexport class AjaxBackend implements i18n.BackendModule<i18n.AjaxBackendOptions> {\n    readonly type = 'backend';\n    static type = 'backend';\n    private _services!: i18n.Services;\n    private _options: i18n.AjaxBackendOptions = {};\n    private _fallbackMap: FallbackResourceMap = {};\n\n///////////////////////////////////////////////////////////////////////\n// implements: i18n.BackendModule<AjaxBackendOptions>\n\n    init(services: i18n.Services, options: i18n.AjaxBackendOptions, initOptions: I18NOptions): void {\n        this._services = services;\n        this._options = Object.assign({ loadPath: Default.LOAD_PATH }, this._options, options);\n        this._fallbackMap = Object.assign(this._fallbackMap, initOptions.fallbackResources);\n    }\n\n    read(language: string, namespace: string, callback: i18n.ReadCallback): void {\n        const lng = this._fallbackMap[language] || language;\n        const loadPath = isFunction(this._options.loadPath) ? this._options.loadPath([lng], [namespace]) : this._options.loadPath;\n        const url = this.resolveUrl(loadPath!, { lng, ns: namespace });\n        this.loadUrl(url, callback);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    private resolveUrl(loadPath: string, data: { lng: string; ns: string; }): string {\n        return toUrl(this._services.interpolator.interpolate(loadPath, data, undefined!, undefined!));\n    }\n\n    private loadUrl(url: string, callback: (err: i18n.CallbackError | string, data: i18n.ResourceKey | boolean) => void): void {\n        void (async () => {\n            try {\n                const json = await request.json(url, this._options);\n                callback(null, json);\n            } catch (e) {\n                const result = toResult(e);\n                const msg = `failed loading: ${url}, ${result.message}`;\n                if (RESULT_CODE.ERROR_AJAX_RESPONSE === result.code && result.cause) {\n                    const { status } = result.cause as { status: number; };\n                    if (500 <= status && status < 600) {\n                        return callback(msg, true);  // retry\n                    } else if (400 <= status && status < 500) {\n                        return callback(msg, false); // no retry\n                    }\n                }\n                callback(msg, false);\n            }\n        })();\n    }\n}\n","import { i18n } from '@cdp/extension-i18n';\nimport { PlainObject } from '@cdp/core-utils';\nimport {\n    dom as $,\n    DOM,\n} from '@cdp/dom';\nimport './module-extends';\n\n/** @internal extends {@link DOM} instance method */\nfunction extend(domOptions: Required<i18n.DomLocalizerOptions>, i18next: i18n.i18n): void {\n    const {\n        selectorAttr,\n        targetAttr,\n        optionsAttr,\n        useOptionsAttr,\n        parseDefaultValueFromContent,\n        customTagName,\n    } = domOptions;\n\n    const extendDefault = (o: PlainObject, val: string): PlainObject => {\n        if (!parseDefaultValueFromContent) {\n            return o;\n        }\n        return { ...o, ...{ defaultValue: val } };\n    };\n\n    // [prepend]/[append] helper\n    const insert = (method: 'prepend' | 'append', $el: DOM, key: string, opts: i18n.TOptions): void => {\n        const translated = i18next.t(key, extendDefault(opts, $el.html()));\n        if (false === customTagName) {\n            $el[method](translated);\n        } else {\n            const translatedWithWrap = `<${customTagName}>${translated}</${customTagName}>`;\n            const $target = $el.children(customTagName);\n            if ($target.length) {\n                $target.replaceWith(translatedWithWrap);\n            } else {\n                $el[method](translatedWithWrap);\n            }\n        }\n    };\n\n    const parse = ($el: DOM, key: string, opts: i18n.TOptions): void => {\n        let attr = 'text';\n\n        if (key.startsWith('[')) {\n            const parts = key.split(']');\n            key  = parts[1].trim();\n            attr = parts[0].substring(1, parts[0].length).trim();\n        }\n\n        if ('html' === attr) {\n            $el.html(i18next.t(key, extendDefault(opts, $el.html())));\n        } else if ('text' === attr) {\n            $el.text(i18next.t(key, extendDefault(opts, $el.text())));\n        } else if ('prepend' === attr) {\n            insert('prepend', $el, key, opts);\n        } else if ('append' === attr) {\n            insert('append', $el, key, opts);\n        } else if (attr.startsWith('data-')) {\n            const dataAttr = attr.substring(('data-').length);\n            const translated = i18next.t(key, extendDefault(opts, $el.data(dataAttr) as string));\n            $el.data(dataAttr, translated);\n            $el.attr(attr, translated);\n        } else {\n            $el.attr(attr, i18next.t(key, extendDefault(opts, $el.attr(attr)!)));\n        }\n    };\n\n    const localize = ($el: DOM, opts: i18n.TOptions): void => {\n        const key = $el.attr(selectorAttr);\n        if (!key) {\n            return;\n        }\n\n        let $target = $el;\n        const targetSelector = $el.data(targetAttr) as string;\n\n        if (targetSelector) {\n            $target = $el.find(targetSelector);\n        }\n\n        if (!opts && true === useOptionsAttr) {\n            opts = $el.data(optionsAttr) as i18n.TOptions;\n        }\n\n        opts = opts || {};\n\n        for (const part of key.split(';')) {\n            const k = part.trim();\n            if ('' !== k) {\n                parse($target, k, opts);\n            }\n        }\n\n        if (true === useOptionsAttr) {\n            const clone = { ...opts };\n            delete clone.lng;\n            $el.data(optionsAttr, clone);\n        }\n    };\n\n    function handle(this: DOM, opts: i18n.TOptions): DOM {\n        // eslint-disable-next-line no-invalid-this\n        return this.each((index: number, el: HTMLElement) => {\n            for (const root of $.utils.rootify(el)) {\n                const $el = $(root);\n                // localize element itself\n                localize($el, opts);\n                // localize children\n                const $children = $el.find(`[${selectorAttr}]`);\n                $children.each((index: number, el: HTMLElement) => {\n                    localize($(el), opts);\n                });\n            }\n        });\n    }\n\n    // selector function $(mySelector).localize(opts);\n    $.fn['localize'] = handle;\n}\n\n/**\n * @en `i18next` DOM localizer built-in plugin factory.\n * @ja `i18next` DOM ローカライズビルトインプラグインファクトリーメソッド\n *\n * @internal\n */\nexport function DomLocalizer(domOptions?: i18n.DomLocalizerOptions): i18n.ThirdPartyModule {\n    return {\n        type: '3rdParty',\n        init: extend.bind(\n            null,\n            Object.assign({\n                selectorAttr: 'data-i18n',\n                targetAttr: 'i18n-target',\n                optionsAttr: 'i18n-options',\n                useOptionsAttr: false,\n                parseDefaultValueFromContent: true,\n                customTagName: 'cdp-i18n',\n            }, domOptions)\n        ),\n    };\n}\n","export * from '@cdp/extension-i18n';\nimport { i18n } from '@cdp/extension-i18n';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport {\n    dom as $,\n    DOMSelector,\n    DOMResult,\n} from '@cdp/dom';\nimport { I18NOptions, I18NDetectErrorBehaviour } from './interfaces';\nimport { navigator } from './ssr';\nimport { AjaxBackend, DomLocalizer } from './plugin';\n\n/**\n * @en Translate funcion.\n * @ja 翻訳関数\n */\nexport const t: i18n.TFunction = i18n.t.bind(i18n);\n\n/**\n * @en Initialize `i18next` instance.\n * @ja `i18next` インスタンスの初期化\n *\n * @param options\n *  - `en` init options\n *  - `ja` 初期化オプションを指定\n */\nexport const initializeI18N = (options?: I18NOptions): Promise<i18n.TFunction> => {\n    const opts = Object.assign({ noThrow: true }, options);\n\n    const { namespace, resourcePath: loadPath, dom, noThrow } = opts;\n\n    if (!opts.lng) {\n        opts.lng = navigator.language;\n    }\n\n    if (namespace) {\n        !opts.ns && (opts.ns = namespace);\n        !opts.defaultNS && (opts.defaultNS = namespace);\n    }\n\n    if (loadPath) {\n        opts.backend = Object.assign({ loadPath }, opts.backend);\n    }\n\n    if (opts.backend) {\n        i18n.use(AjaxBackend);\n    }\n\n    i18n.use(DomLocalizer(dom));\n\n    return new Promise((resolve, reject) => {\n        void i18n.init(opts, (error, translator) => {\n            if (error) {\n                const result = makeResult(RESULT_CODE.ERROR_I18N_CORE_LAYER, 'i18n#init() failed.', error);\n                if (noThrow) {\n                    console.warn(result.message, result);\n                } else {\n                    return reject(result);\n                }\n            }\n            resolve(translator);\n        });\n    });\n};\n\n/**\n * @en Get the current detected or set language.\n * @ja 現在設定されている言語を取得\n *\n * @returns `ja-JP`, `ja`\n */\nexport const getLanguage = (): string => {\n    return i18n.language || navigator.language;\n};\n\n/**\n * @en Get an array of `language-codes` that will be used it order to lookup the translation value.\n * @ja 翻訳の検索に使用される `language-codes` リストを取得\n *\n * @see\n *  - https://www.i18next.com/overview/api#languages\n */\nexport const getLanguageList = (): readonly string[] => {\n    return i18n.languages || [navigator.language];\n};\n\n/**\n * @en Changes the language.\n * @ja 言語の切り替え\n */\nexport const changeLanguage = (lng: string, options?: I18NDetectErrorBehaviour): Promise<i18n.TFunction> => {\n    const opts = Object.assign({ noThrow: true }, options);\n    return new Promise((resolve, reject) => {\n        void i18n.changeLanguage(lng, (error, translator) => {\n            if (error) {\n                const result = makeResult(RESULT_CODE.ERROR_I18N_CORE_LAYER, 'i18n#changeLanguate() failed.', error);\n                if (opts.noThrow) {\n                    console.warn(result.message, result);\n                } else {\n                    return reject(result);\n                }\n            }\n            resolve(translator);\n        });\n    });\n};\n\n/**\n * @en DOM localizer method.\n * @ja DOM ローカライズ\n *\n * @param selector\n *  - `en` Object(s) or the selector string which becomes origin of {@link DOM}.\n *  - `ja` {@link DOM} のもとになるオブジェクト(群)またはセレクタ文字列\n * @param options\n *  - `en` translation options.\n *  - `ja` 翻訳オプション\n */\nexport const localize = <T extends string | Node>(selector: DOMSelector<T>, options?: i18n.TOptions): DOMResult<T> => {\n    return $(selector).localize(options) as DOMResult<T>;\n};\n","import {\n    Keys,\n    Types,\n    KeyToType,\n    verify,\n    deepEqual,\n    dropUndefined,\n} from '@cdp/core-utils';\nimport { Subscription, EventBroker } from '@cdp/events';\nimport {\n    Cancelable,\n    checkCanceled as cc,\n} from '@cdp/promise';\nimport {\n    StorageDataTypeList,\n    StorageInputDataTypeList,\n    IStorageOptions,\n    IStorageDataOptions,\n    IStorageDataReturnType,\n    IStorageEventCallback,\n    IStorage,\n} from '@cdp/core-storage';\nimport {\n    Serializable,\n    serialize,\n    deserialize,\n} from '@cdp/binary';\n\n/**\n * @en Web storage data type set interface.\n * @ja Web storage に格納可能な型の集合\n */\nexport type WebStorageDataTypeList = StorageDataTypeList & Serializable;\n/** WebStorage I/O options */\nexport type WebStorageOptions<K extends Keys<WebStorageDataTypeList> = Keys<WebStorageDataTypeList>> = IStorageDataOptions<WebStorageDataTypeList, K>;\n/** WebStorage return value */\nexport type WebStorageResult<K extends Keys<WebStorageDataTypeList>> = KeyToType<WebStorageDataTypeList, K>;\n/** WebStorage data type */\nexport type WebStorageDataTypes = Types<WebStorageDataTypeList>;\n/** MemoryStorage return type */\nexport type WebStorageReturnType<D extends WebStorageDataTypes> = IStorageDataReturnType<StorageDataTypeList, D>;\n/** WebStorage input data type */\nexport type WebStorageInputDataTypes = StorageInputDataTypeList<WebStorageDataTypeList>;\n/** WebStorage event callback */\nexport type WebStorageEventCallback = IStorageEventCallback<WebStorageDataTypeList>;\n\n/** @internal */\ninterface WebStorageEvent {\n    '@': [string | null, WebStorageDataTypes | null, WebStorageDataTypes | null];\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Web storage class. This class implements `IStorage` interface by using `window.localStorage`.\n * @ja ウェブストレージクラス. 本クラスは `window.localStorage` を用いて `IStorage` を実装\n */\nexport class WebStorage implements IStorage<WebStorageDataTypeList> {\n\n    /** @internal */\n    private readonly _broker = new EventBroker<WebStorageEvent>();\n    /** @internal */\n    private readonly _storage: Storage;\n\n    /**\n     * constructor\n     *\n     * @param storage\n     *  - `en` Web {@link Storage} instance\n     *  - `ja` Web {@link Storage} インスタンス\n     */\n    constructor(storage: Storage) {\n        verify('instanceOf', Storage, storage);\n        this._storage = storage;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IStorage\n    /**\n     * @en {@link IStorage} kind signature.\n     * @ja {@link IStorage} の種別を表す識別子\n     */\n    get kind(): string {\n        const signature = localStorage === this._storage ? 'local-storage' : 'session-storage';\n        return `web:${signature}`;\n    }\n\n    /**\n     * @en Returns the current value associated with the given key, or null if the given key does not exist in the list associated with the object.\n     * @ja キーに対応する値を取得. 存在しない場合は null を返却\n     *\n     * @param key\n     *  - `en` access key\n     *  - `ja` アクセスキー\n     * @param options\n     *  - `en` I/O options\n     *  - `ja` I/O オプション\n     * @returns\n     *  - `en` Returns the value which corresponds to a key with type change designated in `dataType`.\n     *  - `ja` `dataType` で指定された型変換を行って, キーに対応する値を返却\n     */\n    getItem<D extends WebStorageDataTypes = WebStorageDataTypes>(\n        key: string,\n        options?: WebStorageOptions<never>\n    ): Promise<WebStorageReturnType<D>>;\n\n    /**\n     * @en Returns the current value associated with the given key, or null if the given key does not exist in the list associated with the object.\n     * @ja キーに対応する値を取得. 存在しない場合は null を返却\n     *\n     * @param key\n     *  - `en` access key\n     *  - `ja` アクセスキー\n     * @param options\n     *  - `en` I/O options\n     *  - `ja` I/O オプション\n     * @returns\n     *  - `en` Returns the value which corresponds to a key with type change designated in `dataType`.\n     *  - `ja` `dataType` で指定された型変換を行って, キーに対応する値を返却\n     */\n    getItem<K extends Keys<WebStorageDataTypeList>>(\n        key: string,\n        options?: WebStorageOptions<K>\n    ): Promise<WebStorageResult<K> | null>;\n\n    async getItem(key: string, options?: WebStorageOptions): Promise<WebStorageDataTypes | null> {\n        return dropUndefined(await deserialize(this._storage[key], options!));\n    }\n\n    /**\n     * @en Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n     * @ja キーを指定して値を設定. 存在しない場合は新規に作成\n     *\n     * @param key\n     *  - `en` access key\n     *  - `ja` アクセスキー\n     * @param options\n     *  - `en` I/O options\n     *  - `ja` I/O オプション\n     */\n    async setItem<V extends WebStorageInputDataTypes>(key: string, value: V, options?: WebStorageOptions<never>): Promise<void> {\n        options = options ?? {};\n        const newVal = dropUndefined(value, true);                                      // `null` or `undefined` → 'null' or 'undefined'\n        const oldVal = dropUndefined(await deserialize(this._storage[key], options));   // `undefined` → `null`\n        if (!deepEqual(oldVal, newVal)) {\n            this._storage.setItem(key, await serialize(newVal, options));\n            !options.silent && this._broker.trigger('@', key, newVal, oldVal);\n        }\n    }\n\n    /**\n     * @en Removes the key/value pair with the given key from the list associated with the object, if a key/value pair with the given key exists.\n     * @ja 指定されたキーに対応する値が存在すれば削除\n     *\n     * @param options\n     *  - `en` storage options\n     *  - `ja` ストレージオプション\n     */\n    async removeItem(key: string, options?: IStorageOptions): Promise<void> {\n        options = options ?? {};\n        await cc(options.cancel);\n        const value = this._storage[key];\n        if (undefined !== value) {\n            this._storage.removeItem(key);\n            !options.silent && this._broker.trigger('@', key, null, await deserialize(value, options));\n        }\n    }\n\n    /**\n     * @en Empties the list associated with the object of all key/value pairs, if there are any.\n     * @ja すべてのキーに対応する値を削除\n     *\n     * @param options\n     *  - `en` storage options\n     *  - `ja` ストレージオプション\n     */\n    async clear(options?: IStorageOptions): Promise<void> {\n        options = options ?? {};\n        await cc(options.cancel);\n        if (0 < this._storage.length) {\n            this._storage.clear();\n            !options.silent && this._broker.trigger('@', null, null, null);\n        }\n    }\n\n    /**\n     * @en Returns all entry keys.\n     * @ja すべてのキー一覧を返却\n     *\n     * @param options\n     *  - `en` cancel options\n     *  - `ja` キャンセルオプション\n     */\n    async keys(options?: Cancelable): Promise<string[]> {\n        await cc(options?.cancel);\n        return Object.keys(this._storage);\n    }\n\n    /**\n     * @en Subscrive event(s).\n     * @ja イベント購読設定\n     *\n     * @param listener\n     *  - `en` callback function.\n     *  - `ja` たコールバック関数\n     */\n    on(listener: WebStorageEventCallback): Subscription {\n        return this._broker.on('@', listener);\n    }\n\n    /**\n     * @en Unsubscribe event(s).\n     * @ja イベント購読解除\n     *\n     * @param listener\n     *  - `en` callback function.\n     *         When not set this parameter, listeners are released.\n     *  - `ja` コールバック関数\n     *         指定しない場合はすべてを解除\n     */\n    off(listener?: WebStorageEventCallback): void {\n        this._broker.off('@', listener);\n    }\n}\n\n// default storage\nexport const webStorage = new WebStorage(localStorage);\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        SYNC = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 0,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        MVC_SYNC_DECLARE                              = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_INVALID_SYNC_PARAMS                 = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.SYNC + 1, 'invalid sync params.'),\n        ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY          = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.SYNC + 2, 'invalid sync storage entires.'),\n        ERROR_MVC_INVALID_SYNC_STORAGE_DATA_NOT_FOUND = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.SYNC + 3, 'data not found.'),\n    }\n}\n","import {\n    Cancelable,\n    checkCanceled as cc,\n} from '@cdp/promise';\nimport {\n    IDataSync,\n    SyncMethods,\n    SyncContext,\n    SyncResult,\n} from './interfaces';\n\n/**\n * @en The {@link IDataSync} implemant class which has no effects.\n * @ja 何もしない {@link IDataSync} 実装クラス\n */\nclass NullDataSync implements IDataSync<object> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: IDataSync\n\n    /**\n     * @en {@link IDataSync} kind signature.\n     * @ja {@link IDataSync} の種別を表す識別子\n     */\n    get kind(): string {\n        return 'null';\n    }\n\n    /**\n     * @en Do data synchronization.\n     * @ja データ同期\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` オペレーションを指定\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` 同期するコンテキストオブジェクト\n     * @param options\n     *  - `en` option object\n     *  - `ja` オプション\n     */\n    async sync(method: SyncMethods, context: SyncContext<object>, options?: Cancelable): Promise<SyncResult<object>> {\n        const { cancel } = options ?? {};\n        await cc(cancel);\n        const response = Promise.resolve('read' === method ? {} : undefined);\n        context.trigger('@request', context, response);\n        return response;\n    }\n}\n\nexport const dataSyncNULL = new NullDataSync() as IDataSync<object>;\n","import { result } from '@cdp/core-utils';\nimport { SyncContext } from './interfaces';\n\n/** @internal resolve lack property */\nexport function resolveURL(context: SyncContext): string {\n    return result(context, 'url');\n}\n","import { RESULT_CODE, makeResult } from '@cdp/result';\nimport { AjaxOptions, ajax } from '@cdp/ajax';\nimport type {\n    IDataSync,\n    SyncMethods,\n    SyncContext,\n    SyncResult,\n    SyncObject,\n} from './interfaces';\nimport { resolveURL } from './internal';\n\n/**\n * @en Options interface for {@link RestDataSync}.\n * @ja {@link RestDataSync} に指定するオプション\n */\nexport interface RestDataSyncOptions extends AjaxOptions<'json'> {\n    url?: string;\n}\n\n/** @internal */\nconst _methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n};\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en The {@link IDataSync} implemant class which compliant RESTful.\n * @ja REST に準拠した {@link IDataSync} 実装クラス\n */\nclass RestDataSync<T extends object = SyncObject> implements IDataSync<T> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: IDataSync\n\n    /**\n     * @en {@link IDataSync} kind signature.\n     * @ja {@link IDataSync} の種別を表す識別子\n     */\n    get kind(): string {\n        return 'rest';\n    }\n\n    /**\n     * @en Do data synchronization.\n     * @ja データ同期\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` オペレーションを指定\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` 同期するコンテキストオブジェクト\n     * @param options\n     *  - `en` rest option object\n     *  - `ja` REST オプション\n     */\n    sync(method: SyncMethods, context: SyncContext, options?: RestDataSyncOptions): Promise<SyncResult<T>> {\n        const params = Object.assign({ dataType: 'json' }, options);\n\n        const url = params.url ?? resolveURL(context);\n        if (!url) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_PARAMS, 'A \"url\" property or function must be specified.');\n        }\n\n        params.method = _methodMap[method];\n\n        // Ensure request data.\n        if (null == params.data && ('create' === method || 'update' === method || 'patch' === method)) {\n            params.data = context.toJSON();\n        }\n\n        // Ajax request\n        const response = ajax(url, params);\n        context.trigger('@request', context, response);\n        return response;\n    }\n}\n\nexport const dataSyncREST = new RestDataSync() as IDataSync;\n","import {\n    Accessible,\n    PlainObject,\n    isArray,\n    isString,\n    isFunction,\n    deepMerge,\n} from '@cdp/core-utils';\nimport {\n    RESULT_CODE,\n    makeResult,\n    toResult,\n} from '@cdp/result';\nimport { IStorage, IStorageOptions } from '@cdp/core-storage';\nimport { webStorage } from '@cdp/web-storage';\nimport {\n    IDataSyncOptions,\n    IDataSync,\n    SyncMethods,\n    SyncObject,\n    SyncContext,\n    SyncResult,\n} from './interfaces';\nimport { resolveURL } from './internal';\n\n/** @internal */\nconst enum Const {\n    SEPARATOR = '::',\n}\n\n/**\n * @en {@link IDataSync} interface for {@link IStorage} accessor.\n * @ja {@link IStorage} アクセッサを備える {@link IDataSync} インターフェイス\n */\nexport interface IStorageDataSync<T extends object = SyncObject> extends IDataSync<T> {\n    /**\n     * @en Get current {@link IStorage} instance.\n     * @ja 現在対象の {@link IStorage} インスタンスにアクセス\n     */\n    getStorage(): IStorage;\n\n    /**\n     * @en Set new {@link IStorage} instance.\n     * @ja 新しい {@link IStorage} インスタンスを設定\n     */\n    setStorage(newStorage: IStorage): this;\n\n    /**\n     * @en Set new id-separator.\n     * @ja 新しい ID セパレータを設定\n     *\n     * @param newSeparator\n     *  - `en` new separator string\n     *  - `ja` 新しいセパレータ文字列\n     * @returns\n     *  - `en` old separator string\n     *  - `ja` 以前い設定されていたセパレータ文字列\n     */\n    setIdSeparator(newSeparator: string): string;\n}\n\n/**\n * @en {@link StorageDataSync} construction options.\n * @ja {@link StorageDataSync} 構築に指定するオプション\n */\nexport interface StorageDataSyncConstructionOptions {\n    separator?: string;\n}\n\n/**\n * @en Options interface for {@link StorageDataSync}.\n * @ja {@link StorageDataSync} に指定するオプション\n */\nexport type StorageDataSyncOptions = IDataSyncOptions & IStorageOptions;\n\n//__________________________________________________________________________________________________//\n\n/** @internal check model or not */\nfunction isModel(context: SyncContext): boolean {\n    return !!(context.constructor as unknown as Record<string, string>)['idAttribute'];\n}\n\n/** @internal create id */\nfunction genId(url: string): string {\n    return `${url}:${Date.now().toString(36)}`;\n}\n\n/** @internal resolve key for localStorage */\nfunction parseContext(context: Accessible<SyncContext>, separator: string): { model: boolean; key: string; url: string; data: Record<string, string>; } {\n    const model  = isModel(context);\n    const url    = resolveURL(context);\n    const idAttr = (context.constructor as unknown as Record<string, string>)['idAttribute'];\n    const data = (() => {\n        const retval = {} as Record<string, string>;\n        if (model) {\n            const valid    = !isFunction(context['has']) ? false : context['has'](idAttr) as boolean;\n            retval[idAttr] = valid ? context.id! : genId(url);\n        }\n        return retval;\n    })();\n    return {\n        model,\n        url,\n        key: `${url}${model ? `${separator}${data[idAttr]}` : ''}`,\n        data,\n    };\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en The {@link IDataSync} implemant class which target is {@link IStorage}. Default storage is {@link WebStorage}.\n * @ja {@link IStorage} を対象とした {@link IDataSync} 実装クラス. 既定値は {@link WebStorage}\n */\nclass StorageDataSync<T extends object = SyncObject> implements IStorageDataSync<T> {\n    private _storage: IStorage;\n    private _separator: string;\n\n    /**\n     * constructor\n     *\n     * @param storage\n     *  - `en` {@link IStorage} object\n     *  - `ja` {@link IStorage} オブジェクト\n     * @param options\n     *  - `en` construction options\n     *  - `ja` 構築オプション\n     */\n    constructor(storage: IStorage, options?: StorageDataSyncConstructionOptions) {\n        this._storage = storage;\n        this._separator = options?.separator ?? Const.SEPARATOR;\n    }\n\n    ///////////////////////////////////////////////////////////////////////\n    // implements: IStorageDataSync\n\n    /**\n     * @en Get current {@link IStorage} instance.\n     * @ja 現在対象の {@link IStorage} インスタンスにアクセス\n     */\n    getStorage(): IStorage {\n        return this._storage;\n    }\n\n    /**\n     * @en Set new {@link IStorage} instance.\n     * @ja 新しい {@link IStorage} インスタンスを設定\n     */\n    setStorage(newStorage: IStorage): this {\n        this._storage = newStorage;\n        return this;\n    }\n\n    /**\n     * @en Set new id-separator.\n     * @ja 新しい ID セパレータを設定\n     *\n     * @param newSeparator\n     *  - `en` new separator string\n     *  - `ja` 新しいセパレータ文字列\n     * @returns\n     *  - `en` old separator string\n     *  - `ja` 以前い設定されていたセパレータ文字列\n     */\n    setIdSeparator(newSeparator: string): string {\n        const oldSeparator = this._separator;\n        this._separator = newSeparator;\n        return oldSeparator;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IDataSync\n\n    /**\n     * @en {@link IDataSync} kind signature.\n     * @ja {@link IDataSync} の種別を表す識別子\n     */\n    get kind(): string {\n        return 'storage';\n    }\n\n    /**\n     * @en Do data synchronization.\n     * @ja データ同期\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` オペレーションを指定\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` 同期するコンテキストオブジェクト\n     * @param options\n     *  - `en` storage option object\n     *  - `ja` ストレージオプション\n     */\n    async sync(method: SyncMethods, context: SyncContext, options?: StorageDataSyncOptions): Promise<SyncResult<T>> {\n        const { model, key, url, data } = parseContext(context as Accessible<SyncContext>, this._separator);\n        if (!url) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_PARAMS, 'A \"url\" property or function must be specified.');\n        }\n\n        let response: PlainObject | void | null;\n        switch (method) {\n            case 'create': {\n                const opts = deepMerge({ data }, options);\n                response = await this.update(key, context, url, data[Object.keys(data)[0]], opts);\n                break;\n            }\n            case 'update':\n            case 'patch': {\n                response = await this.update(key, context, url, context.id, options);\n                break;\n            }\n            case 'delete':\n                response = await this.destroy(key, context, url, options);\n                break;\n            case 'read':\n                response = await this.find(model, key, url, options) as PlainObject;\n                if (null == response) {\n                    throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_STORAGE_DATA_NOT_FOUND, `method: ${method}`);\n                }\n                break;\n            default:\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_PARAMS, `unknown method: ${method}`);\n        }\n\n        context.trigger('@request', context, Promise.resolve(response!));\n        return response as SyncResult<T>;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// primate methods:\n\n    /** @internal */\n    private async queryEntries(url: string, options?: StorageDataSyncOptions): Promise<{ ids: boolean; items: (PlainObject | string)[]; }> {\n        const items = await this._storage.getItem<object>(url, options);\n        if (null == items) {\n            return { ids: true, items: [] };\n        } else if (isArray(items)) {\n            return { ids: !items.length || isString(items[0]), items };\n        } else {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY, `entry is not Array type.`);\n        }\n    }\n\n    /** @internal */\n    private saveEntries(url: string, entries: string[], options?: StorageDataSyncOptions): Promise<void> {\n        return this._storage.setItem(url, entries, options);\n    }\n\n    /** @internal */\n    private async find(model: boolean, key: string, url: string, options?: StorageDataSyncOptions): Promise<PlainObject | PlainObject[] | null> {\n        if (model) {\n            return this._storage.getItem<PlainObject>(key, options);\n        } else {\n            try {\n                // multi-entry\n                const { ids, items } = await this.queryEntries(url, options);\n                if (ids) {\n                    // findAll\n                    const entires: PlainObject[] = [];\n                    for (const id of items as string[]) {\n                        const entry = await this._storage.getItem<PlainObject>(`${url}${this._separator}${id}`, options);\n                        entry && entires.push(entry);\n                    }\n                    return entires;\n                } else {\n                    return items as PlainObject[];\n                }\n            } catch (e) {\n                const result = toResult(e);\n                if (RESULT_CODE.ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY === result.code) {\n                    return this._storage.getItem<PlainObject>(key, options);\n                }\n                throw e;\n            }\n        }\n    }\n\n    /** @internal */\n    private async update(key: string, context: SyncContext, url: string, id?: string, options?: StorageDataSyncOptions): Promise<PlainObject | null> {\n        const { data } = options ?? {};\n        const attrs = Object.assign(context.toJSON(), data);\n        await this._storage.setItem(key, attrs, options);\n        if (key !== url) {\n            const { ids, items } = await this.queryEntries(url, options);\n            if (ids && id && !items.includes(id)) {\n                items.push(id);\n                await this.saveEntries(url, items as string[], options);\n            }\n        }\n        return this.find(true, key, url, options) as Promise<PlainObject | null>;\n    }\n\n    /** @internal */\n    private async destroy(key: string, context: SyncContext, url: string, options?: StorageDataSyncOptions): Promise<PlainObject | null> {\n        const old = await this._storage.getItem(key, options);\n        await this._storage.removeItem(key, options);\n        if (key !== url) {\n            const { ids, items } = await this.queryEntries(url, options);\n            if (ids && context.id) {\n                const entries = items.filter(i => i !== context.id);\n                await this.saveEntries(url, entries as string[], options);\n            }\n        }\n        return old as PlainObject;\n    }\n}\n\n/**\n * @en Create {@link IStorageDataSync} object with {@link IStorage}.\n * @ja {@link IStorage} を指定して, {@link IStorageDataSync} オブジェクトを構築\n *\n * @param storage\n *  - `en` {@link IStorage} object\n *  - `ja` {@link IStorage} オブジェクト\n * @param options\n *  - `en` construction options\n *  - `ja` 構築オプション\n */\nexport const createStorageDataSync = (storage: IStorage, options?: StorageDataSyncConstructionOptions): IStorageDataSync => {\n    return new StorageDataSync(storage, options);\n};\n\nexport const dataSyncSTORAGE = createStorageDataSync(webStorage);\n","import { IDataSync } from './interfaces';\nimport { dataSyncNULL } from './null';\n\n/** @internal */ let _default: IDataSync = dataSyncNULL;\n\n/**\n * @en Get or update default {@link IDataSync} object.\n * @ja 既定の {@link IDataSync} オブジェクトの取得 / 更新\n *\n * @param newSync\n *  - `en` new data-sync object. if `undefined` passed, only returns the current object.\n *  - `ja` 新しい data-sync オブジェクトを指定. `undefined` が渡される場合は現在設定されている data-sync の返却のみ行う\n * @returns\n *  - `en` old data-sync object.\n *  - `ja` 以前の data-sync オブジェクトを返却\n */\nexport function defaultSync(newSync?: IDataSync): IDataSync {\n    if (null == newSync) {\n        return _default;\n    } else {\n        const oldSync = _default;\n        _default = newSync;\n        return oldSync;\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        MODEL = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 5,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        MVC_MODEL_DECLARE      = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_INVALID_DATA = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.MODEL + 1, 'invalid data.'),\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Primitive,\n    Nullish,\n    Accessible,\n    Constructor,\n    Class,\n    Arguments,\n    isObject,\n    isEmptyObject,\n    luid,\n    escapeHTML,\n    assignValue,\n    deepCopy,\n    deepEqual,\n    diff,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    Subscription,\n    Silenceable,\n    EventBroker,\n    EventReceiver,\n    EventSource,\n} from '@cdp/events';\nimport { checkCanceled as cc } from '@cdp/promise';\nimport {\n    IObservable,\n    IObservableEventBrokerAccess,\n    ObservableObject,\n} from '@cdp/observable';\nimport {\n    RESULT_CODE,\n    Result,\n    makeResult,\n    SUCCEEDED,\n    FAILED,\n} from '@cdp/result';\nimport { SyncContext, defaultSync } from '@cdp/data-sync';\nimport {\n    ModelSeed,\n    ModelEvent,\n    ModelValidateAttributeOptions,\n    ModelAttributeInput,\n    ModelSetOptions,\n    ModelConstructionOptions,\n    ModelSyncMethods,\n    ModelSyncResult,\n    ModelDataSyncOptions,\n    ModelFetchOptions,\n    ModelSaveOptions,\n    ModelDestroyOptions,\n} from './interfaces';\n\n/** @internal */ const _defineAttributes = Symbol('define');\n/** @internal */ const _updateAttributes = Symbol('update');\n/** @internal */ const _validate         = Symbol('validate');\n/** @internal */ const _changeHandler    = Symbol('onchange');\n/** @internal */ const _broker           = Symbol('broker');\n/** @internal */ const _properties       = Symbol('properties');\n\n/** @internal */\ninterface Property<T> {\n    attrs: Accessible<ObservableObject>;\n    baseAttrs: T;\n    prevAttrs: T;\n    changedAttrs?: Partial<T>;\n    readonly cid: string;\n    readonly options: ModelSetOptions;\n    changeFired: boolean;\n}\n\n/**\n * @en Valid attributes result.\n * @ja 属性検証の有効値\n */\nexport const RESULT_VALID_ATTRS = Object.freeze(makeResult(RESULT_CODE.SUCCESS, 'valid attribute.'));\n\n/** @internal helper for save() */\nfunction parseSaveArgs<A extends object>(...args: any[]): { attrs?: ModelAttributeInput<A>; options?: ModelSaveOptions; } {\n    let [key, value, options] = args; // eslint-disable-line prefer-const\n    let attrs: any;\n\n    if (null == key || isObject(key)) {\n        attrs = key;\n        options = value;\n    } else {\n        assignValue(attrs = {}, key, value);\n    }\n\n    if (options?.data) {\n        attrs = Object.assign(attrs || {}, options.data);\n    }\n\n    return { attrs, options };\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Base class definition for model that provides a basic set of functionality for managing interaction.\n * @ja インタラクションのための基本機能を提供する Model の基底クラス定義\n *\n * @example <br>\n *\n * ```ts\n * import { Model, ModelConstructor } from '@cdp/runtime';\n *\n * interface ContentAttribute {\n *   uri: string;\n *   readonly size: number;\n *   cookie?: string;\n * }\n * ```\n *\n * - Basic Usage\n *\n * ```ts\n * // early cast\n * const ContentBase = Model as ModelConstructor<Model<ContentAttribute>, ContentAttribute>;\n *\n * class Content extends ContentBase {\n *   constructor(attrs: ContentAttribute) {\n *     super(attrs);\n *   }\n * }\n * ```\n *\n * or\n *\n * ```ts\n * // late cast\n * class ContentClass extends Model<ContentAttribute> {\n *   constructor(attrs: ContentAttribute) {\n *     super(attrs);\n *   }\n * }\n *\n * const Content = ContentClass as ModelConstructor<ContentClass, ContentAttribute>;\n * ```\n * then\n *\n * ```ts\n * const content = new Content({\n *   uri: 'aaa.txt',\n *   size: 10,\n *   cookie: undefined, // need explicit assign\n * });\n *\n * console.log(content.uri);    // 'aaa.txt'\n * console.log(content.size);   // '10'\n * console.log(content.cookie); // 'undefined'\n * ```\n *\n * - Using Custom TEvent\n *\n * ```ts\n * import { ModelEvent } from '@cdp/model';\n *\n * interface CustomEvent extends ModelEvent<ContentAttribute> {\n *   fire: [boolean, number];\n * }\n * \n * :\n *\n * // early cast\n * const ContentBase = Model as ModelConstructor<Model<ContentAttribute, CustomEvent>, ContentAttribute>;\n * class Content extends ContentBase {\n *   :\n * }\n *\n * // late cast\n * class ContentClass extends Model<ContentAttribute, CustomEvent> {\n *   :\n * }\n * const Content = ContentClass as ModelConstructor<ContentClass, ContentAttribute>;\n *\n * const content = new Content({ ... });\n * content.trigger('fire', true, 100);\n * ```\n */\nexport abstract class Model<T extends object = any, TEvent extends ModelEvent<T> = ModelEvent<T>> extends EventReceiver implements EventSource<TEvent> {\n    /**\n     * @en Get ID attribute name.\n     * @ja ID アトリビュート名にアクセス\n     *\n     * @override\n     */\n    static idAttribute = 'id';\n\n    /**\n     * @en Attributes pool\n     * @ja 属性格納領域\n     *\n     * @internal\n     */\n    private readonly [_properties]!: Property<T>;\n\n    /**\n     * constructor\n     *\n     * @param attributes\n     *  - `en` initial attribute values\n     *  - `ja` 属性の初期値を指定\n     */\n    constructor(attributes: Required<T>, options?: ModelConstructionOptions) {\n        super();\n        const opts = Object.assign({}, options);\n        const attrs = opts.parse ? this.parse(attributes, opts) as T : attributes;\n        const props: Property<T> = {\n            attrs: ObservableObject.from(attrs) as Accessible<ObservableObject>,\n            baseAttrs: { ...attrs },\n            prevAttrs: { ...attrs },\n            cid: luid('model:', 8),\n            options: opts,\n            changeFired: false,\n        };\n        Object.defineProperty(this, _properties, { value: props });\n\n        for (const key of Object.keys(attrs)) {\n            this[_defineAttributes](this, key);\n        }\n\n        (this as any)[_changeHandler] = () => {\n            (this as Model).trigger('@change', this as Model);\n\n            const { _prevAttrs, _attrs } = this;\n            const changedKeys = Object.keys(diff(_prevAttrs, _attrs as unknown as Partial<T>));\n            for (const key of changedKeys) {\n                (this as any).trigger(`@change:${key}`, this, _attrs[key], _prevAttrs[key], key);\n            }\n\n            this[_properties].changeFired = true;\n        };\n\n        this[_validate]({}, opts);\n    }\n\n    /** @internal attribute update core */\n    private [_updateAttributes](name: string, val: unknown): void {\n        if (!deepEqual(this._attrs[name], val)) {\n            const { attrs, changeFired } = this[_properties];\n            if (changeFired) {\n                this[_properties].changeFired = false;\n                this[_properties].prevAttrs = { ...attrs } as T;\n            }\n            delete this[_properties].changedAttrs;\n            assignValue(this._prevAttrs, name, attrs[name]);\n            assignValue(attrs, name, val);\n        }\n    }\n\n    /** @internal attribute bridge def */\n    private [_defineAttributes](instance: object, name: string): void {\n        const proto = instance.constructor.prototype;\n        if (!(name in proto)) {\n            Object.defineProperty(proto, name, {\n                get(): unknown {\n                    return this._attrs[name];\n                },\n                set(val: unknown): void {\n                    this[_updateAttributes](name, val);\n                },\n                enumerable: true,\n                configurable: true,\n            });\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: public properties\n\n    /**\n     * @en Get content ID.\n     * @ja コンテンツ ID を取得\n     */\n    get id(): string {\n        const idAttr = idAttribute(this, 'id');\n        const { cid, attrs } = this[_properties];\n        return (idAttr in attrs) ? attrs[idAttr] as string || cid : cid;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: protected properties\n\n    /**\n     * @en Attributes instance\n     * @ja 属性を格納するインスタンス\n     */\n    protected get _attrs(): Accessible<ObservableObject> {\n        return this[_properties].attrs;\n    }\n\n    /**\n     * @en Default attributes instance\n     * @ja 既定値属性を格納するインスタンス\n     */\n    protected get _baseAttrs(): T {\n        return this[_properties].baseAttrs;\n    }\n\n    /**\n     * @en Previous attributes instance\n     * @ja 変更前の属性を格納するインスタンス\n     */\n    protected get _prevAttrs(): Accessible<T> {\n        return this[_properties].prevAttrs as Accessible<T>;\n    }\n\n    /**\n     * @en Changed attributes instance\n     * @ja 変更のあった属性を格納するインスタンス\n     */\n    protected get _changedAttrs(): Partial<T> {\n        if (null == this[_properties].changedAttrs) {\n            this[_properties].changedAttrs = diff(this._baseAttrs, this._attrs as unknown as Partial<T>);\n        }\n        return this[_properties].changedAttrs;\n    }\n\n    /**\n     * @en Get internal content ID.\n     * @ja 内部のコンテンツ ID を取得\n     */\n    protected get _cid(): string {\n        return this[_properties].cid;\n    }\n\n    /**\n     * @en Get creating options.\n     * @ja 構築時のオプションを取得\n     */\n    protected get _options(): ModelSetOptions {\n        return this[_properties].options;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: events\n\n    /**\n     * @en EventSource type resolver.\n     * @ja EventSource 型解決用ヘルパーアクセッサ\n     */\n    get $(): EventSource<TEvent> {\n        return this;\n    }\n\n    /** @internal broker access */\n    private get [_broker](): EventBroker<any> {\n        return (this._attrs as IObservable as IObservableEventBrokerAccess).getBroker();\n    }\n\n    /**\n     * @en Check whether this object has clients.\n     * @ja クライアントが存在するか判定\n     *\n     * @param channel\n     *  - `en` event channel key. (string | symbol)\n     *  - `ja` イベントチャネルキー (string | symbol)\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *  - `ja` `channel` に対応したコールバック関数\n     */\n    hasListener<Channel extends keyof TEvent>(channel?: Channel, listener?: (...args: Arguments<TEvent[Channel]>) => unknown): boolean {\n        return this[_broker].hasListener(channel, listener);\n    }\n\n    /**\n     * @en Returns registered channel keys.\n     * @ja 登録されているチャネルキーを返却\n     */\n    channels(): (keyof TEvent)[] {\n        return this[_broker].channels().filter(c => '@' !== c) as (keyof TEvent)[];\n    }\n\n    /**\n     * @en Notify event to clients.\n     * @ja event 発行\n     *\n     * @param channel\n     *  - `en` event channel key. (string | symbol)\n     *  - `ja` イベントチャネルキー (string | symbol)\n     * @param args\n     *  - `en` arguments for callback function of the `channel` corresponding.\n     *  - `ja` `channel` に対応したコールバック関数に渡す引数\n     */\n    public trigger<Channel extends keyof TEvent>(channel: Channel, ...args: Arguments<Partial<TEvent[Channel]>>): void {\n        (this[_broker] as any).trigger(channel, ...args);\n    }\n\n    /**\n     * @en Unsubscribe event(s).\n     * @ja イベント購読解除\n     *\n     * @param channel\n     *  - `en` target event channel key. (string | symbol)\n     *         When not set this parameter, everything is released.\n     *  - `ja` 対象のイベントチャネルキー (string | symbol)\n     *         指定しない場合はすべて解除\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *         When not set this parameter, all same `channel` listeners are released.\n     *  - `ja` `channel` に対応したコールバック関数\n     *         指定しない場合は同一 `channel` すべてを解除\n     */\n    public off<Channel extends keyof TEvent>(channel?: Channel | Channel[], listener?: (...args: Arguments<TEvent[Channel]>) => unknown): void {\n        this._attrs.off(channel as any, listener as any);\n    }\n\n    /**\n     * @en Subscrive event(s).\n     * @ja イベント購読設定\n     *\n     * @param channel\n     *  - `en` target event channel key. (string | symbol)\n     *  - `ja` 対象のイベントチャネルキー (string | symbol)\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *  - `ja` `channel` に対応したコールバック関数\n     */\n    public on<Channel extends keyof TEvent>(channel: Channel | Channel[], listener: (...args: Arguments<TEvent[Channel]>) => unknown): Subscription {\n        this._attrs.on('@', (this as any)[_changeHandler]);\n        return this._attrs.on(channel as any, listener as any);\n    }\n\n    /**\n     * @en Subscrive event(s) but it causes the bound callback to only fire once before being removed.\n     * @ja 一度だけハンドリング可能なイベント購読設定\n     *\n     * @param channel\n     *  - `en` target event channel key. (string | symbol)\n     *  - `ja` 対象のイベントチャネルキー (string | symbol)\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *  - `ja` `channel` に対応したコールバック関数\n     */\n    public once<Channel extends keyof TEvent>(channel: Channel | Channel[], listener: (...args: Arguments<TEvent[Channel]>) => unknown): Subscription {\n        const context = this.on(channel, listener);\n        const managed = this.on(channel, () => {\n            context.unsubscribe();\n            managed.unsubscribe();\n        });\n        return context;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: validation\n\n    /**\n     * @en Check valid or not.\n     * @ja 検証の成否を取得\n     */\n    get isValid(): boolean {\n        return SUCCEEDED(this.validate({ silent: true }).code);\n    }\n\n    /**\n     * @en Validate result accesser.\n     * @ja 検証結果にアクセス\n     */\n    public validate(options?: Silenceable): Result {\n        const opts = Object.assign({ validate: true, noThrow: true, extend: false }, options);\n        return this[_validate]({}, opts);\n    }\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /**\n     * @en Validate data method.\n     * @ja データ検証\n     *\n     * @override\n     *\n     * @param attributes\n     *  - `en` validatee attributes\n     *  - `ja` 被検証属性\n     * @param options\n     *  - `en` validate options\n     *  - `ja` 検証オプション\n     */\n    protected validateAttributes<A extends T>(attributes: ModelAttributeInput<A>, options?: ModelValidateAttributeOptions): Result {\n        return RESULT_VALID_ATTRS;\n    }\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n\n    /** @internal validate */\n    private [_validate]<A extends T>(attributes: ModelAttributeInput<A>, options?: ModelSetOptions): Result | never {\n        const { validate, silent, noThrow } = options ?? {};\n        if (validate) {\n            const attrs = { ...this._attrs, ...attributes };\n            const result = this.validateAttributes(attrs, options);\n            if (FAILED(result.code)) {\n                if (!silent) {\n                    (this as Model).trigger('@invalid', this as Model, attrs, result);\n                }\n                if (!noThrow) {\n                    throw result;\n                }\n            }\n            return result;\n        } else {\n            return RESULT_VALID_ATTRS;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: attributes\n\n    /**\n     * @en Check the {@link Model} has valid property. (not `null` or `undefined`)\n     * @ja {@link Model} が有効なプロパティを持っているか確認 (`null` または `undefined` でない)\n     */\n    public has(attribute: keyof T): boolean {\n        return null != (this._attrs as unknown as T)[attribute];\n    }\n\n    /**\n     * @en Get the HTML-escaped value of an attribute.\n     * @ja HTML で使用する文字を制御文字に置換した属性値を取得\n     */\n    public escape(attribute: keyof T): string {\n        return escapeHTML(this._attrs[attribute] as Primitive);\n    }\n\n    /**\n     * @en Update attributes for batch input with options.\n     * @ja 属性の一括設定\n     *\n     * @param attributes\n     *  - `en` update attributes\n     *  - `ja` 更新属性\n     * @param options\n     *  - `en` set attributes options\n     *  - `ja` 属性更新用オプション\n     */\n    public setAttributes<A extends T>(attributes: ModelAttributeInput<A>, options?: ModelSetOptions): this {\n        const { silent, extend } = options ?? {};\n\n        try {\n            if (silent) {\n                this._attrs.suspend(true);\n            }\n\n            const result = this[_validate](attributes, options);\n            if (FAILED(result.code)) {\n                return this;\n            }\n\n            for (const attr of Object.keys(attributes)) {\n                if (attr in this._attrs) {\n                    this[_updateAttributes](attr, attributes[attr]);\n                } else if (extend) {\n                    this[_defineAttributes](this, attr);\n                    this[_updateAttributes](attr, attributes[attr]);\n                }\n            }\n        } finally {\n            if (silent) {\n                this._attrs.resume();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Clear all attributes on the {@link Model}. (set `undefined`)\n     * @ja {@link Model} からすべての属性を削除 (`undefined` を設定)\n     */\n    public clear(options?: ModelSetOptions): this {\n        const clearAttrs = {} as Accessible<object>;\n        for (const attr of Object.keys(this._baseAttrs)) {\n            clearAttrs[attr] = undefined;\n        }\n        return this.setAttributes(clearAttrs, options);\n    }\n\n    /**\n     * @en Return a copy of the model's `attributes` object.\n     * @ja Model 属性値のコピーを返却\n     */\n    public toJSON(): T {\n        return deepCopy({ ...this._attrs } as T);\n    }\n\n    /**\n     * @es Clone this instance.\n     * @ja インスタンスの複製を返却\n     *\n     * @override\n     */\n    public clone(): this {\n        const { constructor, _attrs, _options } = this;\n        return new (constructor as Constructor<this>)(_attrs, _options);\n    }\n\n    /**\n     * @en Check changed attributes.\n     * @ja 変更された属性値を持つか判定\n     *\n     * @param attribute\n     *  - `en` checked attribute\n     *  - `ja` 検証する属性\n     */\n    public hasChanged(attribute?: keyof T): boolean {\n        if (null == attribute) {\n            return !isEmptyObject(this._changedAttrs);\n        } else {\n            return attribute in this._changedAttrs;\n        }\n    }\n\n    /**\n     * @en Return an object containing all the attributes that have changed, or `undefined` if there are no changed attributes.\n     * @ja 入力した attributes 値の差分に対して変更がある属性値を返却. 差分がない場合は `undefiend` を返却\n     *\n     * @param attributes\n     *  - `en` checked attributes\n     *  - `ja` 検証する属性\n     */\n    public changed(attributes?: Partial<T>): Partial<T> | undefined {\n        if (!attributes) {\n            return this.hasChanged() ? { ...this._changedAttrs } : undefined;\n        } else {\n            const changed = diff(this._attrs, attributes);\n            return !isEmptyObject(changed) ? changed : undefined;\n        }\n    }\n\n    /**\n     * @en Get the previous value of an attribute, recorded at the time the last `@change` event was fired.\n     * @ja `@change` が発火された前の属性値を取得\n     */\n    public previous<K extends keyof T>(attribute: K): T[K] {\n        return this._prevAttrs[attribute];\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: sync\n\n    /**\n     * @en Check a {@link Model} is new if it has never been saved to the server, and lacks an id.\n     * @ja {@link Model} がまだサーバーに存在しないかチェック. 既定では `idAttribute` の有無で判定\n     */\n    protected isNew(): boolean {\n        const idAttr = idAttribute(this, 'id');\n        return !this.has(idAttr as keyof T);\n    }\n\n    /**\n     * @en Converts a response into the hash of attributes to be `set` on the model. The default implementation is just to pass the response along.\n     * @ja レスポンスの変換メソッド. 既定では何もしない\n     *\n     * @override\n     */\n    protected parse(response: ModelSeed | void, options?: ModelSetOptions): T | void { // eslint-disable-line @typescript-eslint/no-unused-vars\n        return response as T;\n    }\n\n    /**\n     * @en Proxy {@link IDataSync.sync | IDataSync.sync}() by default -- but override this if you need custom syncing semantics for *this* particular model.\n     * @ja データ同期. 必要に応じてオーバーライド可能.\n     *\n     * @override\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` オペレーションを指定\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` 同期するコンテキストオブジェクト\n     * @param options\n     *  - `en` option object\n     *  - `ja` オプション\n     */\n    protected sync(method: ModelSyncMethods, context: Model<T>, options?: ModelDataSyncOptions): Promise<ModelSyncResult<T>> {\n        return defaultSync().sync(method, context as SyncContext<T>, options) as Promise<ModelSyncResult<T>>;\n    }\n\n    /**\n     * @en Fetch the {@link Model} from the server, merging the response with the model's local attributes.\n     * @ja {@link Model} 属性のサーバー同期. レスポンスのマージを実行\n     */\n    public async fetch(options?: ModelFetchOptions): Promise<T> {\n        const opts = Object.assign({ parse: true }, options, { syncMethod: 'read' });\n\n        try {\n            const resp = await this.sync('read', this as Model<T>, opts) as T;\n            this.setAttributes(opts.parse ? this.parse(resp as ModelSeed, opts) as T : resp, opts);\n            (this as Model).trigger('@sync', this as Model, resp as ModelSeed, opts);\n            return resp;\n        } catch (e) {\n            (this as Model).trigger('@error', this as Model, e, opts);\n            throw e;\n        }\n    }\n\n    /**\n     * @en Set a hash of {@link Model} attributes, and sync the model to the server. <br>\n     *     If the server returns an attributes hash that differs, the model's state will be `set` again.\n     * @ja {@link Model} 属性をサーバーに保存. <br>\n     *     異なる属性が返却される場合は再設定\n     *\n     * @param key\n     *  - `en` update attribute key\n     *  - `ja` 更新属性キー\n     * @param value\n     *  - `en` update attribute value\n     *  - `ja` 更新属性値\n     * @param options\n     *  - `en` save options\n     *  - `ja` 保存オプション\n     */\n    public async save<K extends keyof T>(key?: keyof T, value?: T[K], options?: ModelSaveOptions): Promise<T | void>;\n\n    /**\n     * @en Set a hash of {@link Model} attributes, and sync the model to the server. <br>\n     *     If the server returns an attributes hash that differs, the model's state will be `set` again.\n     * @ja {@link Model} 属性をサーバーに保存. <br>\n     *     異なる属性が返却される場合は再設定\n     *\n     * @param attributes\n     *  - `en` update attributes\n     *  - `ja` 更新属性\n     * @param options\n     *  - `en` save options\n     *  - `ja` 保存オプション\n     */\n    public async save<A extends T>(attributes: ModelAttributeInput<A> | Nullish, options?: ModelSaveOptions): Promise<T | void>;\n\n    public async save(...args: unknown[]): Promise<T | void> {\n        const { attrs, options } = parseSaveArgs(...args);\n        const opts = Object.assign({ validate: true, parse: true, wait: true, extend: true }, options);\n\n        try {\n            const { wait } = opts;\n\n            const method = opts.syncMethod = this.isNew() ? 'create' : opts.patch ? 'patch' : 'update';\n\n            if (attrs) {\n                if (!wait) {\n                    this.setAttributes(attrs, opts);\n                    this[_properties].baseAttrs = { ...this._attrs } as T;\n                } else {\n                    this[_validate](attrs, opts);\n                }\n                if ('patch' === method) {\n                    opts.data = attrs;\n                } else {\n                    opts.data = Object.assign(this.toJSON(), attrs);\n                }\n            }\n\n            const resp = await this.sync(method, this as Model<T>, opts) as ModelSeed;\n\n            let serverAttrs = opts.parse ? this.parse(resp, opts) : resp;\n            if (attrs && wait) {\n                serverAttrs = Object.assign({}, attrs, serverAttrs);\n            }\n            if (isObject(serverAttrs) && !isEmptyObject(serverAttrs)) {\n                this.setAttributes(serverAttrs as T, opts);\n                this[_properties].baseAttrs = { ...this._attrs } as T;\n            }\n\n            (this as Model).trigger('@sync', this as Model, resp, opts);\n            return resp as T;\n        } catch (e) {\n            (this as Model).trigger('@error', this as Model, e, opts);\n            throw e;\n        }\n    }\n\n    /**\n     * @en Destroy this {@link Model} on the server if it was already persisted.\n     * @ja {@link Model} をサーバーから削除\n     *\n     * @param options\n     *  - `en` destroy options\n     *  - `ja` 破棄オプション\n     */\n    public async destroy(options?: ModelDestroyOptions): Promise<T | void> {\n        const opts = Object.assign({ wait: true }, options, { syncMethod: 'delete' });\n\n        try {\n            const { wait, cancel } = opts;\n            const exists = !this.isNew();\n            const destruct = (): void => {\n                this.stopListening();\n                (this as Model).trigger('@destroy', this as Model, opts);\n            };\n\n            !wait && destruct();\n\n            let resp: T | void | undefined;\n            if (!exists) {\n                await cc(cancel);\n            } else {\n                resp = await this.sync('delete', this as Model<T>, opts) as T;\n            }\n\n            wait && destruct();\n            exists && (this as Model).trigger('@sync', this as Model, resp as ModelSeed, opts);\n\n            return resp;\n        } catch (e) {\n            (this as Model).trigger('@error', this as Model, e, opts);\n            throw e;\n        }\n    }\n}\n\n// mixin による `instanceof` は無効に設定\nsetMixClassAttribute(Model as unknown as Class, 'instanceOf', null);\n\n/**\n * @en Check the value-type is {@link Model}.\n * @ja {@link Model} 型であるか判定\n *\n * @param x\n *  - `en` evaluated value\n *  - `ja` 評価する値\n */\nexport function isModel(x: unknown): x is Model {\n    return x instanceof Model;\n}\n\n/**\n * @en Query {@link Model} `id-attribute`.\n * @ja {@link Model} の `id-attribute` を取得\n */\nexport function idAttribute(x: unknown, fallback = ''): string {\n    return isObject(x) ? ((x.constructor as any).idAttribute || fallback) : fallback;\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        COLLECTION = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 10,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        MVC_COLLECTION_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_INVALID_ACCESS         = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.COLLECTION + 1, 'invalid access.'),\n        ERROR_MVC_INVALID_COMPARATORS    = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.COLLECTION + 2, 'invalid comparators.'),\n        ERROR_MVC_EDIT_PERMISSION_DENIED = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.COLLECTION + 3, 'editing permission denied.'),\n    }\n}\n","import type { Accessible } from '@cdp/core-utils';\nimport { getLanguage } from '@cdp/i18n';\nimport {\n    SortOrder,\n    SortCallback,\n    SortKey,\n} from '../interfaces';\n\n/**\n * @en `Intl.Collator` factory function type definition.\n * @ja `Intl.Collator` を返却する関数型定義\n */\nexport type CollatorProvider = () => Intl.Collator;\n\n/** @internal default Intl.Collator provider */\nlet _collator: CollatorProvider = (): Intl.Collator => {\n    return new Intl.Collator(getLanguage(), { sensitivity: 'base', numeric: true });\n};\n\n/**\n * @ja 既定の Intl.Collator を設定\n *\n * @param newProvider\n *  - `en` new {@link CollatorProvider} object. if `undefined` passed, only returns the current object.\n *  - `ja` 新しい {@link CollatorProvider} オブジェクトを指定. `undefined` が渡される場合は現在設定されているオブジェクトの返却のみ行う\n * @returns\n *  - `en` old {@link CollatorProvider} object.\n *  - `ja` 設定されていた {@link CollatorProvider} オブジェクト\n */\nexport function defaultCollatorProvider(newProvider?: CollatorProvider): CollatorProvider {\n    if (null == newProvider) {\n        return _collator;\n    } else {\n        const oldProvider = _collator;\n        _collator = newProvider;\n        return oldProvider;\n    }\n}\n\n/**\n * @en Get string comparator function.\n * @ja 文字列比較用関数を取得\n *\n * @param prop\n *  - `en` property name\n *  - `ja` プロパティ名を指定\n * @param order\n *  - `en` sort order code\n *  - `ja` ソート順を指定\n */\nexport function getStringComparator<T, K extends string = string>(prop: K, order: SortOrder): SortCallback<T> {\n    return (lhs: Accessible<T>, rhs: Accessible<T>): number => {\n        // undefined は '' と同等に扱う\n        const lhsProp = (null != lhs[prop]) ? lhs[prop] as string : '';\n        const rhsProp = (null != rhs[prop]) ? rhs[prop] as string : '';\n        return order * _collator().compare(lhsProp, rhsProp);\n    };\n}\n\n/**\n * @en Get date comparator function.\n * @ja 日時比較用関数を取得\n *\n * @param prop\n *  - `en` property name\n *  - `ja` プロパティ名を指定\n * @param order\n *  - `en` sort order code\n *  - `ja` ソート順を指定\n */\nexport function getDateComparator<T, K extends string = string>(prop: K, order: SortOrder): SortCallback<T> {\n    return (lhs: Accessible<T>, rhs: Accessible<T>): number => {\n        const lhsDate = lhs[prop];\n        const rhsDate = rhs[prop];\n        if (lhsDate === rhsDate) {\n            // (undefined === undefined) or 自己参照\n            return 0;\n        } else if (null == lhsDate) {\n            // undefined は最低値扱い (昇順時に先頭へ)\n            return -1 * order;\n        } else if (null == rhsDate) {\n            // undefined は最低値扱い (昇順時に先頭へ)\n            return 1 * order;\n        } else {\n            const lhsValue = Object(lhsDate).valueOf();\n            const rhsValue = Object(rhsDate).valueOf();\n            if (lhsValue === rhsValue) {\n                return 0;\n            } else {\n                return (lhsValue < rhsValue ? -1 * order : 1 * order);\n            }\n        }\n    };\n}\n\n/**\n * @en Get generic comparator function by comparative operator.\n * @ja 比較演算子を用いた汎用比較関数の取得\n *\n * @param prop\n *  - `en` property name\n *  - `ja` プロパティ名を指定\n * @param order\n *  - `en` sort order code\n *  - `ja` ソート順を指定\n */\nexport function getGenericComparator<T, K extends string = string>(prop: K, order: SortOrder): SortCallback<T> {\n    return (lhs: Accessible<T>, rhs: Accessible<T>): number => {\n        if (lhs[prop] === rhs[prop]) {\n            return 0;\n        } else if (null == lhs[prop]) {\n            // undefined は最低値扱い (昇順時に先頭へ)\n            return -1 * order;\n        } else if (null == rhs[prop]) {\n            // undefined は最低値扱い (昇順時に先頭へ)\n            return 1 * order;\n        } else {\n            return (lhs[prop] < rhs[prop] ? -1 * order : 1 * order);\n        }\n    };\n}\n\n/**\n * @en Get boolean comparator function.\n * @ja 真偽値比較用関数を取得\n */\nexport const getBooleanComparator = getGenericComparator;\n\n/**\n * @en Get numeric comparator function.\n * @ja 数値比較用関数を取得\n */\nexport const getNumberComparator = getGenericComparator;\n\n/**\n * @en Convert to comparator from {@link SortKey}.\n * @ja {@link SortKey} を comparator に変換\n */\nexport function toComparator<T, K extends string = string>(sortKey: SortKey<K>): SortCallback<T> {\n    const { name, type, order } = sortKey;\n    switch (type) {\n        case 'string':\n            return getStringComparator<T, K>(name, order);\n        case 'boolean':\n            return getBooleanComparator<T, K>(name, order);\n        case 'number':\n            return getNumberComparator<T, K>(name, order);\n        case 'date':\n            return getDateComparator<T, K>(name, order);\n        default:\n            return getGenericComparator<T, K>(name, order);\n    }\n}\n\n/**\n * @en Convert to comparator array from {@link SortKey} array.\n * @ja {@link SortKey} 配列を comparator 配列に変換\n */\nexport function convertSortKeys<T, K extends string = string>(sortKeys: SortKey<K>[]): SortCallback<T>[] {\n    const comparators: SortCallback<T>[] = [];\n    for (const sortKey of sortKeys) {\n        comparators.push(toComparator(sortKey));\n    }\n    return comparators;\n}\n","import { unique } from '@cdp/core-utils';\nimport {\n    CancelToken,\n    checkCanceled as cc,\n} from '@cdp/promise';\nimport { ObservableArray, ArrayChangeRecord } from '@cdp/observable';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\n\nconst {\n    /** @internal */ trunc\n} = Math;\n\n/** @internal wait for change detection */\nfunction makePromise<T>(editor: ObservableArray<T>, remap?: T[]): Promise<ArrayChangeRecord<T>[]> {\n    return new Promise(resolve => {\n        const callback = (records: ArrayChangeRecord<T>[]): void => {\n            editor.off(callback);\n            if (remap) {\n                remap.length = 0;\n                remap.push(...editor);\n            }\n            resolve(records);\n        };\n        editor.on(callback);\n    });\n}\n\n/** @internal convert to {@link ObservableArray} if needed. */\nasync function getEditContext<T>(\n    target: ObservableArray<T> | T[],\n    token?: CancelToken\n): Promise<{ editor: ObservableArray<T>; promise: Promise<ArrayChangeRecord<T>[]>; }> | never {\n    if (target instanceof ObservableArray) {\n        await cc(token);\n        return {\n            editor: target,\n            promise: makePromise(target),\n        };\n    } else if (Array.isArray(target)) {\n        const editor = ObservableArray.from(target);\n        await cc(token);\n        return {\n            editor,\n            promise: makePromise(editor, target),\n        };\n    } else {\n        throw makeResult(RESULT_CODE.NOT_SUPPORTED, 'target is not Array or ObservableArray.');\n    }\n}\n\n/** @internal valid orders index */\nfunction validOrders(length: number, orders: number[]): boolean | never {\n    if (null == orders || orders.length <= 0) {\n        return false;\n    }\n\n    for (const index of orders) {\n        if (index < 0 || length <= index || trunc(index) !== index) {\n            throw makeResult(RESULT_CODE.NOT_SUPPORTED, `orders[] index is invalid. index: ${index}`);\n        }\n    }\n\n    return true;\n}\n\n/**\n * @en Clear all array elements.\n * @ja 配列の全削除\n *\n * @param target\n *  - `en` target array\n *  - `ja` 対象配列\n * @param token\n *  - `en` {@link CancelToken} reference. (enable `undefined`)\n *  - `ja` {@link CancelToken} を指定 (undefined 可)\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function clearArray<T>(target: ObservableArray<T> | T[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    if (target.length <= 0) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    editor.splice(0, target.length);\n\n    return promise;\n}\n\n/**\n * @en Append source elements to the end of array.\n * @ja 配列の末尾に追加\n *\n * @param target\n *  - `en` target array\n *  - `ja` 対象配列\n * @param src\n *  - `en` source elements\n *  - `ja` 追加元要素\n * @param token\n *  - `en` {@link CancelToken} reference. (enable `undefined`)\n *  - `ja` {@link CancelToken} を指定 (undefined 可)\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function appendArray<T>(target: ObservableArray<T> | T[], src: T[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    if (null == src || src.length <= 0) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    editor.push(...src);\n\n    return promise;\n}\n\n/**\n * @en Insert source elements to specified index of array.\n * @ja 指定した位置に挿入\n *\n * @param target\n *  - `en` target array\n *  - `ja` 対象配列\n * @param index\n *  - `ja` target array position index\n *  - `ja` 追加先のインデックス\n * @param src\n *  - `en` source elements\n *  - `ja` 追加元要素\n * @param token\n *  - `en` {@link CancelToken} reference. (enable `undefined`)\n *  - `ja` {@link CancelToken} を指定 (undefined 可)\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function insertArray<T>(target: ObservableArray<T> | T[], index: number, src: T[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    // 最後の要素に追加するため index == target.length を許容\n    if (index < 0 || target.length < index || trunc(index) !== index) {\n        throw makeResult(RESULT_CODE.NOT_SUPPORTED, `insertArray(), index is invalid. index: ${index}`);\n    } else if (null == src || src.length <= 0) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    editor.splice(index, 0, ...src);\n\n    return promise;\n}\n\n/**\n * @en Reorder array elements position.\n * @ja 項目の位置を変更\n *\n * @param target\n *  - `en` target array\n *  - `ja` 対象配列\n * @param index\n *  - `ja` target array position index\n *  - `ja` 追加先のインデックス\n * @param orders\n *  - `en` edit order index array\n *  - `ja` インデックス配列\n * @param token\n *  - `en` {@link CancelToken} reference. (enable `undefined`)\n *  - `ja` {@link CancelToken} を指定 (undefined 可)\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function reorderArray<T>(target: ObservableArray<T> | T[], index: number, orders: number[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    // 最後の要素に追加するため index == target.length を許容\n    if (index < 0 || target.length < index || trunc(index) !== index) {\n        throw makeResult(RESULT_CODE.NOT_SUPPORTED, `reorderArray(), index is invalid. index: ${index}`);\n    } else if (!validOrders(target.length, orders)) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    // 作業配列で編集\n    let work: (T | null)[] = Array.from(editor);\n    {\n        const reorders: T[] = [];\n        for (const order of unique(orders)) {\n            reorders.push(editor[order]);\n            work[order] = null;\n        }\n\n        work.splice(index, 0, ...reorders);\n        work = work.filter((value) => {\n            return null != value;\n        });\n    }\n\n    // 値を書き戻し\n    for (const idx of work.keys()) {\n        editor[idx] = work[idx] as T;\n    }\n\n    return promise;\n}\n\n/**\n * @en Remove array elements.\n * @ja 項目の削除\n *\n * @param target\n *  - `en` target array\n *  - `ja` 対象配列\n * @param orders\n *  - `en` removed order index array\n *  - `ja` インデックス配列\n * @param token\n *  - `en` {@link CancelToken} reference. (enable `undefined`)\n *  - `ja` {@link CancelToken} を指定 (undefined 可)\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function removeArray<T>(target: ObservableArray<T> | T[], orders: number[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    if (!validOrders(target.length, orders)) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    // 降順ソート\n    orders.sort((lhs, rhs) => {\n        return (lhs < rhs ? 1 : -1);\n    });\n\n    for (const order of unique(orders)) {\n        editor.splice(order, 1);\n    }\n\n    return promise;\n}\n","import { Keys, computeDate } from '@cdp/core-utils';\nimport { FilterCallback, DynamicCombination } from '../interfaces';\n\n/** @internal */ export type ValueTypeALL<T extends object> = Extract<number | string | Date, T[Keys<T>]>;\n/** @internal */ export type ValueTypeComparable<T extends object> = Extract<number | Date, T[Keys<T>]>;\n/** @internal */ export type ValueTypeString<T extends object> = Extract<string, T[Keys<T>]>;\n/** @internal */ export type DynamicOperatorDateUnit = 'year' | 'month' | 'day' | undefined;\n\n/** @internal DynamicPackageOperator.EQUAL */\nexport function equal<T extends object>(prop: keyof T, value: ValueTypeALL<T>): FilterCallback<T> {\n    return (item: T) => item[prop] === value;\n}\n\n/** @internal DynamicPackageOperator.NOT_EQUAL */\nexport function notEqual<T extends object>(prop: keyof T, value: ValueTypeALL<T>): FilterCallback<T> {\n    return (item: T) => item[prop] !== value;\n}\n\n/** @internal DynamicPackageOperator.GREATER */\nexport function greater<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => (item[prop] as ValueTypeComparable<T>) > value;\n}\n\n/** @internal DynamicPackageOperator.LESS */\nexport function less<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => (item[prop] as ValueTypeComparable<T>) < value;\n}\n\n/** @internal DynamicPackageOperator.GREATER_EQUAL */\nexport function greaterEqual<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => (item[prop] as ValueTypeComparable<T>) >= value;\n}\n\n/** @internal DynamicPackageOperator.LESS_EQUAL */\nexport function lessEqual<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => (item[prop] as ValueTypeComparable<T>) <= value;\n}\n\n/** @internal DynamicPackageOperator.LIKE */\nexport function like<T extends object>(prop: keyof T, value: ValueTypeString<T>): FilterCallback<T> {\n    return (item: T) => String(item[prop]).toLocaleLowerCase().includes(value.toLocaleLowerCase());\n}\n\n/** @internal DynamicPackageOperator.NOT_LIKE */\nexport function notLike<T extends object>(prop: keyof T, value: ValueTypeString<T>): FilterCallback<T> {\n    return (item: T) => !String(item[prop]).toLocaleLowerCase().includes(value.toLocaleLowerCase());\n}\n\n/** @internal DynamicPackageOperator.DATE_LESS_EQUAL */\nexport function dateLessEqual<T extends object>(prop: keyof T, value: number, unit: DynamicOperatorDateUnit): FilterCallback<T> {\n    return (item: T) => {\n        const date = computeDate(new Date(), -1 * value, unit);\n        return date <= (item[prop] as unknown as Date);\n    };\n}\n\n/** @internal DynamicPackageOperator.DATE_LESS_NOT_EQUAL */\nexport function dateLessNotEqual<T extends object>(prop: keyof T, value: number, unit: DynamicOperatorDateUnit): FilterCallback<T> {\n    return (item: T) => {\n        const date = computeDate(new Date(), -1 * value, unit);\n        return !(date <= (item[prop] as unknown as Date));\n    };\n}\n\n/** @internal DynamicPackageOperator.RANGE */\nexport function range<T extends object>(prop: keyof T, min: ValueTypeComparable<T>, max: ValueTypeComparable<T>): FilterCallback<T> {\n    return combination(DynamicCombination.AND, greaterEqual(prop, min), lessEqual(prop, max));\n}\n\n/** @internal フィルタの合成 */\nexport function combination<T extends object>(type: DynamicCombination, lhs: FilterCallback<T>, rhs: FilterCallback<T> | undefined): FilterCallback<T> {\n    return !rhs ? lhs : (item: T) => {\n        switch (type) {\n            case DynamicCombination.AND:\n                return lhs(item) && rhs(item);\n            case DynamicCombination.OR:\n                return lhs(item) || rhs(item);\n            default:\n                console.warn(`unknown combination: ${type}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                // fail safe\n                return lhs(item) && rhs(item);\n        }\n    };\n}\n","import { Keys } from '@cdp/core-utils';\nimport { convertSortKeys } from '../utils';\nimport {\n    SortCallback,\n    FilterCallback,\n    SortKey,\n    DynamicConditionSeed,\n    DynamicOperatorContext,\n    DynamicLimitCondition,\n    DynamicOperator,\n    DynamicCombination,\n} from '../interfaces';\nimport {\n    ValueTypeALL,\n    ValueTypeComparable,\n    ValueTypeString,\n    equal,\n    notEqual,\n    greater,\n    less,\n    greaterEqual,\n    lessEqual,\n    like,\n    notLike,\n    dateLessEqual,\n    dateLessNotEqual,\n    range,\n    combination,\n} from './dynamic-filters';\n\n/**\n * @en Dynamic query condition manager class.\n * @ja ダイナミッククエリ状態管理クラス\n */\nexport class DynamicCondition<TItem extends object, TKey extends Keys<TItem> = Keys<TItem>> implements DynamicConditionSeed<TItem, TKey> {\n\n    private _operators: DynamicOperatorContext<TItem>[];\n    private _combination: DynamicCombination;\n    private _sumKeys: Keys<TItem>[];\n    private _limit?: DynamicLimitCondition<TItem>;\n    private _random: boolean;\n    private _sortKeys: SortKey<TKey>[];\n\n    /**\n     * constructor\n     *\n     * @param seeds\n     *  - `en` {@link DynamicConditionSeed} instance\n     *  - `ja` {@link DynamicConditionSeed} インスタンス\n     */\n    constructor(seeds: DynamicConditionSeed<TItem, TKey> = { operators: [] }) {\n        const { operators, combination, sumKeys, limit, random, sortKeys } = seeds;\n        this._operators     = operators;\n        this._combination   = combination ?? DynamicCombination.AND;\n        this._sumKeys       = sumKeys ?? [];\n        this._limit         = limit;\n        this._random        = !!random;\n        this._sortKeys      = sortKeys ?? [];\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: DynamicConditionSeed\n\n    get operators(): DynamicOperatorContext<TItem>[] {\n        return this._operators;\n    }\n\n    set operators(values: DynamicOperatorContext<TItem>[]) {\n        this._operators = values;\n    }\n\n    get sumKeys(): (Keys<TItem>)[] {\n        return this._sumKeys;\n    }\n\n    set sumKeys(values: (Keys<TItem>)[]) {\n        this._sumKeys = values;\n    }\n\n    get combination(): DynamicCombination {\n        return this._combination;\n    }\n\n    set combination(value: DynamicCombination) {\n        this._combination = value;\n    }\n\n    get limit(): DynamicLimitCondition<TItem> | undefined {\n        return this._limit;\n    }\n\n    set limit(value: DynamicLimitCondition<TItem> | undefined) {\n        this._limit = value;\n    }\n\n    get random(): boolean {\n        return this._random;\n    }\n\n    set random(value: boolean) {\n        this._random = value;\n    }\n\n    get sortKeys(): SortKey<TKey>[] {\n        return this._sortKeys;\n    }\n\n    set sortKeys(values: SortKey<TKey>[]) {\n        this._sortKeys = values;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public accessor:\n\n    /**\n     * @en Get comparator functions.\n     * @ja 比較関数取得\n     */\n    get comparators(): SortCallback<TItem>[] {\n        return convertSortKeys(this._sortKeys);\n    }\n\n    /**\n     * @en Get synthesis filter function.\n     * @ja 合成済みフィルタ関数取得\n     */\n    get filter(): FilterCallback<TItem> {\n        let fltr: FilterCallback<TItem> | undefined;\n\n        for (const cond of this._operators) {\n            const { operator, prop, value } = cond;\n            switch (operator) {\n                case DynamicOperator.EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        equal<TItem>(prop, value as ValueTypeALL<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.NOT_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        notEqual<TItem>(prop, value as ValueTypeALL<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.GREATER:\n                    fltr = combination(\n                        this._combination,\n                        greater<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.LESS:\n                    fltr = combination(\n                        this._combination,\n                        less<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.GREATER_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        greaterEqual<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.LESS_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        lessEqual<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.LIKE:\n                    fltr = combination(\n                        this._combination,\n                        like<TItem>(prop, value as ValueTypeString<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.NOT_LIKE:\n                    fltr = combination(\n                        this._combination,\n                        notLike<TItem>(prop, value as ValueTypeString<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.DATE_LESS_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        dateLessEqual<TItem>(prop, value as number, cond.unit),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.DATE_LESS_NOT_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        dateLessNotEqual<TItem>(prop, value as number, cond.unit),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.RANGE:\n                    fltr = combination(\n                        this._combination,\n                        range<TItem>(prop, value as ValueTypeComparable<TItem>, cond.range as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                default:\n                    console.warn(`unknown operator: ${operator}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                    break;\n            }\n        }\n\n        return fltr ?? ((/* item */) => true);\n    }\n}\n","import {\n    Keys,\n    isFunction,\n    sort,\n    shuffle,\n} from '@cdp/core-utils';\nimport { checkCanceled as cc } from '@cdp/promise';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport {\n    SortKey,\n    SortCallback,\n    FilterCallback,\n    CollectionItemQueryOptions,\n    CollectionItemQueryResult,\n    CollectionQueryInfo,\n    CollectionItemProvider,\n    DynamicLimit,\n} from '../interfaces';\nimport { convertSortKeys } from '../utils/comparator';\nimport { DynamicCondition } from './dynamic-condition';\n\nconst {\n    /** @internal */ trunc\n} = Math;\n\n/** @internal 使用するプロパティが保証された CollectionItemQueryOptions */\ninterface SafeCollectionQueryOptions<TItem extends object, TKey extends Keys<TItem>> extends CollectionItemQueryOptions<TItem, TKey> {\n    sortKeys: SortKey<TKey>[];\n    comparators: SortCallback<TItem>[];\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Apply `filter` and `sort key` to the `items` from {@link queryItems}() result.\n * @ja {@link queryItems}() した `items` に対して `filter` と `sort key` を適用\n */\nexport function searchItems<TItem>(items: TItem[], filter?: FilterCallback<TItem> | null, ...comparators: SortCallback<TItem>[]): TItem[] {\n    let result = isFunction(filter) ? items.filter(filter) : items.slice();\n    for (const comparator of comparators) {\n        if (isFunction(comparator)) {\n            result = sort(result, comparator);\n        }\n    }\n    return result;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal conditinalFix に使用する Criteria Map */\nconst _limitCriteria = {\n    [DynamicLimit.COUNT]: null,\n    [DynamicLimit.SUM]: { coeff: 1 },\n    [DynamicLimit.SECOND]: { coeff: 1000 },\n    [DynamicLimit.MINUTE]: { coeff: 60 * 1000 },\n    [DynamicLimit.HOUR]: { coeff: 60 * 60 * 1000 },\n    [DynamicLimit.DAY]: { coeff: 24 * 60 * 60 * 1000 },\n    [DynamicLimit.KB]: { coeff: 1024 },\n    [DynamicLimit.MB]: { coeff: 1024 * 1024 },\n    [DynamicLimit.GB]: { coeff: 1024 * 1024 * 1024 },\n    [DynamicLimit.TB]: { coeff: 1024 * 1024 * 1024 * 1024 },\n};\n\n/**\n * @en Fix the target items by {@link DynamicCondition}.\n * @ja {@link DynamicCondition} に従い対象を整形\n *\n * @param items\n *  - `en` target items (destructive)\n *  - `ja` 対象のアイテム (破壊的)\n * @param condition\n *  - `en` condition object\n *  - `ja` 条件オブジェクト\n */\nexport function conditionalFix<TItem extends object, TKey extends Keys<TItem> = Keys<TItem>>(\n    items: TItem[],\n    condition: DynamicCondition<TItem, TKey>\n): CollectionItemQueryResult<TItem> {\n    const { random, limit, sumKeys } = condition;\n\n    if (random) {\n        shuffle(items, true);\n    }\n\n    if (limit) {\n        const { unit, value, prop } = limit;\n        const reset: TItem[] = [];\n        const criteria = _limitCriteria[unit];\n        const limitCount = value;\n        const excess = !!limit.excess;\n        let count = 0;\n        for (const item of items) {\n            if (!criteria) {\n                count++;\n            } else if (null != item[prop as Keys<TItem>]) {\n                count += (Number(item[prop as Keys<TItem>]) / criteria.coeff);\n            } else {\n                console.warn(`cannot access property: ${prop}`);\n                continue;\n            }\n\n            if (limitCount < count) {\n                if (excess) {\n                    reset.push(item);\n                }\n                break;\n            } else {\n                reset.push(item);\n            }\n        }\n        items = reset;\n    }\n\n    const result = {\n        total: items.length,\n        items,\n    } as CollectionItemQueryResult<TItem, Keys<TItem>>;\n\n    if (0 < sumKeys.length) {\n        for (const item of items) {\n            for (const key of sumKeys) {\n                if (!(key in result)) {\n                    (result[key] as unknown as number) = 0;\n                }\n                (result[key] as unknown as number) += Number(item[key]);\n            }\n        }\n    }\n\n    return result;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal すでにキャッシュされている対象に対して CollectionItemQueryOptions に指定された振る舞いを行う内部 query 関数 */\nasync function queryFromCache<TItem extends object, TKey extends Keys<TItem>>(\n    cached: TItem[],\n    options: SafeCollectionQueryOptions<TItem, TKey>\n): Promise<CollectionItemQueryResult<TItem>> {\n    const {\n        filter,\n        comparators,\n        index: baseIndex,\n        limit,\n        cancel: token,\n        progress,\n        auto,\n        noSearch,\n    } = options;\n\n    // 対象なし\n    if (!cached.length) {\n        return {\n            total: 0,\n            items: [],\n            options,\n        } as CollectionItemQueryResult<TItem>;\n    }\n\n    // キャッシュに対してフィルタリング, ソートを実行\n    const targets = noSearch ? cached.slice() : searchItems(cached, filter, ...comparators);\n\n    const results: TItem[] = [];\n    let index: number = baseIndex ?? 0;\n\n    while (true) {\n        await cc(token);\n        if (index < 0 || targets.length <= index || trunc(index) !== index) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid index: ${index}`);\n        } else if (null != limit && (limit <= 0 || trunc(limit) !== limit)) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid limit: ${ limit }`);\n        }\n\n        const opts = Object.assign(options, { index });\n        const items = targets.slice(index, (null != limit) ? index + limit : undefined);\n\n        results.push(...items);\n\n        const retval = {\n            total: targets.length,\n            items,\n            options: { ...opts } as CollectionItemQueryOptions<TItem>,\n        } as CollectionItemQueryResult<TItem>;\n\n        // 進捗通知\n        if (isFunction(progress)) {\n            progress({ ...retval });\n        }\n\n        if (auto && null != limit) {\n            if (targets.length <= index + limit) {\n                // 自動継続指定時には最後にすべての item を返却\n                retval.items = results;\n            } else {\n                index += items.length;\n                continue;\n            }\n        }\n\n        return retval;\n    }\n}\n\n/** @internal レスポンスのキャッシュを試行 */\nfunction tryCache<TItem extends object, TKey extends Keys<TItem>>(\n    queryInfo: CollectionQueryInfo<TItem, TKey>,\n    result: CollectionItemQueryResult<TItem>,\n    options: CollectionItemQueryOptions<TItem>\n): void {\n    const { noCache, noSearch } = options;\n    const canCache = !noCache && !noSearch && result.total && result.total === result.items.length;\n    if (canCache) {\n        queryInfo.cache = { ...result };\n        delete queryInfo.cache.options;\n    }\n}\n\n/** @internal `provider` 関数を使用して CollectionItemQueryOptions に指定された振る舞いを行う内部 `query` 関数 */\nasync function queryFromProvider<TItem extends object, TKey extends Keys<TItem>>(\n    queryInfo: CollectionQueryInfo<TItem, TKey>,\n    provider: CollectionItemProvider<TItem, TKey>,\n    options: SafeCollectionQueryOptions<TItem, TKey>\n): Promise<CollectionItemQueryResult<TItem>> {\n    const {\n        index: baseIndex,\n        limit,\n        cancel: token,\n        progress,\n        auto,\n    } = options;\n\n    const results: TItem[] = [];\n\n    const receivedAll = (resp: CollectionItemQueryResult<TItem>): boolean => {\n        const hasCond = !!resp.options?.condition;\n        return hasCond || resp.total === resp.items.length;\n    };\n\n    let index: number = baseIndex ?? 0;\n\n    while (true) {\n        await cc(token);\n        if (index < 0 || trunc(index) !== index) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid index: ${index}`);\n        } else if (null != limit && (limit <= 0 || trunc(limit) !== limit)) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid limit: ${limit}`);\n        }\n\n        const opts = Object.assign(options, { index });\n        let resp = await provider(opts);\n        const nextOpts = Object.assign({}, opts, resp.options);\n\n        if (receivedAll(resp)) {\n            tryCache(queryInfo, resp, nextOpts);\n\n            const { noSearch, condition: seed } = nextOpts;\n            if (seed) {\n                const condition = new DynamicCondition(seed);\n                resp = conditionalFix(searchItems(\n                    resp.items,\n                    condition.filter,\n                    ...condition.comparators\n                ), condition);\n\n                if (queryInfo.cache) {\n                    Object.assign(queryInfo.cache, resp);\n                    delete queryInfo.cache.options;\n                }\n            }\n\n            return queryFromCache(resp.items, Object.assign(opts, { noSearch }));\n        }// eslint-disable-line @stylistic:js/brace-style\n\n        else {\n            results.push(...resp.items);\n\n            const retval = {\n                total: resp.total,\n                items: resp.items,\n                options: nextOpts,\n            } as CollectionItemQueryResult<TItem>;\n\n            // 進捗通知\n            if (isFunction(progress)) {\n                progress({ ...retval });\n            }\n\n            if (auto && null != limit) {\n                if (resp.total <= index + limit) {\n                    // 自動継続指定時には最後にすべての item を返却\n                    retval.items = results;\n                } else {\n                    index += resp.items.length;\n                    continue;\n                }\n            }\n\n            tryCache(queryInfo, retval, nextOpts);\n            return retval;\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal SafeCollectionQueryOptions に変換 */\nfunction ensureOptions<TItem extends object, TKey extends Keys<TItem>>(\n    options: CollectionItemQueryOptions<TItem, TKey> | undefined\n): SafeCollectionQueryOptions<TItem, TKey> {\n    const opts = Object.assign({ sortKeys: [] }, options);\n    const { noSearch, sortKeys } = opts;\n\n    if (!noSearch && (!opts.comparators || opts.comparators.length <= 0)) {\n        opts.comparators = convertSortKeys(sortKeys);\n    }\n\n    return opts as SafeCollectionQueryOptions<TItem, TKey>;\n}\n\n/**\n * @en Low level function for {@link Collection} query items.\n * @ja {@link Collection} Item をクエリする低レベル関数\n *\n * @param queryInfo\n *  - `en` query information\n *  - `ja` クエリ情報\n * @param provider\n *  - `en` provider function\n *  - `ja` プロバイダ関数\n * @param options\n *  - `en` query options\n *  - `ja` クエリオプション\n */\nexport async function queryItems<TItem extends object, TKey extends Keys<TItem>>(\n    queryInfo: CollectionQueryInfo<TItem, TKey>,\n    provider: CollectionItemProvider<TItem, TKey>,\n    options?: CollectionItemQueryOptions<TItem, TKey>\n): Promise<TItem[]> {\n    const opts = ensureOptions(options);\n    const { sortKeys, comparators, filter } = opts;\n\n    // query に使用した sort, filter 情報をキャッシュ\n    Object.assign(queryInfo, { sortKeys, comparators, filter });\n\n    if (queryInfo.cache) {\n        return (await queryFromCache(queryInfo.cache.items, opts)).items;\n    } else {\n        return (await queryFromProvider(queryInfo, provider, opts)).items;\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    UnknownObject,\n    AnyObject,\n    Accessible,\n    Constructor,\n    Class,\n    Keys,\n    isNullish,\n    isArray,\n    isFunction,\n    isString,\n    noop,\n    luid,\n    at,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    Silenceable,\n    Subscribable,\n    EventBroker,\n    EventSource,\n    EventPublisher,\n} from '@cdp/events';\nimport {\n    Result,\n    RESULT_CODE,\n    FAILED,\n    makeResult,\n} from '@cdp/result';\nimport { SyncContext, defaultSync } from '@cdp/data-sync';\nimport {\n    Model,\n    ModelConstructionOptions,\n    ModelSaveOptions,\n    isModel,\n} from '@cdp/model';\nimport {\n    SortCallback,\n    FilterCallback,\n    CollectionSortOptions,\n    CollectionItemQueryResult,\n    CollectionItemQueryOptions,\n    CollectionItemProvider,\n    CollectionQueryInfo,\n    CollectionSeed,\n    CollectionEvent,\n    CollectionConstructionOptions,\n    CollectionOperationOptions,\n    CollectionAddOptions,\n    CollectionSetOptions,\n    CollectionReSortOptions,\n    CollectionUpdateOptions,\n    CollectionQueryOptions,\n    CollectionRequeryOptions,\n    CollectionAfterFilterOptions,\n} from './interfaces';\nimport { convertSortKeys } from './utils';\nimport { searchItems, queryItems } from './query';\n\n/** @internal */ const _properties             = Symbol('properties');\n/** @internal */ const _createIterableIterator = Symbol('create-iterable-iterator');\n/** @internal */ const _prepareModel           = Symbol('prepare-model');\n/** @internal */ const _removeModels           = Symbol('remove-models');\n/** @internal */ const _addReference           = Symbol('add-reference');\n/** @internal */ const _removeReference        = Symbol('remove-reference');\n/** @internal */ const _onModelEvent           = Symbol('model-event-handler');\n\n/** @internal */\ninterface Property<T extends object, K extends Keys<T>> {\n    readonly constructOptions: CollectionConstructionOptions<T, K>;\n    readonly provider: CollectionItemProvider<T, K>;\n    readonly cid: string;\n    readonly queryOptions: CollectionItemQueryOptions<T, K>;\n    queryInfo: CollectionQueryInfo<T, K>;\n    readonly modelOptions: ModelConstructionOptions;\n    readonly byId: Map<string, T>;\n    store: T[];\n    afterFilter?: FilterCallback<T>;\n}\n\n/** @internal reset model context */\nconst resetModelStore = <T extends object, K extends Keys<T>>(context: Property<T, K>): void => {\n    context.byId.clear();\n    context.store.length = 0;\n};\n\n/** @internal */\nconst ensureSortOptions = <T extends object, K extends Keys<T>>(options: CollectionSortOptions<T, K>): Required<CollectionSortOptions<T, K>> => {\n    const { sortKeys: keys, comparators: comps } = options;\n    return {\n        sortKeys: keys ?? [],\n        comparators: comps ?? convertSortKeys(keys ?? []),\n    };\n};\n\n/** @internal */\nconst modelIdAttribute = <T extends object>(ctor: Constructor<T> | undefined): string => {\n    return (ctor as any)?.idAttribute || 'id';\n};\n\n/** @internal */\nconst getModelId = <T extends object>(attrs: Accessible<T, string>, ctor: Constructor<T> | undefined): string => {\n    return attrs[modelIdAttribute(ctor)];\n};\n\n/** @internal */\nconst getChangedIds = <T extends object>(obj: object, ctor: Constructor<T> | undefined): { id: string; prevId?: string; } | undefined => {\n    type ModelLike = Accessible<{ previous: (key: string) => string; }>;\n    const model = obj as ModelLike;\n\n    const idAttribute = modelIdAttribute(ctor);\n    const id = model[idAttribute];\n    if (!isString(id)) {\n        return undefined;\n    }\n\n    return { id: model[idAttribute] as string, prevId: isFunction(model.previous) ? model.previous(idAttribute) : undefined };\n};\n\n/** @internal */\nconst modelConstructor = <T extends object, E extends CollectionEvent<T>, K extends Keys<T>>(self: Collection<T, E, K>): Class | undefined => {\n    return (self.constructor as any).model;\n};\n\n/** @internal */\nconst isCollectionModel = <T extends object, E extends CollectionEvent<T>, K extends Keys<T>>(x: unknown, self: Collection<T, E, K>): x is T => {\n    const ctor = modelConstructor(self);\n    return isFunction(ctor) ? x instanceof ctor : false;\n};\n\n/** @internal */\nconst spliceArray = <T>(target: T[], insert: T[], at: number): void => {\n    at = Math.min(Math.max(at, 0), target.length);\n    target.splice(at, 0, ...insert);\n};\n\n/** @internal */\nfunction parseFilterArgs<T extends object>(...args: unknown[]): CollectionAfterFilterOptions<T> {\n    const [filter, options] = args;\n    if (null == filter) {\n        return {};\n    } else if (!isFunction(filter)) {\n        return filter as CollectionAfterFilterOptions<T>;\n    } else {\n        return Object.assign({}, options, { filter }) as CollectionAfterFilterOptions<T>;\n    }\n}\n\n/** @internal */ const _setOptions = { add: true, remove: true, merge: true };\n/** @internal */ const _addOptions = { add: true, remove: false };\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Base class definition for collection that is ordered sets of models.\n * @ja Model の集合を扱う Collection の基底クラス定義.\n *\n * @example <br>\n *\n * ```ts\n * import {\n *     Model,\n *     ModelConstructor,\n *     Collection,\n *     CollectionItemQueryOptions,\n *     CollectionItemQueryResult,\n *     CollectionSeed,\n * } from '@cdp/runtime';\n *\n * // Model schema\n * interface TrackAttribute {\n *   uri: string;\n *   title: string;\n *   artist: string;\n *   album:  string;\n *   releaseDate: Date;\n *   :\n * }\n *\n * // Model definition\n * const TrackBase = Model as ModelConstructor<Model<TrackAttribute>, TrackAttribute>;\n * class Track extends TrackBase {\n *     static idAttribute = 'uri';\n * }\n *\n * // Collection definition\n * class Playlist extends Collection<Track> {\n *     // set target Model constructor\n *     static readonly model = Track;\n *\n *     // @override if need to use custom content provider for fetch.\n *     protected async sync(\n *         options?: CollectionItemQueryOptions<Track>\n *     ): Promise<CollectionItemQueryResult<object>> {\n *         // some specific implementation here.\n *         const items = await customProvider(options);\n *         return {\n *             total: items.length,\n *             items,\n *             options,\n *         } as CollectionItemQueryResult<object>;\n *     }\n *\n *     // @override if need to convert a response into a list of models.\n *     protected parse(response: CollectionSeed[]): TrackAttribute[] {\n *         return response.map(seed => {\n *             const date = seed.releaseDate;\n *             seed.releaseDate = new Date(date);\n *             return seed;\n *         }) as TrackAttribute[];\n *      }\n * }\n *\n * let seeds: TrackAttribute[];\n *\n * const playlist = new Playlist(seeds, {\n *     // default query options\n *     queryOptions: {\n *         sortKeys: [\n *             { name: 'title', order: SortOrder.DESC, type: 'string' },\n *         ],\n *     }\n * });\n *\n * await playlist.requery();\n *\n * for (const track of playlist) {\n *     console.log(JSON.stringify(track.toJSON()));\n * }\n * ```\n */\nexport abstract class Collection<\n    TModel extends object = any,\n    TEvent extends CollectionEvent<TModel> = CollectionEvent<TModel>,\n    TKey extends Keys<TModel> = Keys<TModel>\n> extends EventSource<TEvent> implements Iterable<TModel> {\n\n    /**\n     * @en Model constructor. <br>\n     *     The constructor is used internally by this {@link Collection} class for `TModel` construction.\n     * @ja Model コンストラクタ <br>\n     *     {@link Collection} クラスが `TModel` を構築するために使用する\n     */\n    static readonly model?: Class;\n\n    /** @internal */\n    private readonly [_properties]: Property<TModel, TKey>;\n\n///////////////////////////////////////////////////////////////////////\n// construction/destruction:\n\n    /**\n     * constructor\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model 要素の配列を指定\n     * @param options\n     *  - `en` construction options.\n     *  - `ja` 構築オプション\n     */\n    constructor(seeds?: TModel[] | CollectionSeed[], options?: CollectionConstructionOptions<TModel, TKey>) {\n        super();\n        const opts = Object.assign({ modelOptions: {}, queryOptions: {} }, options);\n\n        const { modelOptions, queryOptions } = opts;\n\n        this[_properties] = {\n            constructOptions: opts,\n            provider: opts.provider ?? this.sync.bind(this),\n            cid: luid('collection:', 8),\n            queryOptions,\n            queryInfo: {},\n            modelOptions,\n            byId: new Map<string, TModel>(),\n            store: [],\n        } as unknown as Property<TModel, TKey>;\n\n        this.initQueryInfo();\n\n        /* model event handler */\n        (this as any)[_onModelEvent] = (event: string, model: TModel | undefined, collection: this, options: CollectionOperationOptions): void => {\n            if (isString(event) && event.startsWith('@') && model) {\n                if (('@add' === event || '@remove' === event) && collection !== this) {\n                    return;\n                }\n                if ('@destroy' === event) {\n                    // model event arguments adjustment.\n                    options = (collection as any);\n                    collection = this;             // eslint-disable-line @typescript-eslint/no-this-alias\n                    this.remove(model, options);\n                }\n                if (event.startsWith('@change')) {\n                    // model event arguments adjustment.\n                    options = {};\n                    collection = this;             // eslint-disable-line @typescript-eslint/no-this-alias\n                    if ('@change' === event) {\n                        const ids = getChangedIds(model, modelConstructor(this));\n                        if (ids) {\n                            const { id, prevId } = ids;\n                            if (prevId !== id) {\n                                const { byId } = this[_properties];\n                                byId.set(id, model);\n                                if (null != prevId) {\n                                    byId.delete(prevId);\n                                }\n                            }\n                        }\n                    }\n                }\n                // delegate event\n                this.trigger.call(this, event, model, collection, options); // eslint-disable-line no-useless-call\n            }\n        };\n\n        if (seeds) {\n            this.reset(seeds, Object.assign({ silent: true }, opts));\n        }\n    }\n\n    /**\n     * @ja Initialize query info\n     * @ja クエリ情報の初期化\n     */\n    protected initQueryInfo(): void {\n        const { sortKeys, comparators } = ensureSortOptions(this._defaultQueryOptions);\n        this._queryInfo = { sortKeys, comparators };\n    }\n\n    /**\n     * @en Released all instances and event listener under the management.\n     * @ja 管理対象を破棄\n     *\n     * @param options\n     *  - `en` options (reserved).\n     *  - `ja` オプション (予約)\n     */\n    public release(options?: CollectionOperationOptions): this { // eslint-disable-line @typescript-eslint/no-unused-vars\n        this[_properties].afterFilter = undefined;\n        this[_properties].store = [];\n        this.initQueryInfo();\n        return this.stopListening();\n    }\n\n    /**\n     * @ja Clear cache instance method\n     * @ja キャッシュの破棄\n     */\n    protected clearCache(): void {\n        delete this._queryInfo.cache;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: attributes\n\n    /**\n     * @en Get content ID.\n     * @ja コンテント ID を取得\n     */\n    get id(): string {\n        return this[_properties].cid;\n    }\n\n    /**\n     * @en Get models.\n     * @ja Model アクセス\n     */\n    get models(): readonly TModel[] {\n        const { _queryFilter, _afterFilter } = this;\n        const { store } = this[_properties];\n        return (_afterFilter && _afterFilter !== _queryFilter) ? store.filter(_afterFilter) : store;\n    }\n\n    /**\n     * @en number of models.\n     * @ja 内包する Model 数\n     */\n    get length(): number {\n        return this.models.length;\n    }\n\n    /**\n     * @en Check applied after-filter.\n     * @ja 絞り込み用フィルタが適用されているかを判定\n     */\n    get filtered(): boolean {\n        return !!this[_properties].afterFilter;\n    }\n\n    /**\n     * @en {@link CollectionQueryInfo} instance\n     * @ja {@link CollectionQueryInfo} を格納するインスタンス\n     */\n    protected get _queryInfo(): CollectionQueryInfo<TModel, TKey> {\n        return this[_properties].queryInfo;\n    }\n\n    /**\n     * @en {@link CollectionQueryInfo} instance\n     * @ja {@link CollectionQueryInfo} を格納するインスタンス\n     */\n    protected set _queryInfo(val: CollectionQueryInfo<TModel, TKey>) {\n        this[_properties].queryInfo = val;\n    }\n\n    /**\n     * @en Get creating options.\n     * @ja 構築時のオプションを取得\n     */\n    protected get _options(): CollectionConstructionOptions<TModel, TKey> {\n        return this[_properties].constructOptions;\n    }\n\n    /**\n     * @en Get default provider.\n     * @ja 既定のプロバイダを取得\n     */\n    protected get _provider(): CollectionItemProvider<TModel, TKey> {\n        return this[_properties].provider;\n    }\n\n    /**\n     * @en Get default parse behaviour.\n     * @ja 既定の parse 動作を取得\n     */\n    protected get _defaultParse(): boolean | undefined {\n        return this._options.parse;\n    }\n\n    /**\n     * @en Get default query options.\n     * @ja 既定のクエリオプションを取得\n     */\n    protected get _defaultQueryOptions(): CollectionItemQueryOptions<TModel, TKey> {\n        return this[_properties].queryOptions;\n    }\n\n    /**\n     * @en Get last query options.\n     * @ja 最後のクエリオプションを取得\n     */\n    protected get _lastQueryOptions(): CollectionItemQueryOptions<TModel, TKey> {\n        const { sortKeys, comparators, filter } = this[_properties].queryInfo;\n        const opts: CollectionItemQueryOptions<TModel, TKey> = {};\n\n        sortKeys.length && (opts.sortKeys = sortKeys);\n        comparators.length && (opts.comparators = comparators);\n        filter && (opts.filter = filter);\n\n        return opts;\n    }\n\n    /**\n     * @en Access to sort comparators.\n     * @ja ソート用比較関数へのアクセス\n     */\n    protected get _comparators(): SortCallback<TModel>[] {\n        return this[_properties].queryInfo.comparators;\n    }\n\n    /**\n     * @en Access to query-filter.\n     * @ja クエリ用フィルタ関数へのアクセス\n     */\n    protected get _queryFilter(): FilterCallback<TModel> | undefined {\n        return this[_properties].queryInfo.filter;\n    }\n\n    /**\n     * @en Access to after-filter.\n     * @ja 絞り込み用フィルタ関数へのアクセス\n     */\n    protected get _afterFilter(): FilterCallback<TModel> | undefined {\n        return this[_properties].afterFilter;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: utils\n\n    /**\n     * @en Get a model from a collection, specified by an `id`, a `cid`, or by passing in a model instance.\n     * @ja `id`, `cid` およびインスタンスから Model を特定\n     *\n     * @param seed\n     *  - `en` `id`, a `cid`, or by passing in a model instance\n     *  - `ja`  `id`, `cid` およびインスタンス\n     */\n    public get(seed: string | object | undefined): TModel | undefined {\n        if (null == seed) {\n            return undefined;\n        }\n\n        const { byId } = this[_properties];\n        if (isString(seed) && byId.has(seed)) {\n            return byId.get(seed);\n        }\n\n        const id = getModelId(isModel(seed) ? seed.toJSON() : seed as object, modelConstructor(this));\n        const cid = (seed as object as { _cid?: string; })._cid;\n\n        return byId.get(id) ?? (cid && byId.get(cid)) as TModel | undefined;\n    }\n\n    /**\n     * @en Returns `true` if the model is in the collection by an `id`, a `cid`, or by passing in a model instance.\n     * @ja `id`, `cid` およびインスタンスから Model を所有しているか判定\n     *\n     * @param seed\n     *  - `en` `id`, a `cid`, or by passing in a model instance\n     *  - `ja`  `id`, `cid` およびインスタンス\n     */\n    public has(seed: string | object | undefined): boolean {\n        return null != this.get(seed);\n    }\n\n    /**\n     * @en Return a copy of the model's `attributes` object.\n     * @ja Model 属性値のコピーを返却\n     */\n    public toJSON(): object[] {\n        return this.models.map(m => isModel(m) ? m.toJSON() : m);\n    }\n\n    /**\n     * @es Clone this instance.\n     * @ja インスタンスの複製を返却\n     *\n     * @override\n     */\n    public clone(): this {\n        const { constructor, _options } = this;\n        return new (constructor as Constructor<this>)(this[_properties].store, _options);\n    }\n\n    /**\n     * @en Force a collection to re-sort itself.\n     * @ja Collection 要素の再ソート\n     *\n     * @param options\n     *  - `en` sort options.\n     *  - `ja` ソートオプション\n     */\n    public sort(options?: CollectionReSortOptions<TModel, TKey>): this {\n        const opts = options ?? {};\n        const { noThrow, silent } = opts;\n        const { sortKeys, comparators: comps } = ensureSortOptions(opts);\n        const comparators = 0 < comps.length ? comps : this._comparators;\n\n        if (comparators.length <= 0) {\n            if (noThrow) {\n                return this;\n            }\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_COMPARATORS, 'Cannot sort a set without a comparator.');\n        }\n\n        this[_properties].store = searchItems(this[_properties].store, this._afterFilter, ...comparators);\n\n        // update queryInfo\n        this[_properties].queryInfo.comparators = comparators;\n        if (0 < sortKeys.length) {\n            this[_properties].queryInfo.sortKeys = sortKeys;\n        }\n\n        if (!silent) {\n            (this as Collection).trigger('@sort', this as Collection, opts);\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Apply after-filter to collection itself.\n     * @ja 絞り込み用フィルタの適用\n     *\n     * @param callback\n     *  - `en` filter callback.\n     *  - `ja` フィルタコールバック関数\n     * @param options\n     *  - `en` Silenceable options.\n     *  - `ja` Silenceable オプション\n     */\n    public filter(callback: FilterCallback<TModel> | undefined, options?: Silenceable): this;\n\n    /**\n     * @en Apply after-filter to collection itself.\n     * @ja 絞り込み用フィルタの適用\n     *\n     * @param options\n     *  - `en` after-filter options.\n     *  - `ja` 絞り込みオプション\n     */\n    public filter(options: CollectionAfterFilterOptions<TModel>): this;\n\n    public filter(...args: unknown[]): this {\n        const opts = parseFilterArgs(...args);\n        const { filter, silent } = opts;\n        if (filter !== this[_properties].afterFilter) {\n            this[_properties].afterFilter = filter;\n            if (!silent) {\n                (this as Collection).trigger('@filter', this as Collection, opts);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Get the model at the given index. If negative value is given, the target will be found from the last index.\n     * @ja インデックス指定による Model へのアクセス. 負値の場合は末尾検索を実行\n     *\n     * @param index\n     *  - `en` A zero-based integer indicating which element to retrieve. <br>\n     *         If negative index is counted from the end of the matched set.\n     *  - `ja` 0 base のインデックスを指定 <br>\n     *         負値が指定された場合, 末尾からのインデックスとして解釈される\n     */\n    public at(index: number): TModel {\n        return at(this.models as TModel[], index);\n    }\n\n    /**\n     * @en Get the first element of the model.\n     * @ja Model の最初の要素を取得\n     */\n    public first(): TModel | undefined;\n\n    /**\n     * @en Get the value of `count` elements of the model from the first.\n     * @ja Model の先頭から`count` 分の要素を取得\n     */\n    public first(count: number): TModel[];\n\n    public first(count?: number): TModel | TModel[] | undefined {\n        const targets = this.models;\n        if (null == count) {\n            return targets[0];\n        } else {\n            return targets.slice(0, count);\n        }\n    }\n\n    /**\n     * @en Get the last element of the model.\n     * @ja Model の最初の要素を取得\n     */\n    public last(): TModel | undefined;\n\n    /**\n     * @en Get the value of `count` elements of the model from the last.\n     * @ja Model の先頭から`count` 分の要素を取得\n     */\n    public last(count: number): TModel[];\n\n    public last(count?: number): TModel | TModel[] | undefined {\n        const targets = this.models;\n        if (null == count) {\n            return targets[targets.length - 1];\n        } else {\n            return targets.slice(-1 * count);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: sync\n\n    /**\n     * @en Converts a response into the hash of attributes to be `set` on the collection. The default implementation is just to pass the response along.\n     * @ja レスポンスの変換メソッド. 既定では何もしない\n     *\n     * @override\n     */\n    protected parse(response: CollectionSeed | CollectionSeed[] | void, options?: CollectionSetOptions): TModel[] | CollectionSeed[] | undefined { // eslint-disable-line @typescript-eslint/no-unused-vars\n        return response as TModel[];\n    }\n\n    /**\n     * @en The {@link Collection.fetch} method proxy that is compatible with {@link CollectionItemProvider} returns one-shot result.\n     * @ja {@link CollectionItemProvider} 互換の単発の {@link Collection.fetch} 結果を返却. 必要に応じてオーバーライド可能.\n     *\n     * @override\n     *\n     * @param options\n     *  - `en` option object\n     *  - `ja` オプション\n     */\n    protected async sync(options?: CollectionItemQueryOptions<TModel, TKey>): Promise<CollectionItemQueryResult<AnyObject>> {\n        const items = await defaultSync().sync('read', this as SyncContext, options) as TModel[];\n        return {\n            total: items.length,\n            items,\n            options,\n        } as CollectionItemQueryResult<AnyObject>;\n    }\n\n    /**\n     * @en Fetch the {@link Model} from the server, merging the response with the model's local attributes.\n     * @ja {@link Model} 属性のサーバー同期. レスポンスのマージを実行\n     *\n     * @param options\n     *  - `en` fetch options.\n     *  - `ja` フェッチオプション\n     */\n    public async fetch(options?: CollectionQueryOptions<TModel, TKey>): Promise<TModel[] | CollectionSeed[]> {\n        const opts = Object.assign({ progress: noop, parse: this._defaultParse }, this._defaultQueryOptions, options);\n\n        try {\n            const { progress: original, limit, reset, noCache } = opts;\n            const { _queryInfo, _provider } = this;\n            const finalize = (null == limit);\n\n            opts.progress = (info: CollectionItemQueryResult<TModel>) => {\n                original(info);\n                !finalize && this.add(info.items, opts);\n            };\n\n            if (noCache) {\n                this.clearCache();\n            }\n\n            if (!finalize && reset) {\n                this.reset(undefined, { silent: true });\n            }\n\n            const resp = await queryItems(_queryInfo, _provider, opts);\n\n            if (finalize) {\n                reset ? this.reset(resp, opts) : this.add(resp, opts);\n            }\n\n            (this as Collection).trigger('@sync', this as Collection, resp, opts);\n            return resp;\n        } catch (e) {\n            (this as Collection).trigger('@error', undefined, this as Collection, e, opts);\n            throw e;\n        }\n    }\n\n    /**\n     * @en Execute `fetch()` with last query options.\n     * @ja 前回と同条件で `fetch()` を実行\n     *\n     * @param options\n     *  - `en` requery options.\n     *  - `ja` リクエリオプション\n     */\n    public requery(options?: CollectionRequeryOptions): Promise<TModel[] | CollectionSeed[]> {\n        const opts = Object.assign({}, this._lastQueryOptions, options, { reset: true });\n        return this.fetch(opts);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: collection setup\n\n    /**\n     * @en \"Smart\" update method of the collection with the passed list of models.\n     *       - if the model is already in the collection its attributes will be merged.\n     *       - if the collection contains any models that aren't present in the list, they'll be removed.\n     *       - All of the appropriate `@add`, `@remove`, and `@update` events are fired as this happens.\n     * @ja Collection の汎用更新処理\n     *       - 追加時にすでに Model が存在するときは、属性をマージ\n     *       - 指定リストに存在しない Model は削除\n     *       - 適切な `@add`, `@remove`, `@update` イベントを発生\n     *\n     * @param seed\n     *  - `en` Nullish value.\n     *  - `ja` Nullish 要素\n     * @param options\n     *  - `en` set options.\n     *  - `ja` 設定オプション\n     */\n    public set(seed: undefined, options?: CollectionSetOptions): void;\n\n    /**\n     * @en \"Smart\" update method of the collection with the passed list of models.\n     *       - if the model is already in the collection its attributes will be merged.\n     *       - if the collection contains any models that aren't present in the list, they'll be removed.\n     *       - All of the appropriate `@add`, `@remove`, and `@update` events are fired as this happens.\n     * @ja Collection の汎用更新処理\n     *       - 追加時にすでに Model が存在するときは、属性をマージ\n     *       - 指定リストに存在しない Model は削除\n     *       - 適切な `@add`, `@remove`, `@update` イベントを発生\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model 要素を指定\n     * @param options\n     *  - `en` set options.\n     *  - `ja` 設定オプション\n     */\n    public set(seed: TModel | UnknownObject, options?: CollectionSetOptions): TModel | CollectionSeed;\n\n    /**\n     * @en \"Smart\" update method of the collection with the passed list of models.\n     *       - if the model is already in the collection its attributes will be merged.\n     *       - if the collection contains any models that aren't present in the list, they'll be removed.\n     *       - All of the appropriate `@add`, `@remove`, and `@update` events are fired as this happens.\n     * @ja Collection の汎用更新処理\n     *       - 追加時にすでに Model が存在するときは、属性をマージ\n     *       - 指定リストに存在しない Model は削除\n     *       - 適切な `@add`, `@remove`, `@update` イベントを発生\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model 要素の配列を指定\n     * @param options\n     *  - `en` set options.\n     *  - `ja` 設定オプション\n     */\n    public set(seeds: (TModel | CollectionSeed)[], options?: CollectionSetOptions): TModel[] | CollectionSeed[];\n\n    public set(seeds?: TModel | UnknownObject | (TModel | CollectionSeed)[], options?: CollectionSetOptions): TModel | CollectionSeed | TModel[] | CollectionSeed[] | void {\n        if (isNullish(seeds)) {\n            return;\n        }\n\n        const opts = Object.assign({ parse: this._defaultParse }, _setOptions, options) as CollectionUpdateOptions<TModel>;\n        if (opts.parse && !isCollectionModel(seeds, this)) {\n            seeds = this.parse(seeds, options) ?? [];\n        }\n\n        const singular = !isArray(seeds);\n        const items: (TModel | object | undefined)[] = singular ? [seeds] : (seeds as object[]).slice();\n\n        const { store } = this[_properties];\n\n        const at = ((candidate): number | void => {\n            if (null != candidate) {\n                if (candidate > store.length) {\n                    return store.length;\n                }\n                if (candidate < 0) {\n                    candidate += store.length;\n                    return (candidate < 0) ? 0 : candidate;\n                }\n                return candidate;\n            }\n        })(opts.at);\n\n        const set: object[]      = [];\n        const toAdd: TModel[]    = [];\n        const toMerge: TModel[]  = [];\n        const toRemove: TModel[] = [];\n        const modelSet = new Set<object>();\n\n        const { add, merge, remove, parse, silent } = opts;\n\n        let sort = false;\n        const sortable = this._comparators.length && null == at && false !== opts.sort;\n\n        interface ModelFeature {\n            parse: (atrr?: object, options?: object) => object;\n            setAttributes: (atrr: object, options?: object) => void;\n            hasChanged: () => boolean;\n        }\n\n        // Turn bare objects into model references, and prevent invalid models from being added.\n        for (const [i, item] of items.entries()) {\n            // If a duplicate is found, prevent it from being added and optionally merge it into the existing model.\n            const existing = this.get(item) as ModelFeature;\n            if (existing) {\n                if (merge && item !== existing) {\n                    let attrs = isModel(item) ? item.toJSON() : item;\n                    if (parse && isFunction(existing.parse)) {\n                        attrs = existing.parse(attrs, opts);\n                    }\n\n                    if (isFunction(existing.setAttributes)) {\n                        existing.setAttributes(attrs, opts);\n                    } else {\n                        Object.assign(existing, attrs);\n                    }\n\n                    toMerge.push(existing as TModel);\n                    if (sortable && !sort) {\n                        sort = isFunction(existing.hasChanged) ? existing.hasChanged() : true;\n                    }\n                }\n                if (!modelSet.has(existing)) {\n                    modelSet.add(existing);\n                    set.push(existing);\n                }\n                items[i] = existing;\n            } // eslint-disable-line @stylistic:js/brace-style\n\n            // If this is a new, valid model, push it to the `toAdd` list.\n            else if (add) {\n                const model = items[i] = this[_prepareModel](item, opts);\n                if (model) {\n                    toAdd.push(model);\n                    this[_addReference](model);\n                    modelSet.add(model);\n                    set.push(model);\n                }\n            }\n        }\n\n        // Remove stale models.\n        if (remove) {\n            for (const model of store) {\n                if (!modelSet.has(model)) {\n                    toRemove.push(model);\n                }\n            }\n            if (toRemove.length) {\n                this[_removeModels](toRemove, opts);\n            }\n        }\n\n        // See if sorting is needed, update `length` and splice in new models.\n        let orderChanged = false;\n        const replace = !sortable && add && remove;\n        if (set.length && replace) {\n            orderChanged = (store.length !== set.length) || store.some((m, index) => m !== set[index]);\n            store.length = 0;\n            spliceArray(store, set, 0);\n        } else if (toAdd.length) {\n            if (sortable) {\n                sort = true;\n            }\n            spliceArray(store, toAdd, at ?? store.length);\n        }\n\n        // Silently sort the collection if appropriate.\n        if (sort) {\n            this.sort({ silent: true });\n        }\n\n        // Unless silenced, it's time to fire all appropriate add/sort/update events.\n        if (!silent) {\n            for (const [i, model] of toAdd.entries()) {\n                if (null != at) {\n                    opts.index = at + i;\n                }\n                if (isModel(model) || (model instanceof EventBroker)) {\n                    (model as Model).trigger('@add', model as Model, this, opts);\n                } else {\n                    (this as Collection).trigger('@add', model, this as Collection, opts);\n                }\n            }\n            if (sort || orderChanged) {\n                (this as Collection).trigger('@sort', this as Collection, opts);\n            }\n            if (toAdd.length || toRemove.length || toMerge.length) {\n                opts.changes = {\n                    added: toAdd,\n                    removed: toRemove,\n                    merged: toMerge\n                };\n                (this as Collection).trigger('@update', this as Collection, opts);\n            }\n        }\n\n        // drop undefined\n        const retval = items.filter(i => null != i) as TModel[];\n\n        // Return the added (or merged) model (or models).\n        return singular ? retval[0] : (retval.length ? retval : void 0);\n    }\n\n    /**\n     * @en Replace a collection with a new list of models (or attribute hashes), triggering a single `reset` event on completion.\n     * @ja Collection を新しい Model 一覧で置換. 完了時に `reset` イベントを発行\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model 要素の配列を指定\n     * @param options\n     *  - `en` reset options.\n     *  - `ja` リセットオプション\n     */\n    public reset(seeds?: (TModel | CollectionSeed)[], options?: CollectionOperationOptions): TModel[] | CollectionSeed[] {\n        const opts = Object.assign({}, options) as CollectionOperationOptions & { previous: TModel[]; };\n        const { store } = this[_properties];\n        for (const model of store) {\n            this[_removeReference](model);\n        }\n\n        opts.previous = store.slice();\n        resetModelStore(this[_properties]);\n\n        const models = seeds ? this.add(seeds, Object.assign({ silent: true }, opts)) : [];\n\n        if (!opts.silent) {\n            (this as Collection).trigger('@reset', this as Collection, opts);\n        }\n\n        return models;\n    }\n\n    /**\n     * @en Add model to the collection.\n     * @ja Collection への Model の追加\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model 要素を指定\n     * @param options\n     *  - `en` add options.\n     *  - `ja` 追加オプション\n     */\n    public add(seed: TModel | UnknownObject, options?: CollectionAddOptions): TModel | CollectionSeed;\n\n    /**\n     * @en Add to the collection with the passed list of models.\n     * @ja Model リスト指定による Collection への追加\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model 要素の配列を指定\n     * @param options\n     *  - `en` add options.\n     *  - `ja` 追加オプション\n     */\n    public add(seeds: (TModel | CollectionSeed)[], options?: CollectionAddOptions): TModel[] | CollectionSeed[];\n\n    public add(seeds: TModel | UnknownObject | (TModel | CollectionSeed)[], options?: CollectionAddOptions): TModel | CollectionSeed | TModel[] | CollectionSeed[] {\n        return this.set(seeds as UnknownObject, Object.assign({ merge: false }, options, _addOptions));\n    }\n\n    /**\n     * @en Remove a model from the set.\n     * @ja Collection から Model を削除\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model 要素を指定\n     * @param options\n     *  - `en` remove options.\n     *  - `ja` 削除オプション\n     */\n    public remove(seed: TModel | UnknownObject, options?: CollectionOperationOptions): TModel;\n\n    /**\n     * @en Remove a list of models from the set.\n     * @ja Model リスト指定による Collection からの削除\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model 要素の配列を指定\n     * @param options\n     *  - `en` remove options.\n     *  - `ja` 削除オプション\n     */\n    public remove(seeds: (TModel | CollectionSeed)[], options?: CollectionOperationOptions): TModel[];\n\n    public remove(seeds: TModel | UnknownObject | (TModel | CollectionSeed)[], options?: CollectionOperationOptions): TModel | TModel[] | undefined {\n        const opts = Object.assign({}, options) as CollectionUpdateOptions<TModel>;\n        const singular = !isArray(seeds);\n        const items = singular ? [seeds as TModel] : (seeds as TModel[]).slice();\n        const removed = this[_removeModels](items, opts);\n        if (!opts.silent && removed.length) {\n            opts.changes = { added: [], merged: [], removed };\n            (this as Collection).trigger('@update', this as Collection, opts);\n        }\n        return singular ? removed[0] : removed;\n    }\n\n    /**\n     * @en Add a model to the end of the collection.\n     * @ja 末尾に Model を追加\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model 要素を指定\n     * @param options\n     *  - `en` add options.\n     *  - `ja` 追加オプション\n     */\n    public push(seed: TModel | CollectionSeed, options?: CollectionAddOptions): TModel | CollectionSeed {\n        const { store } = this[_properties];\n        return this.add(seed, Object.assign({ at: store.length }, options));\n    }\n\n    /**\n     * @en Remove a model from the end of the collection.\n     * @ja 末尾の Model を削除\n     *\n     * @param options\n     *  - `en` Silenceable options.\n     *  - `ja` Silenceable オプション\n     */\n    public pop(options?: Silenceable): TModel | undefined {\n        const { store } = this[_properties];\n        return this.remove(store[store.length - 1], options);\n    }\n\n    /**\n     * @en Add a model to the beginning of the collection.\n     * @ja 先頭に Model を追加\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model 要素を指定\n     * @param options\n     *  - `en` add options.\n     *  - `ja` 追加オプション\n     */\n    public unshift(seed: TModel | CollectionSeed, options?: CollectionAddOptions): TModel | CollectionSeed {\n        return this.add(seed, Object.assign({ at: 0 }, options));\n    }\n\n    /**\n     * @en Remove a model from the beginning of the collection.\n     * @ja 先頭の Model を削除\n     *\n     * @param options\n     *  - `en` Silenceable options.\n     *  - `ja` Silenceable オプション\n     */\n    public shift(options?: Silenceable): TModel | undefined {\n        const { store } = this[_properties];\n        return this.remove(store[0], options);\n    }\n\n    /**\n     * @en Create a new instance of a model in this collection.\n     * @ja 新しい Model インスタンスを作成し, Collection に追加\n     *\n     * @param attrs\n     *  - `en` attributes object.\n     *  - `ja` 属性オブジェクトを指定\n     * @param options\n     *  - `en` model construction options.\n     *  - `ja` Model 構築オプション\n     */\n    public create(attrs: object, options?: ModelSaveOptions): TModel | undefined {\n        const { wait } = options ?? {};\n        const seed = this[_prepareModel](attrs, options as Silenceable);\n        if (!seed) {\n            return undefined;\n        }\n\n        const model = isModel(seed) ? seed : undefined;\n        if (!wait || !model) {\n            this.add(seed, options);\n        }\n\n        if (model) {\n            void (async () => {\n                try {\n                    await model.save(undefined, options);\n                    if (wait) {\n                        this.add(seed, options);\n                    }\n                } catch (e) {\n                    (this as Collection).trigger('@error', model, this as Collection, e, options);\n                }\n            })();\n        }\n\n        return seed;\n    }\n\n    /** @internal model preparation */\n    private [_prepareModel](attrs: object | TModel | undefined, options: CollectionOperationOptions): TModel | undefined {\n        if (isCollectionModel(attrs, this)) {\n            return attrs;\n        }\n\n        const constructor = modelConstructor(this);\n        const { modelOptions } = this[_properties];\n        if (constructor) {\n            const opts = Object.assign({}, modelOptions, options);\n            const model = new constructor(attrs, opts) as { validate: () => Result; };\n            if (isFunction(model.validate)) {\n                const result = model.validate();\n                if (FAILED(result.code)) {\n                    (this as Collection).trigger('@invalid', attrs as Model, this as Collection, result, opts);\n                    return undefined;\n                }\n            }\n            return model as TModel;\n        }\n\n        // plain object\n        return attrs as TModel;\n    }\n\n    /** @internal Internal method called by both remove and set. */\n    private [_removeModels](models: TModel[], options: CollectionSetOptions): TModel[] {\n        const opts = Object.assign({}, options) as CollectionUpdateOptions<TModel>;\n        const removed: TModel[] = [];\n        for (const mdl of models) {\n            const model = this.get(mdl);\n            if (!model) {\n                continue;\n            }\n\n            const { store } = this[_properties];\n            const index = store.indexOf(model);\n            store.splice(index, 1);\n\n            // Remove references before triggering 'remove' event to prevent an infinite loop.\n            this[_removeReference](model, true);\n\n            if (!opts.silent) {\n                opts.index = index;\n                if (isModel(model) || (model instanceof EventBroker)) {\n                    (model as Model).trigger('@remove', model as Model, this, opts);\n                } else {\n                    (this as Collection).trigger('@remove', model, this as Collection, opts);\n                }\n            }\n\n            removed.push(model);\n            this[_removeReference](model, false);\n        }\n        return removed;\n    }\n\n    /** @internal Internal method to create a model's ties to a collection. */\n    private [_addReference](model: TModel): void {\n        const { byId } = this[_properties];\n        const { _cid, id } = model as { _cid: string; id: string; };\n        if (null != _cid) {\n            byId.set(_cid, model);\n        }\n        if (null != id) {\n            byId.set(id, model);\n        }\n        if (isModel(model) || (model instanceof EventPublisher)) {\n            this.listenTo(model as Subscribable, '*', (this as any)[_onModelEvent]);\n        }\n    }\n\n    /** @internal Internal method to sever a model's ties to a collection. */\n    private [_removeReference](model: TModel, partial = false): void {\n        const { byId } = this[_properties];\n        const { _cid, id } = model as { _cid: string; id: string; };\n        if (null != _cid) {\n            byId.delete(_cid);\n        }\n        if (null != id) {\n            byId.delete(id);\n        }\n        if (!partial && (isModel(model) || (model instanceof EventPublisher))) {\n            this.stopListening(model as Subscribable, '*', (this as any)[_onModelEvent]);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: Iterable<TModel>\n\n    /**\n     * @en Iterator of {@link ElementBase} values in the array.\n     * @ja 格納している {@link ElementBase} にアクセス可能なイテレータオブジェクトを返却\n     */\n    [Symbol.iterator](): Iterator<TModel> {\n        const iterator = {\n            base: this.models,\n            pointer: 0,\n            next(): IteratorResult<TModel> {\n                if (this.pointer < this.base.length) {\n                    return {\n                        done: false,\n                        value: this.base[this.pointer++],\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!,\n                    };\n                }\n            },\n        };\n        return iterator as Iterator<TModel>;\n    }\n\n    /**\n     * @en Returns an iterable of key(id), value(model) pairs for every entry in the array.\n     * @ja key(id), value(model) 配列にアクセス可能なイテレータオブジェクトを返却\n     */\n    entries(): IterableIterator<[string, TModel]> {\n        return this[_createIterableIterator]((key: string, value: TModel) => [key, value]);\n    }\n\n    /**\n     * @en Returns an iterable of keys(id) in the array.\n     * @ja key(id) 配列にアクセス可能なイテレータオブジェクトを返却\n     */\n    keys(): IterableIterator<string> {\n        return this[_createIterableIterator]((key: string) => key);\n    }\n\n    /**\n     * @en Returns an iterable of values({@link ElementBase}) in the array.\n     * @ja values({@link ElementBase}) 配列にアクセス可能なイテレータオブジェクトを返却\n     */\n    values(): IterableIterator<TModel> {\n        return this[_createIterableIterator]((key: string, value: TModel) => value);\n    }\n\n    /** @internal common iterator create function */\n    private [_createIterableIterator]<R>(valueGenerator: (key: string, value: TModel) => R): IterableIterator<R> {\n        const context = {\n            base: this.models,\n            pointer: 0,\n        };\n\n        const pos2key = (pos: number): string => {\n            return getModelId(context.base[pos] as Accessible<TModel, string>, modelConstructor(this)) || String(pos);\n        };\n\n        const iterator: IterableIterator<R> = {\n            next(): IteratorResult<R> {\n                const current = context.pointer;\n                if (current < context.base.length) {\n                    context.pointer++;\n                    return {\n                        done: false,\n                        value: valueGenerator(pos2key(current), context.base[current]),\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!,\n                    };\n                }\n            },\n            [Symbol.iterator](): IterableIterator<R> {\n                return this;\n            },\n        };\n\n        return iterator;\n    }\n}\n\n// mixin による `instanceof` は無効に設定\nsetMixClassAttribute(Collection as Class, 'instanceOf', null);\n","import type { CancelToken } from '@cdp/promise';\nimport { ArrayChangeRecord } from '@cdp/observable';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport type { ListChanged, ListEditOptions } from './interfaces';\nimport {\n    clearArray,\n    appendArray,\n    insertArray,\n    reorderArray,\n    removeArray,\n} from './utils';\nimport type { Collection } from './base';\n\n/**\n * @en Edited collection type definition.\n * @ja 被編集 Collection の型定義\n */\nexport type CollectionEditee<M extends object> = Collection<M, any, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n/** @internal */\nfunction prepare<T extends object>(collection: Collection<T>): T[] | never {\n    if (collection.filtered) {\n        throw makeResult(RESULT_CODE.ERROR_MVC_EDIT_PERMISSION_DENIED, 'collection is applied after-filter.');\n    }\n    return collection.models.slice();\n}\n\n/** @internal */\nasync function exec<T extends object>(\n    collection: Collection<T>,\n    options: ListEditOptions | undefined,\n    operation: (targets: T[], token: CancelToken | undefined) => Promise<ArrayChangeRecord<T>[]>,\n): Promise<ArrayChangeRecord<T>[]> {\n    const targets = prepare<T>(collection);\n    const change = await operation(targets, options?.cancel);\n    collection.set(targets, options);\n    return change;\n}\n\n/** @internal */\nfunction min(indices: number[]): number {\n    return indices.reduce((lhs, rhs) => Math.min(lhs, rhs));\n}\n\n/** @internal */\nfunction makeListChanged<T>(\n    type: 'add' | 'remove' | 'reorder',\n    changes: ArrayChangeRecord<T>[],\n    rangeFrom: number,\n    rangeTo: number,\n    at?: number,\n): ListChanged<T> {\n    const changed = !!changes.length;\n    return {\n        type,\n        list: changes,\n        range: changed ? { from: rangeFrom, to: rangeTo } : undefined,\n        insertedTo: changed ? at : undefined,\n    } as ListChanged<T>;\n}\n\n/**\n * @en Clear all elements of {@link Collection}.\n * @ja {@link Collection} 要素の全削除\n *\n * @param collection\n *  - `en` target {@link Collection}\n *  - `ja` 対象 {@link Collection}\n * @param options\n *  - `en` {@link CollectionEditOptions} reference.\n *  - `ja` {@link CollectionEditOptions} を指定\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function clearCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeTo = collection.length - 1;\n    const changes = await exec(collection, options, (targets, token) => clearArray(targets, token));\n    return makeListChanged('remove', changes, 0, rangeTo);\n}\n\n/**\n * @en Append source elements to the end of {@link Collection}.\n * @ja {@link Collection} の末尾に追加\n *\n * @param collection\n *  - `en` target {@link Collection}\n *  - `ja` 対象 {@link Collection}\n * @param src\n *  - `en` source elements\n *  - `ja` 追加元要素\n * @param options\n *  - `en` {@link CollectionEditOptions} reference.\n *  - `ja` {@link CollectionEditOptions} を指定\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function appendCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    src: T[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeFrom = collection.length;\n    const changes = await exec(collection, options, (targets, token) => appendArray(targets, src, token));\n    return makeListChanged('add', changes, rangeFrom, collection.length - 1, rangeFrom);\n}\n\n/**\n * @en Insert source elements to specified index of {@link Collection}.\n * @ja {@link Collection} の指定した位置に挿入\n *\n * @param collection\n *  - `en` target {@link Collection}\n *  - `ja` 対象 {@link Collection}\n * @param index\n *  - `ja` target array position index\n *  - `ja` 追加先のインデックス\n * @param src\n *  - `en` source elements\n *  - `ja` 追加元要素\n * @param options\n *  - `en` {@link CollectionEditOptions} reference.\n *  - `ja` {@link CollectionEditOptions} を指定\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function insertCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    index: number,\n    src: T[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const changes = await exec(collection, options, (targets, token) => insertArray(targets, index, src, token));\n    return makeListChanged('add', changes, index, collection.length - 1, index);\n}\n\n/**\n * @en Reorder {@link Collection} elements position.\n * @ja {@link Collection} 項目の位置を変更\n *\n * @param collection\n *  - `en` target {@link Collection}\n *  - `ja` 対象 {@link Collection}\n * @param index\n *  - `ja` target array position index\n *  - `ja` 追加先のインデックス\n * @param orders\n *  - `en` edit order index array\n *  - `ja` インデックス配列\n * @param options\n *  - `en` {@link CollectionEditOptions} reference.\n *  - `ja` {@link CollectionEditOptions} を指定\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function reorderCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    index: number,\n    orders: number[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeFrom = min([index, ...orders]);\n    const changes = await exec(collection, options, (targets, token) => reorderArray(targets, index, orders, token));\n    return makeListChanged('reorder', changes, rangeFrom, collection.length - 1, index);\n}\n\n/**\n * @en Remove {@link Collection} elements.\n * @ja {@link Collection} 項目の削除\n *\n * @param collection\n *  - `en` target {@link Collection}\n *  - `ja` 対象 {@link Collection}\n * @param orders\n *  - `en` removed order index array\n *  - `ja` インデックス配列\n * @param options\n *  - `en` {@link CollectionEditOptions} reference.\n *  - `ja` {@link CollectionEditOptions} を指定\n * @returns\n *  - `en` Changed information\n *  - `ja` 変更情報\n */\nexport async function removeCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    orders: number[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeFrom = min(orders);\n    const rangeTo = collection.length - 1;\n    const changes = await exec(collection, options, (targets, token) => removeArray(targets, orders, token));\n    return makeListChanged('remove', changes, rangeFrom, rangeTo);\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const document = safe(globalThis.document);\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Constructor,\n    Writable,\n    Nullish,\n    PlainObject,\n    UnknownFunction,\n    isFunction,\n    isEmptyObject,\n    luid,\n    drop,\n    mixins,\n} from '@cdp/core-utils';\nimport { EventSource } from '@cdp/events';\nimport {\n    DOM,\n    DOMSelector,\n    DOMResult,\n    DOMEventListener,\n    DOMEventMap,\n    EventType,\n    EventTypeOrNamespace,\n    dom as $,\n} from '@cdp/dom';\nimport { ViewEventsHash, ViewConstructionOptions } from './interfaces';\nimport { document } from './ssr';\n\n/** @internal */ const _initialize    = Symbol('init-internal');\n/** @internal */ const _properties    = Symbol('properties');\n/** @internal */ const _ensureElement = Symbol('ensure-element');\n\n/** @internal */\ninterface Property<T extends Node> {\n    readonly cid: string;\n    readonly events?: ViewEventsHash<T>;\n    readonly id?: string;\n    readonly className?: string;\n    readonly attributes?: PlainObject<string | number | boolean | null>;\n    readonly tagName: string;\n    $el: DOM<T>;\n}\n\n//__________________________________________________________________________________________________//\n\nexport type ViewFindSelector = Node | string | Nullish;\n\n/**\n * @en Core implementation of {@link View} without {@link EventSource} interface. <br>\n *     Can be specified as mixin source.\n * @ja {@link EventSource} インターフェイスを持たない {@link View} のコア実装 <br>\n *     Mixin source として指定可能\n */\nexport abstract class ViewCore<TElement extends Node = HTMLElement> {\n\n    /** @internal */\n    private readonly [_properties]!: Property<TElement>;\n\n///////////////////////////////////////////////////////////////////////\n// construction/destruction:\n\n    /**\n     * constructor\n     *\n     * @param options\n     *  - `en` construction options.\n     *  - `ja` 構築オプション\n     */\n    constructor(options?: ViewConstructionOptions<TElement>) {\n        if (false !== options as unknown as boolean) {\n            this[_initialize](options);\n        }\n    }\n\n    /**\n     * @en Release all listeners.\n     * @ja すべてのリスナーを解除\n     */\n    public release(): this {\n        this.undelegateEvents();\n        return this;\n    }\n\n    /**\n     * @en Remove this view by taking the element out of the DOM with release all listeners.\n     * @ja View から DOM を切り離し, リスナーを解除\n     */\n    public remove(): this {\n        this.release();\n        this.$el.remove();\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: attributes\n\n    /**\n     * @en Get content ID.\n     * @ja コンテンツ ID を取得\n     */\n    get id(): string {\n        const { cid, id } = this[_properties];\n        return id ?? cid;\n    }\n\n    /**\n     * @en Get element.\n     * @ja 要素を取得\n     */\n    get el(): TElement {\n        return this[_properties].$el[0];\n    }\n\n    /**\n     * @en Get {@link DOM} object.\n     * @ja {@link DOM} オブジェクトを取得\n     */\n    get $el(): DOM<TElement> {\n        return this[_properties].$el;\n    }\n\n    /**\n     * @en Get internal content ID.\n     * @ja 内部のコンテンツ ID を取得\n     */\n    protected get _cid(): string {\n        return this[_properties].cid;\n    }\n\n    /**\n     * @en Get default tag name.\n     * @ja 既定のタグ名を取得\n     */\n    protected get _tagName(): string {\n        return this[_properties].tagName;\n    }\n\n    /**\n     * @en Attributes instance\n     * @ja 属性を格納するインスタンス\n     */\n    protected get _attrs(): PlainObject<string | number | boolean | null> {\n        const { attributes, id, className } = this[_properties];\n        return Object.assign(drop({ id, class: className }), attributes);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operation:\n\n    /**\n     * @en Change the view's element (`this.el` property) and re-delegate the view's events on the new element.\n     * @ja View が管轄する要素 (`this.el` property) の変更. イベント再設定も実行\n     *\n     * @param el\n     *  - `en` Object or the selector string which becomes origin of element.\n     *  - `ja` 要素のもとになるオブジェクトまたはセレクタ文字列\n     */\n    public setElement(el: DOMSelector<TElement | string>): this {\n        this.undelegateEvents();\n        this[_properties].$el = $(el) as DOM<TElement>;\n        this.delegateEvents();\n        return this;\n    }\n\n    /**\n     * @en Set DOM callbacks from {@link ViewEventsHash} object.\n     * @ja {@link ViewEventsHash} オブジェクトから DOM コールバックを設定\n     *\n     * @param events\n     *  - `en` {@link ViewEventsHash} object. `this.events()` is used by default.\n     *  - `ja` {@link ViewEventsHash} オブジェクト. 既定値は `this.events()`\n     */\n    public delegateEvents(events?: ViewEventsHash<TElement>): this {\n        const hash = events ?? this.events();\n        if (isEmptyObject(hash)) {\n            return this;\n        }\n\n        this.undelegateEvents();\n\n        for (const key of Object.keys(hash)) {\n            let method = hash[key] as UnknownFunction;\n            if (!isFunction(method)) {\n                method = this[method];\n            }\n            if (!method) {\n                continue;\n            }\n            const match = /^(\\S+)\\s*(.*)$/.exec(key)!;\n            this.delegate<any>(match[1], match[2], method.bind(this));\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Clears all callbacks previously bound to the view by `delegate`.\n     * @ja `delegate` されたイベントをすべて削除\n     */\n    public undelegateEvents(): this {\n        this.$el?.off<any>(`.${this._cid}`);\n        return this;\n    }\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja 要素に対して, 1つまたは複数のイベントハンドラを設定 (動的要素にも有効)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` イベント発行元をフィルタリングするセレクタ文字列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public delegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        selector: string,\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja 要素に対して, 1つまたは複数のイベントハンドラを設定 (動的要素にも有効)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public delegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public delegate(type: string, ...args: unknown[]): this {\n        (this.$el as any).on(`${type}.${this._cid}`, ...args);\n        return this;\n    }\n\n    /**\n     * @en Remove event handler. The handler designated at {@link DOMEvents.on} or {@link DOMEvents.once} and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja 設定されているイベントハンドラの解除. {@link DOMEvents.on} または {@link DOMEvents.once} と同条件で指定したものが解除される <br>\n     *     引数が無い場合はすべてのハンドラが解除される.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` イベント発行元をフィルタリングするセレクタ文字列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public undelegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        selector: string,\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Remove event handler. The handler designated at {@link DOMEvents.on} or {@link DOMEvents.once} and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja 設定されているイベントハンドラの解除. {@link DOMEvents.on} または {@link DOMEvents.once} と同条件で指定したものが解除される <br>\n     *     引数が無い場合はすべてのハンドラが解除される.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` イベント名またはイベント名配列\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` コールバック関数\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` に指定するオプション\n     */\n    public undelegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public undelegate(type: string, ...args: unknown[]): this {\n        (this.$el as any).off(`${type}.${this._cid}`, ...args);\n        return this;\n    }\n\n    /**\n     * @en Get the descendants of each element in the current set of matched elements, filtered by a selector.\n     * @ja 配下の要素に対して指定したセレクタに一致する要素を検索\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of DOM.\n     *  - `ja` DOM のもとになるインスタンス(群)またはセレクタ文字列\n     */\n    public $<T extends ViewFindSelector = ViewFindSelector>(selector: DOMSelector<T>): DOMResult<T> {\n        return this.$el.find(selector);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// override:\n\n    /**\n     * @en The events hash (or method) can be used to specify a set of DOM events that will be bound to methods on your View through delegateEvents.\n     * @ja イベントセレクタとコールバックのハッシュを定義し, ルートエンティティで捕捉する DOM イベントを指定\n     *\n     *\n     * @example <br>\n     *\n     * ```ts\n     * class SampleView extends View {\n     *     protected events(): ViewEventsHash {\n     *         return {\n     *             'mousedown .title':  'edit',\n     *             'click .button':     'save',\n     *             'click .open':       function(e) { ... },\n     *             'click .close':      this.onClose,\n     *         };\n     *     }\n     * }\n     * ```\n     *\n     * @override\n     */\n    protected events(): ViewEventsHash<TElement> {\n        return Object.assign({}, this[_properties].events);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// abstract:\n\n    /**\n     * @en Implement this function with your code that renders the view template from model data, and updates `this.el` with the new HTML.\n     * @ja `this.el` 更新時の新しい HTML をレンダリングロジックの実装関数. モデル更新と View テンプレートを連動させる.\n     *\n     * @example <br>\n     *\n     * ```ts\n     * import { TemplateEngine } from '@cdp/runtime';\n     *\n     * class SampleView extends View {\n     *     private _template = TemplateEngine.compile('{{title}}');\n     *     render(): void {\n     *         this.$el.html(this._template(this.model));\n     *     }\n     * }\n     * ```\n     */\n    abstract render(...args: unknown[]): any;\n\n///////////////////////////////////////////////////////////////////////\n// internal:\n\n    /** @internal */\n    protected [_initialize](options?: ViewConstructionOptions<TElement>): void {\n        const { el, tagName, id, attributes, className, events } = options ?? {};\n\n        (this[_properties] as Writable<Property<TElement>>) = {\n            cid: luid('view:', 8),\n            events,\n            id,\n            className,\n            attributes,\n            tagName: tagName ?? 'div',\n        } as Property<TElement>;\n\n        this[_ensureElement](el);\n    }\n\n    /** @internal */\n    private [_ensureElement](el?: DOMSelector<TElement | string>): void {\n        if (!el) {\n            const { _attrs, _tagName } = this;\n            this.setElement(document.createElement(_tagName) as Node as TElement);\n            this.$el.attr(_attrs);\n        } else {\n            this.setElement(el);\n        }\n    }\n}\n\n/** @internal {@link View} class */\nabstract class View extends (mixins(EventSource, ViewCore as Constructor<ViewCore>)) {\n    /**\n     * constructor\n     *\n     * @param options\n     *  - `en` construction options.\n     *  - `ja` 構築オプション\n     */\n    constructor(options?: ViewConstructionOptions) {\n        super();\n        this.super(ViewCore as Constructor<ViewCore>, false);\n        this[_initialize](options);\n    }\n\n    /**\n     * @en Release all listeners.\n     * @ja すべてのリスナーを解除\n     */\n    public release(): this {\n        super.release();\n        this.stopListening();\n        this.off();\n        return this;\n    }\n}\n\n/**\n * @en Base class definition for view that manages the layout and a DOM events.\n * @ja レイアウト管理と DOM イベントの監視を行う View の基底クラス定義\n *\n * @example <br>\n *\n * ```ts\n * import {\n *     TemplateEngine,\n *     DOM, dom as $,\n *     View, ViewEventsHash,\n * } from '@cdp/rumtime';\n * import { ToDo, ToDoEventSource } from './todo';\n *\n * const _template = TemplateEngine.compile($('#item-template').html());\n *\n * export class ToDoView extends View {\n *     private _model: ToDo;\n *     private _$input?: DOM<HTMLInputElement>;\n *\n *     constructor(todo: ToDo) {\n *         super({ tagName: 'li' });\n *         this._model = todo;\n *         this.listenTo(this._model as ToDoEventSource, '@change', this.render.bind(this));\n *         this.listenTo(this._model as ToDoEventSource, '@destroy', this.remove.bind(this));\n *     }\n *\n *     protected events(): ViewEventsHash<HTMLElement> {\n *         return {\n *             'click .toggle':   this.toggleDone,\n *             'dblclick .view':  this.edit,\n *             'click a.destroy': this.clear,\n *             'keypress .edit':  this.updateOnEnter,\n *             'blur .edit':      this.close,\n *         };\n *     }\n *\n *     render(): this {\n *         this.$el.html(_template(this._model.toJSON()));\n *         this.$el.toggleClass('done', this._model.done);\n *         this._$input = this.$('.edit') as DOM<HTMLInputElement>;\n *         return this;\n *     }\n *     :\n * }\n * ```\n */\nexport type _View<TElement extends Node = HTMLElement, TEvent extends object = object> = ViewCore <TElement> & EventSource<TEvent>;\n\n/**\n * @en Constructor of {@link View}\n * @ja {@link View} のコンストラクタ実体\n */\nconst _View: {\n    readonly prototype: _View<any, any>;\n    new <TElement extends Node = HTMLElement, TEvent extends object = object>(options?: ViewConstructionOptions<TElement>): _View<TElement, TEvent>;\n} = View as any;\n\nexport { _View as View };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\nimport type {TrustedHTML, TrustedTypesWindow} from 'trusted-types/lib';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as TrustedTypesWindow).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\nconst MATHML_RESULT = 3;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT | typeof MATHML_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  UncompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport type MathMLTemplateResult = TemplateResult<typeof MATHML_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus not be properly contained within an `<svg>` HTML\n * element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const num = mathml`<mn>1</mn>`;\n *\n * const eq = html`\n *   <math>\n *     ${num}\n *   </math>`;\n * ```\n *\n * The `mathml` *tag function* should only be used for MathML fragments, or\n * elements that would be contained **inside** a `<math>` HTML element. A common\n * error is placing a `<math>` *element* in a template tagged with the `mathml`\n * tag function. The `<math>` element is an HTML element and should be used\n * within a template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an MathML fragment from the\n * `render()` method, as the MathML fragment will be contained within the\n * element's shadow root and thus not be properly contained within a `<math>`\n * HTML element.\n */\nexport const mathml = tag(MATHML_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - they must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html =\n    type === SVG_RESULT ? '<svg>' : type === MATHML_RESULT ? '<math>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n                ? doubleQuoteAttrEndRegex\n                : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n          ? (attrNames.push(attrName!),\n            s.slice(0, attrNameEndIndex) +\n              boundAttributeSuffix +\n              s.slice(attrNameEndIndex)) +\n            marker +\n            end\n          : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html +\n    (strings[l] || '<?>') +\n    (type === SVG_RESULT ? '</svg>' : type === MATHML_RESULT ? '</math>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG or MathML nodes into template root\n    if (type === SVG_RESULT || type === MATHML_RESULT) {\n      const wrapper = this.el.content.firstChild!;\n      wrapper.replaceWith(...wrapper.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                        ? EventPart\n                        : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n\n    if (DEV_MODE) {\n      // If there was a duplicate attribute on a tag, then when the tag is\n      // parsed into an element the attribute gets de-duplicated. We can detect\n      // this mismatch if we haven't precisely consumed every attribute name\n      // when preparing the template. This works because `attrNames` is built\n      // from the template string and `attrNameIndex` comes from processing the\n      // resulting DOM.\n      if (attrNames.length !== attrNameIndex) {\n        throw new Error(\n          `Detected duplicate attribute bindings. This occurs if your template ` +\n            `has duplicate attributes on an element tag. For example ` +\n            `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n            `duplicate \"disabled\" attribute. The error was detected in ` +\n            `the following template: \\n` +\n            '`' +\n            strings.join('${...}') +\n            '`'\n        );\n      }\n    }\n\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unused otherwise. The\n   * intention would be clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this method\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type:\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART = ATTRIBUTE_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.2.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  Directive,\n  PartInfo,\n  DirectiveClass,\n  DirectiveResult,\n} from './directive.js';\nimport {\n  _$LH as p,\n  AttributePart,\n  noChange,\n  Part,\n  Disconnectable,\n} from './lit-html.js';\n\nimport type {\n  PropertyPart,\n  ChildPart,\n  BooleanAttributePart,\n  EventPart,\n  ElementPart,\n  TemplateInstance,\n} from './lit-html.js';\n\n// Contains either the minified or unminified `_$resolve` Directive method name.\nlet resolveMethodName: Extract<keyof Directive, '_$resolve'> | null = null;\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n * @private\n */\nexport const _$LH = {\n  boundAttributeSuffix: p._boundAttributeSuffix,\n  marker: p._marker,\n  markerMatch: p._markerMatch,\n  HTML_RESULT: p._HTML_RESULT,\n  getTemplateHtml: p._getTemplateHtml,\n  overrideDirectiveResolve: (\n    directiveClass: new (part: PartInfo) => Directive & {render(): unknown},\n    resolveOverrideFn: (directive: Directive, values: unknown[]) => unknown\n  ) =>\n    class extends directiveClass {\n      override _$resolve(\n        this: Directive,\n        _part: Part,\n        values: unknown[]\n      ): unknown {\n        return resolveOverrideFn(this, values);\n      }\n    },\n  patchDirectiveResolve: (\n    directiveClass: typeof Directive,\n    resolveOverrideFn: (\n      this: Directive,\n      _part: Part,\n      values: unknown[]\n    ) => unknown\n  ) => {\n    if (directiveClass.prototype._$resolve !== resolveOverrideFn) {\n      resolveMethodName ??= directiveClass.prototype._$resolve\n        .name as NonNullable<typeof resolveMethodName>;\n      for (\n        let proto = directiveClass.prototype;\n        proto !== Object.prototype;\n        proto = Object.getPrototypeOf(proto)\n      ) {\n        if (proto.hasOwnProperty(resolveMethodName)) {\n          proto[resolveMethodName] = resolveOverrideFn;\n          return;\n        }\n      }\n      // Nothing was patched which indicates an error. The most likely error is\n      // that somehow both minified and unminified lit code passed through this\n      // codepath. This is possible as lit-labs/ssr contains its own lit-html\n      // module as a dependency for server rendering client Lit code. If a\n      // client contains multiple duplicate Lit modules with minified and\n      // unminified exports, we currently cannot handle both.\n      throw new Error(\n        `Internal error: It is possible that both dev mode and production mode` +\n          ` Lit was mixed together during SSR. Please comment on the issue: ` +\n          `https://github.com/lit/lit/issues/4527`\n      );\n    }\n  },\n  setDirectiveClass(value: DirectiveResult, directiveClass: DirectiveClass) {\n    // This property needs to remain unminified.\n    value['_$litDirective$'] = directiveClass;\n  },\n  getAttributePartCommittedValue: (\n    part: AttributePart,\n    value: unknown,\n    index: number | undefined\n  ) => {\n    // Use the part setter to resolve directives/concatenate multiple parts\n    // into a final value (captured by passing in a commitValue override)\n    let committedValue: unknown = noChange;\n    // Note that _commitValue need not be in `stableProperties` because this\n    // method is only run on `AttributePart`s created by lit-ssr using the same\n    // version of the library as this file\n    part._commitValue = (value: unknown) => (committedValue = value);\n    part._$setValue(value, part, index);\n    return committedValue;\n  },\n  connectedDisconnectable: (props?: object): Disconnectable => ({\n    ...props,\n    _$isConnected: true,\n  }),\n  resolveDirective: p._resolveDirective,\n  AttributePart: p._AttributePart,\n  PropertyPart: p._PropertyPart as typeof PropertyPart,\n  BooleanAttributePart: p._BooleanAttributePart as typeof BooleanAttributePart,\n  EventPart: p._EventPart as typeof EventPart,\n  ElementPart: p._ElementPart as typeof ElementPart,\n  TemplateInstance: p._TemplateInstance as typeof TemplateInstance,\n  isIterable: p._isIterable,\n  ChildPart: p._ChildPart as typeof ChildPart,\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal\n   */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  _$LH,\n  Part,\n  DirectiveParent,\n  CompiledTemplateResult,\n  MaybeCompiledTemplateResult,\n  UncompiledTemplateResult,\n} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n  MATHML: 3,\n} as const;\n\nexport type TemplateResultType =\n  (typeof TemplateResultType)[keyof typeof TemplateResultType];\n\ntype IsTemplateResult = {\n  (val: unknown): val is MaybeCompiledTemplateResult;\n  <T extends TemplateResultType>(\n    val: unknown,\n    type: T\n  ): val is UncompiledTemplateResult<T>;\n};\n\n/**\n * Tests if a value is a TemplateResult or a CompiledTemplateResult.\n */\nexport const isTemplateResult: IsTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is UncompiledTemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as UncompiledTemplateResult)?.['_$litType$'] !== undefined\n    : (value as UncompiledTemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a CompiledTemplateResult.\n */\nexport const isCompiledTemplateResult = (\n  value: unknown\n): value is CompiledTemplateResult => {\n  return (value as CompiledTemplateResult)?.['_$litType$']?.h != null;\n};\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinel value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being committed.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {\n  AsyncDirective,\n  directive,\n  DirectiveParameters,\n} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef, forAwaitOf} from './private-async-helpers.js';\n\ntype Mapper<T> = (v: T, index?: number) => unknown;\n\nexport class AsyncReplaceDirective extends AsyncDirective {\n  private __value?: AsyncIterable<unknown>;\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  // @ts-expect-error value not used, but we want a nice parameter for docs\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  render<T>(value: AsyncIterable<T>, _mapper?: Mapper<T>) {\n    return noChange;\n  }\n\n  override update(\n    _part: ChildPart,\n    [value, mapper]: DirectiveParameters<this>\n  ) {\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === this.__value) {\n      return noChange;\n    }\n    this.__value = value;\n    let i = 0;\n    const {__weakThis: weakThis, __pauser: pauser} = this;\n    // Note, the callback avoids closing over `this` so that the directive\n    // can be gc'ed before the promise resolves; instead `this` is retrieved\n    // from `weakThis`, which can break the hard reference in the closure when\n    // the directive disconnects\n    forAwaitOf(value, async (v: unknown) => {\n      // The while loop here handles the case that the connection state\n      // thrashes, causing the pauser to resume and then get re-paused\n      while (pauser.get()) {\n        await pauser.get();\n      }\n      // If the callback gets here and there is no `this`, it means that the\n      // directive has been disconnected and garbage collected and we don't\n      // need to do anything else\n      const _this = weakThis.deref();\n      if (_this !== undefined) {\n        // Check to make sure that value is the still the current value of\n        // the part, and if not bail because a new value owns this part\n        if (_this.__value !== value) {\n          return false;\n        }\n\n        // As a convenience, because functional-programming-style\n        // transforms of iterables and async iterables requires a library,\n        // we accept a mapper function. This is especially convenient for\n        // rendering a template for each item.\n        if (mapper !== undefined) {\n          v = mapper(v, i);\n        }\n\n        _this.commitValue(v, i);\n        i++;\n      }\n      return true;\n    });\n    return noChange;\n  }\n\n  // Override point for AsyncAppend to append rather than replace\n  protected commitValue(value: unknown, _index: number) {\n    this.setValue(value);\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * A directive that renders the items of an async iterable[1], replacing\n * previous values with new values, so that only one value is ever rendered\n * at a time. This directive may be used in any expression type.\n *\n * Async iterables are objects with a `[Symbol.asyncIterator]` method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is rendered to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncReplace = directive(AsyncReplaceDirective);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart} from '../lit-html.js';\nimport {\n  directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {AsyncReplaceDirective} from './async-replace.js';\nimport {\n  clearPart,\n  insertPart,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nclass AsyncAppendDirective extends AsyncReplaceDirective {\n  private __childPart!: ChildPart;\n\n  // Override AsyncReplace to narrow the allowed part type to ChildPart only\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('asyncAppend can only be used in child expressions');\n    }\n  }\n\n  // Override AsyncReplace to save the part since we need to append into it\n  override update(part: ChildPart, params: DirectiveParameters<this>) {\n    this.__childPart = part;\n    return super.update(part, params);\n  }\n\n  // Override AsyncReplace to append rather than replace\n  protected override commitValue(value: unknown, index: number) {\n    // When we get the first value, clear the part. This lets the\n    // previous value display until we can replace it.\n    if (index === 0) {\n      clearPart(this.__childPart);\n    }\n    // Create and insert a new part and set its value to the next value\n    const newPart = insertPart(this.__childPart);\n    setChildPartValue(newPart, value);\n  }\n}\n\n/**\n * A directive that renders the items of an async iterable[1], appending new\n * values after previous values, similar to the built-in support for iterables.\n * This directive is usable only in child expressions.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is appended to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncAppend = directive(AsyncAppendDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {AsyncAppendDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  TemplateResult,\n  ChildPart,\n  RootPart,\n  render,\n  nothing,\n  CompiledTemplateResult,\n} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n} from '../directive.js';\nimport {\n  clearPart,\n  getCommittedValue,\n  insertPart,\n  isCompiledTemplateResult,\n  isTemplateResult,\n  setCommittedValue,\n} from '../directive-helpers.js';\n\n/**\n * The template strings array contents are not compatible between the two\n * template result types as the compiled template contains a prepared string;\n * only use the returned template strings array as a cache key.\n */\nconst getStringsFromTemplateResult = (\n  result: TemplateResult | CompiledTemplateResult\n): TemplateStringsArray =>\n  isCompiledTemplateResult(result) ? result['_$litType$'].h : result.strings;\n\nclass CacheDirective extends Directive {\n  private _templateCache = new WeakMap<TemplateStringsArray, RootPart>();\n  private _value?: TemplateResult | CompiledTemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n  }\n\n  render(v: unknown) {\n    // Return an array of the value to induce lit-html to create a ChildPart\n    // for the value that we can move into the cache.\n    return [v];\n  }\n\n  override update(containerPart: ChildPart, [v]: DirectiveParameters<this>) {\n    const _valueKey = isTemplateResult(this._value)\n      ? getStringsFromTemplateResult(this._value)\n      : null;\n    const vKey = isTemplateResult(v) ? getStringsFromTemplateResult(v) : null;\n\n    // If the previous value is a TemplateResult and the new value is not,\n    // or is a different Template as the previous value, move the child part\n    // into the cache.\n    if (_valueKey !== null && (vKey === null || _valueKey !== vKey)) {\n      // This is always an array because we return [v] in render()\n      const partValue = getCommittedValue(containerPart) as Array<ChildPart>;\n      const childPart = partValue.pop()!;\n      let cachedContainerPart = this._templateCache.get(_valueKey);\n      if (cachedContainerPart === undefined) {\n        const fragment = document.createDocumentFragment();\n        cachedContainerPart = render(nothing, fragment);\n        cachedContainerPart.setConnected(false);\n        this._templateCache.set(_valueKey, cachedContainerPart);\n      }\n      // Move into cache\n      setCommittedValue(cachedContainerPart, [childPart]);\n      insertPart(cachedContainerPart, undefined, childPart);\n    }\n    // If the new value is a TemplateResult and the previous value is not,\n    // or is a different Template as the previous value, restore the child\n    // part from the cache.\n    if (vKey !== null) {\n      if (_valueKey === null || _valueKey !== vKey) {\n        const cachedContainerPart = this._templateCache.get(vKey);\n        if (cachedContainerPart !== undefined) {\n          // Move the cached part back into the container part value\n          const partValue = getCommittedValue(\n            cachedContainerPart\n          ) as Array<ChildPart>;\n          const cachedPart = partValue.pop()!;\n          // Move cached part back into DOM\n          clearPart(containerPart);\n          insertPart(containerPart, undefined, cachedPart);\n          setCommittedValue(containerPart, [cachedPart]);\n        }\n      }\n      // Because vKey is non null, v must be a TemplateResult.\n      this._value = v as TemplateResult | CompiledTemplateResult;\n    } else {\n      this._value = undefined;\n    }\n    return this.render(v);\n  }\n}\n\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```js\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive(CacheDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {CacheDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    for (const name of this._previousClasses) {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    }\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsy, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange, Part} from '../lit-html.js';\nimport {directive, Directive, DirectiveParameters} from '../directive.js';\n\n// A sentinel that indicates guard() hasn't rendered anything yet\nconst initialValue = {};\n\nclass GuardDirective extends Directive {\n  private _previousValue: unknown = initialValue;\n\n  render(_value: unknown, f: () => unknown) {\n    return f();\n  }\n\n  override update(_part: Part, [value, f]: DirectiveParameters<this>) {\n    if (Array.isArray(value)) {\n      // Dirty-check arrays by item\n      if (\n        Array.isArray(this._previousValue) &&\n        this._previousValue.length === value.length &&\n        value.every((v, i) => v === (this._previousValue as Array<unknown>)[i])\n      ) {\n        return noChange;\n      }\n    } else if (this._previousValue === value) {\n      // Dirty-check non-arrays by identity\n      return noChange;\n    }\n\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    const r = this.render(value, f);\n    return r;\n  }\n}\n\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Values are checked against previous values with strict equality (`===`), and\n * so the check won't detect nested property changes inside objects or arrays.\n * Arrays values have each item checked against the previous value at the same\n * index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * `\n * ```\n *\n * In this case, the template only rerenders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * `\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive(GuardDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {GuardDirective};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {Keyed};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {isSingleExpression, setCommittedValue} from '../directive-helpers.js';\n\nclass LiveDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      !(\n        partInfo.type === PartType.PROPERTY ||\n        partInfo.type === PartType.ATTRIBUTE ||\n        partInfo.type === PartType.BOOLEAN_ATTRIBUTE\n      )\n    ) {\n      throw new Error(\n        'The `live` directive is not allowed on child or event bindings'\n      );\n    }\n    if (!isSingleExpression(partInfo)) {\n      throw new Error('`live` bindings can only contain a single expression');\n    }\n  }\n\n  render(value: unknown) {\n    return value;\n  }\n\n  override update(part: AttributePart, [value]: DirectiveParameters<this>) {\n    if (value === noChange || value === nothing) {\n      return value;\n    }\n    const element = part.element;\n    const name = part.name;\n\n    if (part.type === PartType.PROPERTY) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (value === (element as any)[name]) {\n        return noChange;\n      }\n    } else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n      if (!!value === element.hasAttribute(name)) {\n        return noChange;\n      }\n    } else if (part.type === PartType.ATTRIBUTE) {\n      if (element.getAttribute(name) === String(value)) {\n        return noChange;\n      }\n    }\n    // Resets the part's value, causing its dirty-check to fail so that it\n    // always sets the value.\n    setCommittedValue(part);\n    return value;\n  }\n}\n\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {LiveDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | number | undefined | null;\n}\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\n\nclass StyleMapDirective extends Directive {\n  private _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop.includes('-')\n        ? prop\n        : prop\n            .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n            .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set(Object.keys(styleInfo));\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    for (const name of this._previousStyleProperties) {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = null;\n        }\n      }\n    }\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        const isImportant =\n          typeof value === 'string' && value.endsWith(importantFlag);\n        if (name.includes('-') || isImportant) {\n          style.setProperty(\n            name,\n            isImportant\n              ? (value as string).slice(0, flagTrim)\n              : (value as string),\n            isImportant ? important : ''\n          );\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nclass TemplateContentDirective extends Directive {\n  private _previousTemplate?: HTMLTemplateElement;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('templateContent can only be used in child bindings');\n    }\n  }\n\n  render(template: HTMLTemplateElement) {\n    if (this._previousTemplate === template) {\n      return noChange;\n    }\n    this._previousTemplate = template;\n    return document.importNode(template.content, true);\n  }\n}\n\n/**\n * Renders the content of a template element as HTML.\n *\n * Note, the template should be developer controlled and not user controlled.\n * Rendering a user-controlled template with this directive\n * could lead to cross-site-scripting vulnerabilities.\n */\nexport const templateContent = directive(TemplateContentDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {TemplateContentDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {directive} from '../directive.js';\nimport {UnsafeHTMLDirective} from './unsafe-html.js';\n\nconst SVG_RESULT = 2;\n\nclass UnsafeSVGDirective extends UnsafeHTMLDirective {\n  static override directiveName = 'unsafeSVG';\n  static override resultType = SVG_RESULT;\n}\n\n/**\n * Renders the result as SVG, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeSVG = directive(UnsafeSVGDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {UnsafeSVGDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>): unknown {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n","export {\n    TemplateResult,\n    HTMLTemplateResult,\n    SVGTemplateResult,\n    RenderOptions,\n    html,\n    svg,\n    render,\n    noChange,\n    nothing,\n} from 'lit-html';\n\nexport { _$LH } from 'lit-html/private-ssr-support';\n\nexport {\n    Directive,\n    DirectiveParameters,\n    Part,\n    PartInfo,\n    PartType,\n    directive,\n} from 'lit-html/directive';\n\nexport { AsyncDirective } from 'lit-html/async-directive';\nexport { Ref, createRef } from 'lit-html/directives/ref';\n\nimport { asyncAppend } from 'lit-html/directives/async-append';\nimport { asyncReplace } from 'lit-html/directives/async-replace';\nimport { cache } from 'lit-html/directives/cache';\nimport { choose } from 'lit-html/directives/choose';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { guard } from 'lit-html/directives/guard';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { join } from 'lit-html/directives/join';\nimport { keyed } from 'lit-html/directives/keyed';\nimport { live } from 'lit-html/directives/live';\nimport { map } from 'lit-html/directives/map';\nimport { range } from 'lit-html/directives/range';\nimport { ref } from 'lit-html/directives/ref';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { styleMap } from 'lit-html/directives/style-map';\nimport { templateContent } from 'lit-html/directives/template-content';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nimport { unsafeSVG } from 'lit-html/directives/unsafe-svg';\nimport { until } from 'lit-html/directives/until';\nimport { when } from 'lit-html/directives/when';\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace directives {\n    export type asyncAppend = typeof asyncAppend;\n    export type asyncReplace = typeof asyncReplace;\n    export type cache = typeof cache;\n    export type choose = typeof choose;\n    export type classMap = typeof classMap;\n    export type guard = typeof guard;\n    export type ifDefined = typeof ifDefined;\n    export type join = typeof join;\n    export type keyed = typeof keyed;\n    export type live = typeof live;\n    export type map = typeof map;\n    export type range = typeof range;\n    export type ref = typeof ref;\n    export type repeat = typeof repeat;\n    export type styleMap = typeof styleMap;\n    export type templateContent = typeof templateContent;\n    export type unsafeHTML = typeof unsafeHTML;\n    export type unsafeSVG = typeof unsafeSVG;\n    export type until = typeof until;\n    export type when = typeof when;\n}\n\nexport interface TemplateDirectives {\n    asyncAppend: directives.asyncAppend;\n    asyncReplace: directives.asyncReplace;\n    cache: directives.cache;\n    choose: directives.choose;\n    classMap: directives.classMap;\n    guard: directives.guard;\n    ifDefined: directives.ifDefined;\n    join: directives.join;\n    keyed: directives.keyed;\n    live: directives.live;\n    map: directives.map;\n    range: directives.range;\n    ref: directives.ref;\n    repeat: directives.repeat;\n    styleMap: directives.styleMap;\n    templateContent: directives.templateContent;\n    unsafeHTML: directives.unsafeHTML;\n    unsafeSVG: directives.unsafeSVG;\n    until: directives.until;\n    when: directives.when;\n}\n\nexport const directives: TemplateDirectives = {\n    asyncAppend,\n    asyncReplace,\n    cache,\n    choose,\n    classMap,\n    guard,\n    ifDefined,\n    join,\n    keyed,\n    live,\n    map,\n    range,\n    ref,\n    repeat,\n    styleMap,\n    templateContent,\n    unsafeHTML,\n    unsafeSVG,\n    until,\n    when,\n};\n\n/**\n * @en Convert from `string` to `TemplateStringsArray`. <br>\n *     This method is helper brigdge for the {@link html} or the {@link svg} are able to received plain string.\n * @ja `string` を `TemplateStringsArray`に変換. <br>\n *     {@link html} や {@link svg} が文字列を受け付けるためのブリッジメソッド\n *\n * @example <br>\n *\n * ```ts\n * import { toTemplateStringsArray as bridge } from '@cdp/runtime';\n *\n * const raw = '<p>Hello Raw String</p>';\n * render(html(bridge(raw)), document.body);\n * ```\n *\n * @param src\n *  - `en` plain string / string array. ex) {@link JST} returned value.\n *  - `ja` プレーン文字列 / 文字列配列. ex) {@link JST} の戻り値などを想定\n */\nexport const toTemplateStringsArray = (src: string | string[] | TemplateStringsArray): TemplateStringsArray => {\n    const strings = Array.isArray(src) ? src : [src];\n    if (!Object.prototype.hasOwnProperty.call(strings, 'raw')) {\n        Object.defineProperty(strings, 'raw', { value: strings });\n    }\n    return strings as unknown as TemplateStringsArray;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Chooses and evaluates a template function from a list based on matching\n * the given `value` to a case.\n *\n * Cases are structured as `[caseValue, func]`. `value` is matched to\n * `caseValue` by strict equality. The first match is selected. Case values\n * can be of any type including primitives, objects, and symbols.\n *\n * This is similar to a switch statement, but as an expression and without\n * fallthrough.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${choose(this.section, [\n *       ['home', () => html`<h1>Home</h1>`],\n *       ['about', () => html`<h1>About</h1>`]\n *     ],\n *     () => html`<h1>Error</h1>`)}\n *   `;\n * }\n * ```\n */\nexport const choose = <T, V, K extends T = T>(\n  value: T,\n  cases: Array<[K, () => V]>,\n  defaultCase?: () => V\n) => {\n  for (const c of cases) {\n    const caseValue = c[0];\n    if (caseValue === value) {\n      const fn = c[1];\n      return fn();\n    }\n  }\n  return defaultCase?.();\n};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the values in `items` interleaved with the\n * `joiner` value.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${join(items, html`<span class=\"separator\">|</span>`)}\n *   `;\n * }\n */\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: (index: number) => J\n): Iterable<I | J>;\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: J\n): Iterable<I | J>;\nexport function* join<I, J>(items: Iterable<I> | undefined, joiner: J) {\n  const isFunction = typeof joiner === 'function';\n  if (items !== undefined) {\n    let i = -1;\n    for (const value of items) {\n      if (i > -1) {\n        yield isFunction ? joiner(i) : joiner;\n      }\n      i++;\n      yield value;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the result of calling `f(value)` on each\n * value in `items`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     <ul>\n *       ${map(items, (i) => html`<li>${i}</li>`)}\n *     </ul>\n *   `;\n * }\n * ```\n */\nexport function* map<T>(\n  items: Iterable<T> | undefined,\n  f: (value: T, index: number) => unknown\n) {\n  if (items !== undefined) {\n    let i = 0;\n    for (const value of items) {\n      yield f(value, i++);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable of integers from `start` to `end` (exclusive)\n * incrementing by `step`.\n *\n * If `start` is omitted, the range starts at `0`. `step` defaults to `1`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${map(range(8), () => html`<div class=\"cell\"></div>`)}\n *   `;\n * }\n * ```\n */\nexport function range(end: number): Iterable<number>;\nexport function range(\n  start: number,\n  end: number,\n  step?: number\n): Iterable<number>;\nexport function* range(startOrEnd: number, end?: number, step = 1) {\n  const start = end === undefined ? 0 : startOrEnd;\n  end ??= startOrEnd;\n  for (let i = start; step > 0 ? i < end : end < i; i += step) {\n    yield i;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\ntype Falsy = null | undefined | false | 0 | -0 | 0n | '';\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<C extends Falsy, T, F = undefined>(\n  condition: C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F\n): F;\nexport function when<C, T, F>(\n  condition: C extends Falsy ? never : C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F\n): T;\nexport function when<C, T, F = undefined>(\n  condition: C,\n  trueCase: (c: Exclude<C, Falsy>) => T,\n  falseCase?: (c: Extract<C, Falsy>) => F\n): C extends Falsy ? F : T;\nexport function when(\n  condition: unknown,\n  trueCase: (c: unknown) => unknown,\n  falseCase?: (c: unknown) => unknown\n): unknown {\n  return condition ? trueCase(condition) : falseCase?.(condition);\n}\n","/** \r\n * @param {object} config = {\r\n *  html: lit-html.html,\r\n *  delimiter: { start: '{{', end: '}}' },\r\n *  transformers: { // note that transformVariable is not here. It gets applied when no transformer.test has passed\r\n *    name: {\r\n *      test: (str, config) => bool,\r\n *      transform: (str, config) => ({\r\n *        remainingTmplStr: str,\r\n *        insertionPoint: ctx => lit-html.TemplateResult | undefined, // if undefined remainingTmplStr will be merged with last static part \r\n *      }),\r\n *    },\r\n *  },\r\n *  transformVariable, \r\n * }\r\n * @returns {function} strTemplate => ctx => lit-html.TemplateResult\r\n */\r\nexport default config => strTemplate => transform(strTemplate, config)\r\n\r\nexport function transform(tmpl2Parse, config) {\r\n  const staticParts = []\r\n  const insertionPoints = []\r\n\r\n  let remainingTmplStr = tmpl2Parse\r\n  let startIndexOfIP = remainingTmplStr.indexOf(config.delimiter.start)\r\n  while (startIndexOfIP >= 0) {\r\n    if (remainingTmplStr.indexOf(config.delimiter.end, startIndexOfIP) < 0)\r\n      throw new Error(`missing end delimiter at: '${remainingTmplStr}'`)\r\n\r\n    staticParts.push(remainingTmplStr.substring(0, startIndexOfIP))\r\n\r\n    const iPTransformResult = transformIP(\r\n      remainingTmplStr.substring(startIndexOfIP + config.delimiter.start.length),\r\n      config\r\n    )\r\n\r\n    if (iPTransformResult.insertionPoint) {\r\n      remainingTmplStr = iPTransformResult.remainingTmplStr\r\n      insertionPoints.push(iPTransformResult.insertionPoint)\r\n      startIndexOfIP = remainingTmplStr.indexOf(config.delimiter.start)\r\n    } else { // e.g. comment or customDelimeter\r\n      const lastStaticPart = staticParts.pop()\r\n      remainingTmplStr = lastStaticPart + iPTransformResult.remainingTmplStr\r\n      startIndexOfIP = remainingTmplStr.indexOf(config.delimiter.start, lastStaticPart.length)\r\n    }\r\n  }\r\n\r\n  staticParts.push(remainingTmplStr)\r\n\r\n  return ctx =>\r\n    config.html(staticParts, ...insertionPoints.map(iP => iP(ctx)))\r\n}\r\n\r\nfunction transformIP(remainingTmplStr, config) {\r\n  const transformer = Object.values(config.transformers).find(t => t.test(remainingTmplStr, config))\r\n  const transformFunction = transformer\r\n    ? transformer.transform\r\n    : config.transformVariable\r\n  return transformFunction(remainingTmplStr, config)\r\n}","export function ctx2Value(ctx, key) {\r\n  if (key === '.')\r\n    return ctx\r\n\r\n  let result = ctx\r\n  for (let k of key.split('.')) {\r\n    if (!result.hasOwnProperty(k))\r\n      return ''\r\n\r\n    result = result[k]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function ctx2MustacheString(ctx, key) {\r\n  return mustacheStringyfy(ctx2Value(ctx, key))\r\n}\r\n\r\nfunction mustacheStringyfy(value) {\r\n  if (value === undefined || value === null)\r\n    return ''\r\n\r\n  return '' + value\r\n}","import { ctx2MustacheString } from '../helper/dataHelper.js'\r\n\r\nexport default (remainingTmplStr, { delimiter }) => {\r\n  const indexOfEndDelimiter = remainingTmplStr.indexOf(delimiter.end)\r\n  const dataKey = remainingTmplStr.substring(0, indexOfEndDelimiter)\r\n  return {\r\n    remainingTmplStr: remainingTmplStr.substring(indexOfEndDelimiter + delimiter.end.length),\r\n    insertionPoint: ctx => ctx2MustacheString(ctx, dataKey)\r\n  }\r\n}","import { ctx2MustacheString } from '../helper/dataHelper.js'\r\n\r\n/** Note, this is unsafe to use, because the rendered output could be any JavaScript! */\r\nexport default unsafeHTML => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '{',\r\n  transform: (remainingTmplStr, { delimiter }) => {\r\n    const indexOfEndDelimiter = remainingTmplStr.indexOf('}' + delimiter.end)\r\n    if (indexOfEndDelimiter < 0)\r\n      throw new Error(`missing end delimiter at: '${delimiter.start}${remainingTmplStr}'`)\r\n  \r\n    const dataKey = remainingTmplStr.substring(1, indexOfEndDelimiter)\r\n    return {\r\n      remainingTmplStr: remainingTmplStr.substring(indexOfEndDelimiter + 1 + delimiter.end.length),\r\n      insertionPoint: ctx => unsafeHTML(ctx2MustacheString(ctx, dataKey)),\r\n    }\r\n  }\r\n})","export function isMustacheFalsy(value) {\r\n  return [null, undefined, false, 0, NaN, '']\r\n    .some(falsy => falsy === value)\r\n    || (value.length && value.length === 0)\r\n}","export function parseSection(tmplStr, delimiter) {\r\n  const indexOfStartTagEnd = tmplStr.indexOf(delimiter.end)\r\n  const dataKey = tmplStr.substring(1, indexOfStartTagEnd)\r\n  const endTag = `${delimiter.start}/${dataKey}${delimiter.end}`\r\n  const indexOfEndTagStart = tmplStr.indexOf(endTag)\r\n  if (indexOfEndTagStart < 0)\r\n    throw new Error(`missing end delimiter at: '${delimiter.start}${tmplStr}'`)\r\n  \r\n  return {\r\n    dataKey,\r\n    innerTmpl: tmplStr.substring(indexOfStartTagEnd + delimiter.start.length, indexOfEndTagStart),\r\n    remainingTmplStr: tmplStr.substring(indexOfEndTagStart + endTag.length),\r\n  }\r\n}","import { transform } from '../lit-transformer.js'\r\nimport { ctx2Value } from '../helper/dataHelper.js'\r\nimport { isMustacheFalsy } from '../helper/isMustacheFalsy.js'\r\nimport { parseSection } from '../helper/sectionHelper.js'\r\n\r\n/** Note, unlike within mustache functions as data values are not supported out of the box */\r\nexport default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '#',\r\n  transform: (remainingTmplStr, config) => {\r\n    const parsedSection = parseSection(remainingTmplStr, config.delimiter)\r\n    const transformedInnerTmpl = transform(parsedSection.innerTmpl, config)\r\n    \r\n    return {\r\n      remainingTmplStr: parsedSection.remainingTmplStr,\r\n      insertionPoint: ctx => {\r\n        const sectionData = ctx2Value(ctx, parsedSection.dataKey)\r\n        \r\n        if (isMustacheFalsy(sectionData))\r\n          return '';\r\n\r\n        return sectionData.map\r\n          ? sectionData.map(innerCtx => transformedInnerTmpl(innerCtx))\r\n          : transformedInnerTmpl(ctx)\r\n      }\r\n    }\r\n  }\r\n})","import { transform } from '../lit-transformer.js'\nimport { ctx2Value } from '../helper/dataHelper.js'\nimport { isMustacheFalsy } from '../helper/isMustacheFalsy.js'\nimport { parseSection } from '../helper/sectionHelper.js'\n\nexport default () => ({\n  test: remainingTmplStr => remainingTmplStr[0] === '^',\n  /*\n   * patch for v.1.0.2\n   * apply transformedInnerTmpl()\n   */\n  transform: (remainingTmplStr, config) => {\n    const parsedSection = parseSection(remainingTmplStr, config.delimiter)\n    const transformedInnerTmpl = transform(parsedSection.innerTmpl, config)\n    \n    return {\n      remainingTmplStr: parsedSection.remainingTmplStr,\n      insertionPoint: ctx => {\n        const sectionData = ctx2Value(ctx, parsedSection.dataKey)\n        \n        if (isMustacheFalsy(sectionData))\n          return sectionData.map\n            ? sectionData.map(innerCtx => transformedInnerTmpl(innerCtx))\n            : transformedInnerTmpl(ctx)\n        return '';\n      }\n    }\n  }\n})\n","export default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '!',\r\n  transform: (remainingTmplStr, { delimiter }) => ({\r\n    remainingTmplStr: remainingTmplStr.substring(remainingTmplStr.indexOf(delimiter.end) + delimiter.end.length),\r\n    insertionPoint: undefined,\r\n  })\r\n})","export default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '=',\r\n  transform: (remainingTmplStr, config) => {\r\n    const originalEndDeliLength = config.delimiter.end.length\r\n    const indexOfEndTag = remainingTmplStr.indexOf('=' + config.delimiter.end)\r\n    if (indexOfEndTag < 0 )\r\n      throw new Error(`missing end delimiter at: '${remainingTmplStr}'`)\r\n\r\n    const [ newStartDeli, newEndDeli ] = remainingTmplStr.substring(1, indexOfEndTag).split(' ')\r\n\r\n    config.delimiter.start = newStartDeli\r\n    config.delimiter.end = newEndDeli\r\n    \r\n    return {\r\n      remainingTmplStr: remainingTmplStr.substring(indexOfEndTag + 1 + originalEndDeliLength),\r\n      insertionPoint: undefined,  \r\n    }\r\n  }\r\n})","import { toTemplateStringsArray } from '@cdp/extension-template';\nimport type { TemplateBridgeEndine, TemplateTransformer } from '@bridge/interfaces';\nimport type {\n    MustacheTransformer,\n    TemplateTag,\n    TransformDirective,\n    TransformTester,\n    TransformExecutor,\n    TransformeContext,\n    TransformConfig,\n} from 'lit-transformer/src/interfaces';\n\nimport createDefault from 'lit-transformer';\nimport createCustom from 'lit-transformer/src/lit-transformer';\n\nimport variable from 'lit-transformer/src/transformers/variableTransformer';\nimport unsafeVariable from 'lit-transformer/src/transformers/unsafeVariable';\nimport section from 'lit-transformer/src/transformers/section';\nimport invertedSection from 'lit-transformer/src/transformers/invertedSection';\nimport comment from 'lit-transformer/src/transformers/comment';\nimport customDelimiter from 'lit-transformer/src/transformers/customDelimiter';\n\n/** @internal */\ntype MustacheTransformerContext = MustacheTransformer & { delimiter: { start: string; end: string; }; };\n\nconst xform = (mustache: MustacheTransformerContext): TemplateTransformer => {\n    return (template: HTMLTemplateElement | string): TemplateBridgeEndine => {\n        const { start, end } = mustache.delimiter;\n\n        // コメントブロック内の delimiter 抽出\n        const regCommentRemoveStart = new RegExp(`<!--\\\\s*${start}`, 'g');\n        const regCommentRemoveEnd   = new RegExp(`${end}\\\\s*-->`, 'g');\n        // delimiter 前後の trim 用正規表現\n        const regTrim = new RegExp(`(${start}[#^/]?)\\\\s*([\\\\w\\\\.]+)\\\\s*(${end})`, 'g');\n\n        const body = (template instanceof HTMLTemplateElement ? template.innerHTML : template)\n            .replace(regCommentRemoveStart, start)\n            .replace(regCommentRemoveEnd, end)\n            .replace(regTrim, '$1$2$3')\n        ;\n\n        return mustache(body);\n    };\n};\n\n/*\n * lit-html v2.1.0+\n * TemplateStringsArray を厳密にチェックするようになったため patch をあてる\n * https://github.com/lit/lit/pull/2307\n *\n * 将来 `Array.isTemplateObject()` を使用される場合, 本対応も見直す必要あり\n * https://tc39.es/proposal-array-is-template-object/\n */\nconst patch = (html: TemplateTag): TemplateTag => {\n    return (template: TemplateStringsArray, ...values: unknown[]) => {\n        return html(toTemplateStringsArray(template), ...values);\n    };\n};\n\nfunction createMustacheTransformer(html: TemplateTag, unsafeHTML: TransformDirective): TemplateTransformer;\nfunction createMustacheTransformer(config: TransformConfig): TemplateTransformer;\nfunction createMustacheTransformer(arg1: unknown, arg2?: unknown): TemplateTransformer {\n    const delimiter = { start: '{{', end: '}}' };\n    let transformer: MustacheTransformerContext;\n    if ('function' === typeof arg1) {\n        transformer = createDefault(patch(arg1 as TemplateTag), arg2 as TransformDirective) as MustacheTransformerContext;\n        transformer.delimiter = delimiter;\n    } else {\n        const { html } = arg1 as { html: TemplateTag; };\n        const config = Object.assign({\n            delimiter,\n            transformers: {},\n        }, arg1, { html: patch(html) }) as TransformConfig;\n        transformer = createCustom(config) as MustacheTransformerContext;\n        transformer.delimiter = config.delimiter!;\n    }\n    return xform(transformer);\n}\n\nconst transformer: {\n    variable: TransformExecutor;\n    unsafeVariable: (unsafeHTML: TransformDirective) => TransformeContext;\n    section: () => TransformeContext;\n    invertedSection: () => TransformeContext;\n    comment: () => TransformeContext;\n    customDelimiter: () => TransformeContext;\n} = {\n    variable,\n    unsafeVariable,\n    section,\n    invertedSection,\n    comment,\n    customDelimiter,\n};\n\nexport {\n    TemplateTag,\n    TransformDirective,\n    TemplateTransformer,\n    TransformTester,\n    TransformExecutor,\n    TransformeContext,\n    TransformConfig,\n    createMustacheTransformer,\n    transformer,\n};\n","import createTransform from './lit-transformer.js'\r\nimport transformVariable from './transformers/variableTransformer.js'\r\nimport unsafeVariableTransformer from './transformers/unsafeVariable.js'\r\nimport sectionTransformer from './transformers/section.js'\r\nimport invertedSectionTransformer from './transformers/invertedSection.js'\r\nimport commentTransformer from './transformers/comment.js'\r\nimport customDelimiterTransformer from './transformers/customDelimiter.js'\r\n\r\nexport default (html, unsafeHTML) =>\r\n  createTransform({\r\n    html,\r\n    delimiter: { start: '{{', end: '}}' },\r\n    transformVariable,\r\n    transformers: {\r\n      unsafeVariable: unsafeVariableTransformer(unsafeHTML),\r\n      section: sectionTransformer(),\r\n      invertedSection: invertedSectionTransformer(),\r\n      comment: commentTransformer(),\r\n      customDelimiterTransformer: customDelimiterTransformer(),\r\n    },\r\n  })",null,null,null,null,null,"import type {\n    TemplateBridgeArg,\n    TemplateTransformer,\n} from '@bridge/interfaces';\nimport {\n    TemplateHandler,\n    TemplateHandlers,\n    TemplateRenderers,\n    EvaluateTemplateResult,\n    prepareTemplate,\n    evaluateTemplate,\n} from 'stampino';\n\nexport interface CreateStampinoTemplateOptions {\n    handlers?: TemplateHandlers;\n    renderers?: TemplateRenderers;\n    superTemplate?: HTMLTemplateElement | undefined;\n}\n\nfunction ensure(template: HTMLTemplateElement | string): HTMLTemplateElement {\n    if (template instanceof HTMLTemplateElement) {\n        return template;\n    } else if ('string' === typeof template) {\n        const element = document.createElement('template');\n        element.innerHTML = template;\n        return element;\n    } else {\n        throw new TypeError(`Type of template is not a valid. [typeof: ${typeof template}]`);\n    }\n}\n\nfunction createStampinoTransformer(options?: CreateStampinoTemplateOptions): TemplateTransformer {\n    const { handlers, renderers, superTemplate } = options ?? {};\n    return (template: HTMLTemplateElement | string) => {\n        return prepareTemplate(ensure(template), handlers, renderers, superTemplate);\n    };\n}\n\nexport {\n    TemplateBridgeArg,\n    TemplateHandler,\n    TemplateHandlers,\n    TemplateRenderers,\n    EvaluateTemplateResult,\n    createStampinoTransformer,\n    prepareTemplate,\n    evaluateTemplate,\n};\n","import {\n    TemplateResult,\n    SVGTemplateResult,\n    html,\n    directives,\n} from '@cdp/extension-template';\nimport {\n    TemplateTransformer,\n    createMustacheTransformer,\n    createStampinoTransformer,\n} from '@cdp/extension-template-bridge';\nimport { PlainObject } from '@cdp/core-utils';\n\n/** @internal builtin transformers (default: mustache). */\nconst _builtins: Record<string, TemplateTransformer> = {\n    mustache: createMustacheTransformer(html, directives.unsafeHTML),\n    stampino: createStampinoTransformer(),\n};\n\n/**\n * @en Compiled JavaScript template interface\n * @ja コンパイル済みテンプレート格納インターフェイス\n */\nexport interface CompiledTemplate {\n    /**\n     * @en Source template string\n     * @ja テンプレート文字列\n     */\n    source: string;\n\n    /**\n     * @en Get {@link TemplateResult} that applied given parameter(s).\n     * @ja パラメータを適用し {@link TemplateResult} へ変換\n     *\n     * @param view\n     *  - `en` template parameters for source.\n     *  - `ja` テンプレートパラメータ\n     */\n    (view?: PlainObject): TemplateResult | SVGTemplateResult;\n}\n\n/**\n * @en {@link TemplateBridge} compile options\n * @ja {@link TemplateBridge} コンパイルオプション\n */\nexport interface TemplateBridgeCompileOptions {\n    transformer?: TemplateTransformer;\n}\n\n/**\n * @en Template bridge for other template engine source.\n * @ja 他のテンプレートエンジンの入力を変換するテンプレートブリッジクラス\n */\nexport class TemplateBridge {\n    /** @internal */\n    private static _transformer = _builtins.mustache;\n\n///////////////////////////////////////////////////////////////////////\n// public static methods:\n\n    /**\n     * @en Get {@link CompiledTemplate} from template source.\n     * @ja テンプレート文字列から {@link CompiledTemplate} を取得\n     *\n     * @param template\n     *  - `en` template source string / template element\n     *  - `ja` テンプレート文字列 / テンプレートエレメント\n     * @param options\n     *  - `en` compile options\n     *  - `ja` コンパイルオプション\n     */\n    public static compile(template: HTMLTemplateElement | string, options?: TemplateBridgeCompileOptions): CompiledTemplate {\n        const { transformer } = Object.assign({ transformer: TemplateBridge._transformer }, options);\n        const engine = transformer(template);\n        const jst = (view?: PlainObject): TemplateResult | SVGTemplateResult => {\n            return engine(view);\n        };\n        jst.source = template instanceof HTMLTemplateElement ? template.innerHTML : template;\n        return jst;\n    }\n\n    /**\n     * @en Update default transformer object.\n     * @ja 既定の変換オブジェクトの更新\n     *\n     * @param newTransformer\n     *  - `en` new transformer object.\n     *  - `ja` 新しい変換オブジェクトを指定.\n     * @returns\n     *  - `en` old transformer object.\n     *  - `ja` 以前の変換オブジェクトを返却\n     */\n    public static setTransformer(newTransformer: TemplateTransformer): TemplateTransformer {\n        const oldTransformer = TemplateBridge._transformer;\n        TemplateBridge._transformer = newTransformer;\n        return oldTransformer;\n    }\n\n    /**\n     * @en Get built-in transformer name list.\n     * @ja 組み込みの変換オブジェクトの名称一覧を取得\n     *\n     * @returns\n     *  - `en` name list.\n     *  - `ja` 名称一覧を返却\n     */\n    static get builtins(): string[] {\n        return Object.keys(_builtins);\n    }\n\n    /**\n     * @en Get built-in transformer object.\n     * @ja 組み込みの変換オブジェクトを取得\n     *\n     * @param name\n     *  - `en` transformer object name.\n     *  - `ja` 変換オブジェクトの名前を指定.\n     * @returns\n     *  - `en` transformer object.\n     *  - `ja` 変換オブジェクトを返却\n     */\n    public static getBuitinTransformer(name: string): TemplateTransformer | undefined {\n        return _builtins[name];\n    }\n}\n","import type { IHookState } from './interfaces';\n\nlet _currentId = 0;\n\n/** @internal */\nexport let current: IHookState | null;\n\n/** @internal */\nexport const setCurrent = (state: IHookState): void => {\n    current = state;\n};\n\n/** @internal */\nexport const clearCurrent = (): void => {\n    current = null;\n    _currentId = 0;\n};\n\n/** @internal */\nexport const notify = (): number => {\n    return _currentId++;\n};\n","/** @internal */\nexport const hookSymbol = Symbol('hook');\n/** @internal */\nexport const effectsSymbol = Symbol('effects');\n/** @internal */\nexport const layoutEffectsSymbol = Symbol('layoutEffects');\n\n/** @internal */\nexport type EffectsSymbols = typeof effectsSymbol | typeof layoutEffectsSymbol;\n","import type { IHookState } from './interfaces';\nimport type { Hook } from './hook';\nimport { setCurrent, clearCurrent } from './current';\nimport {\n    hookSymbol,\n    effectsSymbol,\n    layoutEffectsSymbol,\n    EffectsSymbols,\n} from './symbols';\n\n/** @internal */\nexport interface Callable {\n    call: (state: State) => void;\n}\n\n/** @internal */\nexport class State<H = unknown> implements IHookState<H> {\n    update: VoidFunction;\n    host: H;\n    virtual?: boolean;\n    [hookSymbol]: Map<number, Hook>;\n    [effectsSymbol]: Callable[];\n    [layoutEffectsSymbol]: Callable[];\n\n    constructor(update: VoidFunction, host: H) {\n        this.update = update;\n        this.host = host;\n        this[hookSymbol] = new Map();\n        this[effectsSymbol] = [];\n        this[layoutEffectsSymbol] = [];\n    }\n\n    run<T>(cb: () => T): T {\n        setCurrent(this);\n        const res = cb();\n        clearCurrent();\n        return res;\n    }\n\n    _runEffects(phase: EffectsSymbols): void {\n        const effects = this[phase];\n        setCurrent(this);\n        for (const effect of effects) {\n            effect.call(this);\n        }\n        clearCurrent();\n    }\n\n    runEffects(): void {\n        this._runEffects(effectsSymbol);\n    }\n\n    runLayoutEffects(): void {\n        this._runEffects(layoutEffectsSymbol);\n    }\n\n    teardown(): void {\n        const hooks = this[hookSymbol];\n        for (const [, hook] of hooks) {\n            ('function' === typeof hook.teardown) && hook.teardown();\n            delete hook.teardown;\n        }\n    }\n}\n","import {\n    PartInfo,\n    AsyncDirective,\n    DirectiveResult,\n    directive,\n    noChange,\n} from '@cdp/extension-template';\nimport {\n    UnknownFunction,\n    noop,\n    scheduler,\n} from '@cdp/core-utils';\nimport { dom as $ } from '@cdp/dom';\nimport { State } from './state';\n\nconst schedule = scheduler();\n\ninterface Disconnectable {\n    _$parent?: Disconnectable;\n    parentNode: Element;\n}\n\nclass HookDirective extends AsyncDirective {\n    private readonly _state: State;\n    private _renderer: UnknownFunction;\n    private _args: unknown[];\n    private _elObserved?: Node;\n    private _disconnectedHandler?: typeof HookDirective.prototype.disconnected;\n\n    constructor(part: PartInfo) {\n        super(part);\n        this._state = new State(() => this.redraw(), this);\n        this._renderer = noop;\n        this._args = [];\n    }\n\n    render(elRoot: Node | null, renderer: UnknownFunction, ...args: unknown[]): DirectiveResult {\n        this._renderer = renderer;\n        this._args = args;\n        this.observe(elRoot);\n        this.redraw();\n        return noChange;\n    }\n\n    protected disconnected(): void {\n        this._elObserved && $.utils.undetectify(this._elObserved);\n        this._elObserved = undefined;\n        this._state.teardown();\n    }\n\n    private redraw(): void {\n        this._state.run(() => {\n            const r = this._renderer(...this._args);\n            this.setValue(r);\n        });\n        this._state.runLayoutEffects();\n        schedule(() => this._state.runEffects());\n    }\n\n    private observe(elRoot: Node | null): void {\n        if (this._disconnectedHandler) {\n            return;\n        }\n\n        const { _$parent } = this as unknown as Disconnectable;\n        this._elObserved = _$parent?.parentNode;\n        if (this._elObserved) {\n            $.utils.detectify(this._elObserved, elRoot!);\n            this._elObserved.addEventListener('disconnected', this._disconnectedHandler = this.disconnected.bind(this));\n        }\n    }\n}\n\n/** @internal */\nexport const hooksWith = directive(HookDirective);\n","import type { IHookState } from './interfaces';\nimport { current, notify } from './current';\nimport { hookSymbol } from './symbols';\n\n/**\n * @en Base abstract class for Custom Hook Class.\n * @ja カスタムフッククラスの基底抽象クラス\n */\nexport abstract class Hook<P extends unknown[] = unknown[], R = unknown, H = unknown> {\n    id: number;\n    state: IHookState<H>;\n\n    constructor(id: number, state: IHookState<H>) {\n        this.id = id;\n        this.state = state;\n    }\n\n    abstract update(...args: P): R;\n    teardown?(): void;\n}\n\n/**\n * @en Interface definition for custom hooks.\n * @ja カスタムフックのインターフェイス定義\n */\nexport type CustomHook<P extends unknown[] = unknown[], R = unknown, H = unknown> = new (id: number, state: IHookState<H>, ...args: P) => Hook<P, R, H>;\n\nconst use = <P extends unknown[], R, H = unknown>(Hook: CustomHook<P, R, H>, ...args: P): R => {\n    const id = notify();\n    const hooks = (current as any)[hookSymbol] as Map<number, Hook>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n    let hook = hooks.get(id) as Hook<P, R, H> | undefined;\n    if (!hook) {\n        hook = new Hook(id, current as IHookState<H>, ...args);\n        hooks.set(id, hook);\n    }\n\n    return hook.update(...args);\n};\n\n/**\n * @en Factory function for creating custom hooks.\n * @ja カスタムフック作成用ファクトリ関数\n *\n * @example <br>\n *\n * ```ts\n * import { IHookStateContext, Hook, makeHook } from '@cdp/runtime';\n *\n * export const useMemo = makeHook(class <T> extends Hook {\n *     value: T;\n *     values: unknown[];\n *\n *     constructor(id: number, state: State, fn: () => T, values: unknown[]) {\n *         super(id, state);\n *         this.value = fn();\n *         this.values = values;\n *     }\n *\n *     update(fn: () => T, values: unknown[]): T {\n *         if (this.hasChanged(values)) {\n *             this.values = values;\n *             this.value = fn();\n *         }\n *         return this.value;\n *     }\n *\n *     hasChanged(values: unknown[] = []): boolean {\n *         return values.some((value, i) => this.values[i] !== value);\n *     }\n * });\n * ```\n */\nexport const makeHook = <P extends unknown[], R, H = unknown>(Hook: CustomHook<P, R, H>): (...args: P) => R => {\n    return use.bind(null, Hook);\n};\n","import { deepEqual } from '@cdp/core-utils';\nimport type { NewHookState, HookStateUpdater } from './interfaces';\nimport { Hook, makeHook } from './hook';\nimport type { State } from './state';\n\n/** @internal */\nexport const useState = makeHook(class <T> extends Hook {\n    args!: readonly [T, HookStateUpdater<T>];\n\n    constructor(id: number, state: State, initialValue: T) {\n        super(id, state);\n        this.updater = this.updater.bind(this);\n\n        if ('function' === typeof initialValue) {\n            initialValue = initialValue();\n        }\n\n        this.makeArgs(initialValue);\n    }\n\n    update(): readonly [T, HookStateUpdater<T>] {\n        return this.args;\n    }\n\n    updater(value: NewHookState<T>): void {\n        const [previousValue] = this.args;\n        if ('function' === typeof value) {\n            const updaterFn = value as (previousState?: T) => T;\n            value = updaterFn(previousValue);\n        }\n\n        if (deepEqual(previousValue, value)) {\n            return;\n        }\n\n        this.makeArgs(value);\n        this.state.update();\n    }\n\n    makeArgs(value: T): void {\n        this.args = Object.freeze([value, this.updater] as const); // eslint-disable-line @typescript-eslint/unbound-method\n    }\n}) as <T>(initialState?: T) => readonly [\n    T extends ((...args: unknown[]) => infer R) ? R : T,\n    HookStateUpdater<T extends ((...args: unknown[]) => infer S) ? S : T>\n];\n","/* eslint-disable\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/explicit-function-return-type,\n */\n\nimport { deepEqual } from '@cdp/core-utils';\nimport { Hook, makeHook } from './hook';\nimport type { State, Callable } from './state';\n\ntype Effect = (this: State) => void | VoidFunction | Promise<void>;\n\n/** @internal */\nexport const createEffect = (setEffects: (state: State, cb: Callable) => void) => {\n    return makeHook(class extends Hook {\n        callback!: Effect;\n        lastValues?: unknown[];\n        values?: unknown[];\n        _teardown!: Promise<void> | VoidFunction | void;\n\n        constructor(id: number, state: State, ignored1: Effect, ignored2?: unknown[]) {\n            super(id, state);\n            setEffects(state, this);\n        }\n\n        update(callback: Effect, values?: unknown[]): void {\n            this.callback = callback;\n            this.values = values;\n        }\n\n        call(): void {\n            if (!this.values || this.hasChanged()) {\n                this.run();\n            }\n            this.lastValues = this.values;\n        }\n\n        run(): void {\n            this.teardown();\n            this._teardown = this.callback.call(this.state);\n        }\n\n        teardown(): void {\n            if ('function' === typeof this._teardown) {\n                this._teardown();\n            }\n        }\n\n        hasChanged(): boolean {\n            return !this.lastValues || this.values!.some((value, i) => !deepEqual(this.lastValues![i], value));\n        }\n    });\n};\n","import type { State, Callable } from './state';\nimport { effectsSymbol } from './symbols';\nimport { createEffect } from './create-effect';\n\n/** @internal */\nexport const setEffects = (state: State, cb: Callable): void => {\n    state[effectsSymbol].push(cb);\n};\n\n/** @internal */\nexport const useEffect = createEffect(setEffects);\n","import type { State, Callable } from './state';\nimport { layoutEffectsSymbol } from './symbols';\nimport { createEffect } from './create-effect';\n\nconst setLayoutEffects = (state: State, cb: Callable): void => {\n    state[layoutEffectsSymbol].push(cb);\n};\n\n/** @internal */\nexport const useLayoutEffect = createEffect(setLayoutEffects);\n","import { Hook, makeHook } from './hook';\nimport type { State } from './state';\n\n/** @internal */\nexport const useMemo = makeHook(class <T> extends Hook {\n    value: T;\n    values: unknown[];\n\n    constructor(id: number, state: State, fn: () => T, values: unknown[]) {\n        super(id, state);\n        this.value = fn();\n        this.values = values;\n    }\n\n    update(fn: () => T, values: unknown[]): T {\n        if (this.hasChanged(values)) {\n            this.values = values;\n            this.value = fn();\n        }\n        return this.value;\n    }\n\n    hasChanged(values: unknown[] = []): boolean {\n        return values.some((value, i) => this.values[i] !== value);\n    }\n});\n","import type { HookReducer } from './interfaces';\nimport { Hook, makeHook } from './hook';\nimport { State } from './state';\n\n/** @internal */\nexport const useReducer = makeHook(class <S, I, A> extends Hook {\n    reducer!: HookReducer<S, A>;\n    currentState: S;\n\n    constructor(id: number, state: State, _: HookReducer<S, A>, initialState: I, init?: (_: I) => S) {\n        super(id, state);\n        this.dispatch = this.dispatch.bind(this);\n        this.currentState = undefined !== init ? init(initialState) : initialState as unknown as S;\n    }\n\n    update(reducer: HookReducer<S, A>): readonly [S, (action: A) => void] {\n        this.reducer = reducer;\n        return [this.currentState, this.dispatch]; // eslint-disable-line @typescript-eslint/unbound-method\n    }\n\n    dispatch(action: A): void {\n        this.currentState = this.reducer(this.currentState, action);\n        this.state.update();\n    }\n});\n","import { DirectiveResult, noChange } from '@cdp/extension-template';\nimport { isFunction } from '@cdp/core-utils';\nimport type { IHookContext } from './interfaces';\n\nclass HookContext<T> implements IHookContext<T> {\n    readonly defaultValue: T | undefined;\n    private _value: T;\n\n    constructor(defaultValue?: T) {\n        this.provide = this.provide.bind(this);\n        this.consume = this.consume.bind(this);\n        this.defaultValue = defaultValue;\n        this._value = defaultValue as T;\n    }\n\n    provide(value: T, callback?: (value: T) => DirectiveResult): DirectiveResult {\n        this._value = value;\n        return isFunction(callback) ? callback(value) : noChange;\n    }\n\n    consume(callback: (value: T) => DirectiveResult | void): DirectiveResult | void {\n        return callback(this._value);\n    }\n}\n\n/** @internal */\nexport const createContext = <T>(defaultValue?: T): IHookContext<T> => {\n    return new HookContext(defaultValue);\n};\n","import type { IHookContext } from './interfaces';\nimport { Hook, makeHook } from './hook';\nimport type { State } from './state';\nimport { setEffects } from './use-effect';\n\n/** @internal */\nexport const useContext = makeHook(class <T> extends Hook<[IHookContext<T>], T, unknown> {\n    private _ranEffect: boolean;\n\n    constructor(id: number, state: State, _: IHookContext<T>) { // eslint-disable-line @typescript-eslint/no-unused-vars\n        super(id, state);\n        this._ranEffect = false;\n        setEffects(state, this);\n    }\n\n    update(context: IHookContext<T>): T {\n        let retval!: T;\n        context.consume(value => { retval = value; });\n        return retval;\n    }\n\n    call(): void {\n        if (!this._ranEffect) {\n            this._ranEffect = true;\n            this.state.update();\n        }\n    }\n});\n","import type { UnknownFunction } from '@cdp/core-utils';\nimport type {\n    HookStateUpdater,\n    HookReducer,\n    IHookContext,\n} from './interfaces';\nimport { hooksWith } from './directive';\nimport { useState } from './use-state';\nimport { useEffect } from './use-effect';\nimport { useLayoutEffect } from './use-layout-effect';\nimport { useMemo } from './use-memo';\nimport { useRef } from './use-ref';\nimport { useCallback } from './use-callback';\nimport { useReducer } from './use-reducer';\nimport { createContext } from './create-context';\nimport { useContext } from './use-context';\nexport * from './interfaces';\nexport { Hook, makeHook } from './hook';\n\n/**\n * @en Provides functionality parity with the React hooks concept.\n * @ja React hooks コンセプトと同等の機能を提供\n *\n * @example <br>\n *\n * ```ts\n * import { html, render, hooks } from '@cdp/runtime';\n * const { useState } = hooks;\n *\n * // function component\n * function App() {\n *     const [count, setCount] = useState(0);\n *     return html`\n *         <p>Count: ${ count }</p>\n *         <button class=\"state-plus\" @click=${() => setCount(prevCount => prevCount! + 1)}>➕</button>\n *     `;\n * }\n *\n * // render with hooks\n * render(hooks(App), document.body);\n * ```\n */\nexport interface Hooks {\n    /**\n     * @en Provides functionality parity with the React hooks concept. <br>\n     *     Add Hooks feature to template literal syntax.\n     * @ja React hooks コンセプトと同等の機能を提供 <br>\n     *     テンプレートリテラル構文に Hooks 機能を付加\n     *\n     * @example <br>\n     *\n     * ```ts\n     * import { html, render, hooks } from '@cdp/runtime';\n     * const { useState } = hooks;\n     *\n     * // function component\n     * function App() {\n     *     const [count, setCount] = useState(0);\n     *     return html`\n     *         <p>Count: ${ count }</p>\n     *         <button class=\"state-plus\" @click=${() => setCount(prevCount => prevCount! + 1)}>➕</button>\n     *     `;\n     * }\n     *\n     * // enabling hooks\n     * render(hooks(App), document.body);\n     * ```\n     *\n     * @param renderer\n     *  - `en` A function object that returns a template literal syntax\n     *  - `ja` テンプレートリテラル構文を返却する関数オブジェクト\n     * @param args\n     *  - `en` Arguments passed template literal syntax\n     *  - `ja` テンプレートリテラル構文にわたる引数\n     */\n    (renderer: UnknownFunction, ...args: unknown[]): unknown;\n\n    /**\n     * @en Add Hooks feature to template literal syntax. (specify a DOM disconnect detection element)\n     * @ja テンプレートリテラル構文に Hooks 機能を付加 (DOM 切断検知要素を指定)\n     *\n     * @example <br>\n     *\n     * ```ts\n     * const el = document.getElementById('some-page');\n     * // enabling hooks with root element\n     * render(hooks.with(el, App), document.body);\n     * ```\n     *\n     * @param elRoot\n     *  - `en` Root element used for DOM disconnection detection. If `null` passed, `document` is specified\n     *  - `ja` DOM 切断検知に使用するルート要素. `null` が渡ると `document` が指定される\n     * @param renderer\n     *  - `en` A function object that returns a template literal syntax\n     *  - `ja` テンプレートリテラル構文を返却する関数オブジェクト\n     * @param args\n     *  - `en` Arguments passed template literal syntax\n     *  - `ja` テンプレートリテラル構文にわたる引数\n     */\n    with: (elRoot: Node | null, renderer: UnknownFunction, ...args: unknown[]) => unknown;\n\n    /**\n     * @en Return a stateful value and a function to update it.\n     * @ja ステートフルな値と、それを更新するための関数を返却\n     *\n     * @param initialState\n     *  - `en` The value you want the state to be initially.\n     *  - `ja` 状態の初期化値\n     * @returns\n     *  - `en` returns an array with exactly two values. [`currentState`, `updateFunction`]\n     *  - `ja` 2つの値を持つ配列を返却 [`currentState`, `updateFunction`]\n     */\n    useState: <T>(initialState?: T) => readonly [\n        T extends ((...args: unknown[]) => infer R) ? R : T,\n        HookStateUpdater<T extends ((...args: unknown[]) => infer S) ? S : T>\n    ];\n\n    /**\n     * @en Accepts a function that contains imperative, possibly effectful code.\n     * @ja 副作用を有する可能性のある命令型のコードの適用\n     *\n     * @param effect\n     *  - `en` callback function that runs each time dependencies change\n     *  - `ja` 依存関係が変更されるたびに実行されるコールバック関数\n     * @param dependencies\n     *  - `en` list of dependencies to the effect\n     *  - `ja` 副作用発火のトリガーとなる依存関係のリスト\n     */\n    useEffect: (effect: () => void, dependencies?: unknown[]) => void;\n\n    /**\n     * @en Accepts a function that contains imperative, possibly effectful code. <br>\n     *     Unlike {@link Hooks.useEffect} , it is executed before the component is rendered and the new element is displayed on the screen.\n     * @ja 副作用を有する可能性のある命令型のコードの適用 <br>\n     *     {@link Hooks.useEffect} と異なり, コンポーネントがレンダリングされて新しい要素が画面に表示される前に実行される。\n     *\n     * @param effect\n     *  - `en` callback function that runs each time dependencies change\n     *  - `ja` 依存関係が変更されるたびに実行されるコールバック関数\n     * @param dependencies\n     *  - `en` list of dependencies to the effect\n     *  - `ja` 副作用発火のトリガーとなる依存関係のリスト\n     */\n    useLayoutEffect: (effect: () => void, dependencies?: unknown[]) => void;\n\n    /**\n     * @en Used to reduce component re-rendering. <br>\n     *     Cache the return value of the function and return the cached value when called with the same arguments.\n     * @ja コンポーネントの再レンダリングを抑えるために使用 <br>\n     *     関数の戻り値をキャッシュし、同じ引数で呼び出された場合にキャッシュされた値を返却\n     *\n     * @param fn\n     *  - `en` A function that returns a value\n     *  - `ja` 値を返す関数\n     * @param values\n     *  - `en` An array of values that are used as arguments for `fn`\n     *  - `ja` `fn` の引数として使用される値の配列\n     */\n    useMemo: <T>(fn: () => T, values: unknown[]) => T;\n\n    /**\n     * @en Lets you reference a value that’s not needed for rendering. <br>\n     *     Mainly available for accessing DOM nodes.\n     * @ja レンダリングに不要な値を参照可能にする<br>\n     *     主に DOM ノードへのアクセスに利用可能\n     *\n     * @param initialValue\n     *  - `en` The initial value of the reference\n     *  - `ja` 参照の初期値\n     */\n    useRef: <T>(initialValue: T) => { current: T; };\n\n    /**\n     * @en Returns a memoized version of the callback function that only changes if the dependencies change. <br>\n     *     Useful for passing callbacks to optimized child components that rely on referential equality.\n     * @ja 依存関係が変更された場合にのみ変更されるコールバック関数のメモ化バージョンを返却 <br>\n     *     参照等価性に依存する最適化された子コンポーネントにコールバックを渡す場合に役立つ\n     *\n     * @param fn\n     *  - `en` The function to memoize\n     *  - `ja` メモ化する関数\n     * @param inputs\n     *  - `en` An array of inputs to watch for changes\n     *  - `ja` 変更を監視する入力の配列\n     */\n    useCallback: <T extends UnknownFunction>(fn: T, inputs: unknown[]) => T;\n\n    /**\n     * @en Hook API for managing state in function components.\n     * @ja 関数コンポーネントで状態を管理するための Hook API\n     *\n     * @param reducer\n     *  - `en` A function that takes the current state and an action and returns a new state\n     *  - `ja` 現在の状態とアクションを受け取り、新しい状態を返す関数\n     * @param initialState\n     *  - `en` The initial state of the reducer\n     *  - `ja` リデューサーの初期状態を指定\n     * @param init\n     *  - `en` An optional function that returns the initial state of the reducer\n     *  - `ja` リデューサーの初期状態を返すオプションの関数\n     */\n    useReducer: <S, I, A>(reducer: HookReducer<S, A>, initialState: I, init?: ((_: I) => S)) => readonly [S, (action: A) => void];\n\n    /**\n     * @en Create a new context object. Context objects are used to share data that is considered \"global\".\n     * @ja 新しいコンテキストオブジェクトを作成する。コンテキストオブジェクトは,「グローバル」と考えられるデータを共有するために使用される。\n     *\n     * @param defaultValue\n     *  - `en`: The default value for the context object\n     *  - `ja`: コンテキストオブジェクトのデフォルト値\n     */\n    createContext: <T>(defaultValue?: T) => IHookContext<T>;\n\n    /**\n     * @en Returns the current context value for the specified context object.\n     * @ja 指定されたコンテキストオブジェクトに対する現在のコンテキスト値を返却\n     *\n     * @param context\n     *  - `en`: the context object returned from {@link Hooks.createContext}\n     *  - `ja`: {@link Hooks.createContext} から返されるコンテキストオブジェクト\n     */\n    useContext: <T>(context: IHookContext<T>) => T;\n}\n\nconst hooks: Hooks = hooksWith.bind(null, null);\nhooks.with            = hooksWith;\nhooks.useState        = useState;\nhooks.useEffect       = useEffect;\nhooks.useLayoutEffect = useLayoutEffect;\nhooks.useMemo         = useMemo;\nhooks.useRef          = useRef;\nhooks.useCallback     = useCallback;\nhooks.useReducer      = useReducer;\nhooks.createContext   = createContext;\nhooks.useContext      = useContext;\n\nexport { hooks };\n","import { useMemo } from './use-memo';\n\n/** @internal */\nexport const useRef: <T>(initialValue: T) => { current: T; } = <T>(initialValue: T) => useMemo(() => ({\n    current: initialValue\n}), []);\n","import type { UnknownFunction } from '@cdp/core-utils';\nimport { useMemo } from './use-memo';\n\n/** @internal */\nexport const useCallback: <T extends UnknownFunction>(fn: T, inputs: unknown[]) => T\n    = <T extends UnknownFunction>(fn: T, inputs: unknown[]) => useMemo(() => fn, inputs);\n","const DEFAULT_DELIMITER = \"/\";\nconst NOOP_VALUE = (value: string) => value;\nconst ID_START = /^[$_\\p{ID_Start}]$/u;\nconst ID_CONTINUE = /^[$\\u200c\\u200d\\p{ID_Continue}]$/u;\nconst DEBUG_URL = \"https://git.new/pathToRegexpError\";\n\n/**\n * Encode a string into another string.\n */\nexport type Encode = (value: string) => string;\n\n/**\n * Decode a string into another string.\n */\nexport type Decode = (value: string) => string;\n\nexport interface ParseOptions {\n  /**\n   * A function for encoding input strings.\n   */\n  encodePath?: Encode;\n}\n\nexport interface PathToRegexpOptions {\n  /**\n   * Matches the path completely without trailing characters. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * Allows optional trailing delimiter to match. (default: `true`)\n   */\n  trailing?: boolean;\n  /**\n   * Match will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * The default delimiter for segments. (default: `'/'`)\n   */\n  delimiter?: string;\n}\n\nexport interface MatchOptions extends PathToRegexpOptions {\n  /**\n   * Function for decoding strings for params, or `false` to disable entirely. (default: `decodeURIComponent`)\n   */\n  decode?: Decode | false;\n}\n\nexport interface CompileOptions {\n  /**\n   * Function for encoding input strings for output into the path, or `false` to disable entirely. (default: `encodeURIComponent`)\n   */\n  encode?: Encode | false;\n  /**\n   * The default delimiter for segments. (default: `'/'`)\n   */\n  delimiter?: string;\n}\n\ntype TokenType =\n  | \"{\"\n  | \"}\"\n  | \"WILDCARD\"\n  | \"PARAM\"\n  | \"CHAR\"\n  | \"ESCAPED\"\n  | \"END\"\n  // Reserved for use or ambiguous due to past use.\n  | \"(\"\n  | \")\"\n  | \"[\"\n  | \"]\"\n  | \"+\"\n  | \"?\"\n  | \"!\";\n\n/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type: TokenType;\n  index: number;\n  value: string;\n}\n\nconst SIMPLE_TOKENS: Record<string, TokenType> = {\n  // Groups.\n  \"{\": \"{\",\n  \"}\": \"}\",\n  // Reserved.\n  \"(\": \"(\",\n  \")\": \")\",\n  \"[\": \"[\",\n  \"]\": \"]\",\n  \"+\": \"+\",\n  \"?\": \"?\",\n  \"!\": \"!\",\n};\n\n/**\n * Escape text for stringify to path.\n */\nfunction escapeText(str: string) {\n  return str.replace(/[{}()\\[\\]+?!:*]/g, \"\\\\$&\");\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escape(str: string) {\n  return str.replace(/[.+*?^${}()[\\]|/\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Tokenize input string.\n */\nfunction* lexer(str: string): Generator<LexToken, LexToken> {\n  const chars = [...str];\n  let i = 0;\n\n  function name() {\n    let value = \"\";\n\n    if (ID_START.test(chars[++i])) {\n      value += chars[i];\n      while (ID_CONTINUE.test(chars[++i])) {\n        value += chars[i];\n      }\n    } else if (chars[i] === '\"') {\n      let pos = i;\n\n      while (i < chars.length) {\n        if (chars[++i] === '\"') {\n          i++;\n          pos = 0;\n          break;\n        }\n\n        if (chars[i] === \"\\\\\") {\n          value += chars[++i];\n        } else {\n          value += chars[i];\n        }\n      }\n\n      if (pos) {\n        throw new TypeError(`Unterminated quote at ${pos}: ${DEBUG_URL}`);\n      }\n    }\n\n    if (!value) {\n      throw new TypeError(`Missing parameter name at ${i}: ${DEBUG_URL}`);\n    }\n\n    return value;\n  }\n\n  while (i < chars.length) {\n    const value = chars[i];\n    const type = SIMPLE_TOKENS[value];\n\n    if (type) {\n      yield { type, index: i++, value };\n    } else if (value === \"\\\\\") {\n      yield { type: \"ESCAPED\", index: i++, value: chars[i++] };\n    } else if (value === \":\") {\n      const value = name();\n      yield { type: \"PARAM\", index: i, value };\n    } else if (value === \"*\") {\n      const value = name();\n      yield { type: \"WILDCARD\", index: i, value };\n    } else {\n      yield { type: \"CHAR\", index: i, value: chars[i++] };\n    }\n  }\n\n  return { type: \"END\", index: i, value: \"\" };\n}\n\nclass Iter {\n  private _peek?: LexToken;\n\n  constructor(private tokens: Generator<LexToken, LexToken>) {}\n\n  peek(): LexToken {\n    if (!this._peek) {\n      const next = this.tokens.next();\n      this._peek = next.value;\n    }\n    return this._peek;\n  }\n\n  tryConsume(type: TokenType): string | undefined {\n    const token = this.peek();\n    if (token.type !== type) return;\n    this._peek = undefined; // Reset after consumed.\n    return token.value;\n  }\n\n  consume(type: TokenType): string {\n    const value = this.tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = this.peek();\n    throw new TypeError(\n      `Unexpected ${nextType} at ${index}, expected ${type}: ${DEBUG_URL}`,\n    );\n  }\n\n  text(): string {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = this.tryConsume(\"CHAR\") || this.tryConsume(\"ESCAPED\"))) {\n      result += value;\n    }\n    return result;\n  }\n}\n\n/**\n * Plain text.\n */\nexport interface Text {\n  type: \"text\";\n  value: string;\n}\n\n/**\n * A parameter designed to match arbitrary text within a segment.\n */\nexport interface Parameter {\n  type: \"param\";\n  name: string;\n}\n\n/**\n * A wildcard parameter designed to match multiple segments.\n */\nexport interface Wildcard {\n  type: \"wildcard\";\n  name: string;\n}\n\n/**\n * A set of possible tokens to expand when matching.\n */\nexport interface Group {\n  type: \"group\";\n  tokens: Token[];\n}\n\n/**\n * A token that corresponds with a regexp capture.\n */\nexport type Key = Parameter | Wildcard;\n\n/**\n * A sequence of `path-to-regexp` keys that match capturing groups.\n */\nexport type Keys = Array<Key>;\n\n/**\n * A sequence of path match characters.\n */\nexport type Token = Text | Parameter | Wildcard | Group;\n\n/**\n * Tokenized path instance.\n */\nexport class TokenData {\n  constructor(public readonly tokens: Token[]) {}\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): TokenData {\n  const { encodePath = NOOP_VALUE } = options;\n  const it = new Iter(lexer(str));\n\n  function consume(endType: TokenType): Token[] {\n    const tokens: Token[] = [];\n\n    while (true) {\n      const path = it.text();\n      if (path) tokens.push({ type: \"text\", value: encodePath(path) });\n\n      const param = it.tryConsume(\"PARAM\");\n      if (param) {\n        tokens.push({\n          type: \"param\",\n          name: param,\n        });\n        continue;\n      }\n\n      const wildcard = it.tryConsume(\"WILDCARD\");\n      if (wildcard) {\n        tokens.push({\n          type: \"wildcard\",\n          name: wildcard,\n        });\n        continue;\n      }\n\n      const open = it.tryConsume(\"{\");\n      if (open) {\n        tokens.push({\n          type: \"group\",\n          tokens: consume(\"}\"),\n        });\n        continue;\n      }\n\n      it.consume(endType);\n      return tokens;\n    }\n  }\n\n  const tokens = consume(\"END\");\n  return new TokenData(tokens);\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends ParamData = ParamData>(\n  path: Path,\n  options: CompileOptions & ParseOptions = {},\n) {\n  const { encode = encodeURIComponent, delimiter = DEFAULT_DELIMITER } =\n    options;\n  const data = path instanceof TokenData ? path : parse(path, options);\n  const fn = tokensToFunction(data.tokens, delimiter, encode);\n\n  return function path(data: P = {} as P) {\n    const [path, ...missing] = fn(data);\n    if (missing.length) {\n      throw new TypeError(`Missing parameters: ${missing.join(\", \")}`);\n    }\n    return path;\n  };\n}\n\nexport type ParamData = Partial<Record<string, string | string[]>>;\nexport type PathFunction<P extends ParamData> = (data?: P) => string;\n\nfunction tokensToFunction(\n  tokens: Token[],\n  delimiter: string,\n  encode: Encode | false,\n) {\n  const encoders = tokens.map((token) =>\n    tokenToFunction(token, delimiter, encode),\n  );\n\n  return (data: ParamData) => {\n    const result: string[] = [\"\"];\n\n    for (const encoder of encoders) {\n      const [value, ...extras] = encoder(data);\n      result[0] += value;\n      result.push(...extras);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Convert a single token into a path building function.\n */\nfunction tokenToFunction(\n  token: Token,\n  delimiter: string,\n  encode: Encode | false,\n): (data: ParamData) => string[] {\n  if (token.type === \"text\") return () => [token.value];\n\n  if (token.type === \"group\") {\n    const fn = tokensToFunction(token.tokens, delimiter, encode);\n\n    return (data) => {\n      const [value, ...missing] = fn(data);\n      if (!missing.length) return [value];\n      return [\"\"];\n    };\n  }\n\n  const encodeValue = encode || NOOP_VALUE;\n\n  if (token.type === \"wildcard\" && encode !== false) {\n    return (data) => {\n      const value = data[token.name];\n      if (value == null) return [\"\", token.name];\n\n      if (!Array.isArray(value) || value.length === 0) {\n        throw new TypeError(`Expected \"${token.name}\" to be a non-empty array`);\n      }\n\n      return [\n        value\n          .map((value, index) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `Expected \"${token.name}/${index}\" to be a string`,\n              );\n            }\n\n            return encodeValue(value);\n          })\n          .join(delimiter),\n      ];\n    };\n  }\n\n  return (data) => {\n    const value = data[token.name];\n    if (value == null) return [\"\", token.name];\n\n    if (typeof value !== \"string\") {\n      throw new TypeError(`Expected \"${token.name}\" to be a string`);\n    }\n\n    return [encodeValue(value)];\n  };\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends ParamData> {\n  path: string;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends ParamData> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends ParamData> = (path: string) => Match<P>;\n\n/**\n * Supported path types.\n */\nexport type Path = string | TokenData;\n\n/**\n * Transform a path into a match function.\n */\nexport function match<P extends ParamData>(\n  path: Path | Path[],\n  options: MatchOptions & ParseOptions = {},\n): MatchFunction<P> {\n  const { decode = decodeURIComponent, delimiter = DEFAULT_DELIMITER } =\n    options;\n  const { regexp, keys } = pathToRegexp(path, options);\n\n  const decoders = keys.map((key) => {\n    if (decode === false) return NOOP_VALUE;\n    if (key.type === \"param\") return decode;\n    return (value: string) => value.split(delimiter).map(decode);\n  });\n\n  return function match(input: string) {\n    const m = regexp.exec(input);\n    if (!m) return false;\n\n    const path = m[0];\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n      const decoder = decoders[i - 1];\n      params[key.name] = decoder(m[i]);\n    }\n\n    return { path, params };\n  };\n}\n\nexport function pathToRegexp(\n  path: Path | Path[],\n  options: PathToRegexpOptions & ParseOptions = {},\n) {\n  const {\n    delimiter = DEFAULT_DELIMITER,\n    end = true,\n    sensitive = false,\n    trailing = true,\n  } = options;\n  const keys: Keys = [];\n  const sources: string[] = [];\n  const flags = sensitive ? \"\" : \"i\";\n  const paths = Array.isArray(path) ? path : [path];\n  const items = paths.map((path) =>\n    path instanceof TokenData ? path : parse(path, options),\n  );\n\n  for (const { tokens } of items) {\n    for (const seq of flatten(tokens, 0, [])) {\n      const regexp = sequenceToRegExp(seq, delimiter, keys);\n      sources.push(regexp);\n    }\n  }\n\n  let pattern = `^(?:${sources.join(\"|\")})`;\n  if (trailing) pattern += `(?:${escape(delimiter)}$)?`;\n  pattern += end ? \"$\" : `(?=${escape(delimiter)}|$)`;\n\n  const regexp = new RegExp(pattern, flags);\n  return { regexp, keys };\n}\n\n/**\n * Flattened token set.\n */\ntype Flattened = Text | Parameter | Wildcard;\n\n/**\n * Generate a flat list of sequence tokens from the given tokens.\n */\nfunction* flatten(\n  tokens: Token[],\n  index: number,\n  init: Flattened[],\n): Generator<Flattened[]> {\n  if (index === tokens.length) {\n    return yield init;\n  }\n\n  const token = tokens[index];\n\n  if (token.type === \"group\") {\n    const fork = init.slice();\n    for (const seq of flatten(token.tokens, 0, fork)) {\n      yield* flatten(tokens, index + 1, seq);\n    }\n  } else {\n    init.push(token);\n  }\n\n  yield* flatten(tokens, index + 1, init);\n}\n\n/**\n * Transform a flat sequence of tokens into a regular expression.\n */\nfunction sequenceToRegExp(tokens: Flattened[], delimiter: string, keys: Keys) {\n  let result = \"\";\n  let backtrack = \"\";\n  let isSafeSegmentParam = true;\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if (token.type === \"text\") {\n      result += escape(token.value);\n      backtrack += token.value;\n      isSafeSegmentParam ||= token.value.includes(delimiter);\n      continue;\n    }\n\n    if (token.type === \"param\" || token.type === \"wildcard\") {\n      if (!isSafeSegmentParam && !backtrack) {\n        throw new TypeError(`Missing text after \"${token.name}\": ${DEBUG_URL}`);\n      }\n\n      if (token.type === \"param\") {\n        result += `(${negate(delimiter, isSafeSegmentParam ? \"\" : backtrack)}+)`;\n      } else {\n        result += `([\\\\s\\\\S]+)`;\n      }\n\n      keys.push(token);\n      backtrack = \"\";\n      isSafeSegmentParam = false;\n      continue;\n    }\n  }\n\n  return result;\n}\n\nfunction negate(delimiter: string, backtrack: string) {\n  if (backtrack.length < 2) {\n    if (delimiter.length < 2) return `[^${escape(delimiter + backtrack)}]`;\n    return `(?:(?!${escape(delimiter)})[^${escape(backtrack)}])`;\n  }\n  if (delimiter.length < 2) {\n    return `(?:(?!${escape(backtrack)})[^${escape(delimiter)}])`;\n  }\n  return `(?:(?!${escape(backtrack)}|${escape(delimiter)})[\\\\s\\\\S])`;\n}\n\n/**\n * Stringify token data into a path string.\n */\nexport function stringify(data: TokenData) {\n  return data.tokens\n    .map(function stringifyToken(token, index, tokens): string {\n      if (token.type === \"text\") return escapeText(token.value);\n      if (token.type === \"group\") {\n        return `{${token.tokens.map(stringifyToken).join(\"\")}}`;\n      }\n\n      const isSafe =\n        isNameSafe(token.name) && isNextNameSafe(tokens[index + 1]);\n      const key = isSafe ? token.name : JSON.stringify(token.name);\n\n      if (token.type === \"param\") return `:${key}`;\n      if (token.type === \"wildcard\") return `*${key}`;\n      throw new TypeError(`Unexpected token: ${token}`);\n    })\n    .join(\"\");\n}\n\nfunction isNameSafe(name: string) {\n  const [first, ...rest] = name;\n  if (!ID_START.test(first)) return false;\n  return rest.every((char) => ID_CONTINUE.test(char));\n}\n\nfunction isNextNameSafe(token: Token | undefined) {\n  if (token?.type !== \"text\") return true;\n  return !ID_CONTINUE.test(token.value[0]);\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n */\n\nimport {\n    Encode as p2rEncode,\n    Decode as p2rDecode,\n    ParseOptions as p2rParseOptions,\n    PathToRegexpOptions as p2rPathToRegexpOptions,\n    MatchOptions as p2rMatchOptions,\n    CompileOptions as p2rCompileOptions,\n    TokenData as p2rTokenData,\n    ParamData as p2rParamData,\n    PathFunction as p2rPathFunction,\n    MatchResult as p2rMatchResult,\n    Match as p2rMatch,\n    MatchFunction as p2rMatchFunction,\n    Key as p2rKey,\n    Token as p2rToken,\n    Path as p2rPath,\n    parse,\n    compile,\n    match,\n    stringify,\n    pathToRegexp,\n} from 'path-to-regexp';\n\ndeclare namespace path2regexp {\n    export type Encode = p2rEncode;\n    export type Decode = p2rDecode;\n    export type ParseOptions = p2rParseOptions;\n    export type PathToRegexpOptions = p2rPathToRegexpOptions;\n    export type MatchOptions = p2rMatchOptions;\n    export type CompileOptions = p2rCompileOptions;\n    export type TokenData = p2rTokenData;\n    export type ParamData = p2rParamData;\n    export type PathFunction<P extends ParamData> = p2rPathFunction<P>;\n    export type MatchResult<P extends ParamData> = p2rMatchResult<P>;\n    export type Match<P extends ParamData> = p2rMatch<P>;\n    export type MatchFunction<P extends ParamData> = p2rMatchFunction<P>;\n    export type Key = p2rKey;\n    export type Token = p2rToken;\n    export type Path = p2rPath;\n}\n\nconst path2regexp = {\n    TokenData: p2rTokenData,\n    parse,\n    compile,\n    match,\n    stringify,\n    pathToRegexp,\n};\n\nexport { path2regexp };\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        ROUTER = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 15,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        MVC_ROUTER_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_ROUTER_ELEMENT_NOT_FOUND        = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 1, 'router element not found.'),\n        ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 2, 'Route cannot be resolved.'),\n        ERROR_MVC_ROUTER_NAVIGATE_FAILED          = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 3, 'Route navigate failed.'),\n        ERROR_MVC_ROUTER_INVALID_SUBFLOW_BASE_URL = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 4, 'Invalid sub-flow base url.'),\n        ERROR_MVC_ROUTER_BUSY                     = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 5, 'In changing page process now.'),\n    }\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const window = safe(globalThis.window);\n/** @internal */ export const URL = safe(globalThis.URL);\n","import {\n    Writable,\n    PlainObject,\n    at,\n    sort,\n    noop,\n} from '@cdp/core-utils';\nimport { Deferred } from '@cdp/promise';\nimport { HistoryState, HistoryDirectReturnType } from './interfaces';\n\n/** @internal normalzie id string */\nexport const normalizeId = (src: string): string => {\n    // remove head of \"#\", \"/\", \"#/\" and tail of \"/\"\n    return src.replace(/^(#\\/)|^[#/]|\\s+$/, '').replace(/^\\s+$|(\\/$)/, '');\n};\n\n/** @internal create stack */\nexport const createData = <T = PlainObject>(id: string, state?: T): HistoryState<T> => {\n    return Object.assign({ '@id': normalizeId(id) }, state);\n};\n\n/** @internal create uncancellable deferred */\nexport const createUncancellableDeferred = (warn: string): Deferred => {\n    const uncancellable = new Deferred() as Writable<Deferred>;\n    uncancellable.reject = () => {\n        console.warn(warn);\n        uncancellable.resolve();\n    };\n    return uncancellable;\n};\n\n/** @internal assign state element if already exists */\nexport const assignStateElement = (state: HistoryState, stack: HistoryStack): void => {\n    const el = stack.direct(state['@id'])?.state?.el;\n    (!state.el && el) && (state.el = el);\n};\n\n//__________________________________________________________________________________________________//\n\n/**\n * @internal stack management common class\n */\nexport class HistoryStack<T = PlainObject> {\n    private _stack: HistoryState<T>[] = [];\n    private _index = 0;\n\n    /** history stack length */\n    get length(): number {\n        return this._stack.length;\n    }\n\n    /** current state */\n    get state(): HistoryState<T> {\n        return this.distance(0);\n    }\n\n    /** current id */\n    get id(): string {\n        return this.state['@id'];\n    }\n\n    /** current index */\n    get index(): number {\n        return this._index;\n    }\n\n    /** current index */\n    set index(idx: number) {\n        this._index = Math.trunc(idx);\n    }\n\n    /** stack pool */\n    get array(): readonly HistoryState<T>[] {\n        return this._stack.slice();\n    }\n\n    /** check position in stack is first or not */\n    get isFirst(): boolean {\n        return 0 === this._index;\n    }\n\n    /** check position in stack is last or not */\n    get isLast(): boolean {\n        return this._index === this._stack.length - 1;\n    }\n\n    /** get data by index. */\n    public at(index: number): HistoryState<T> {\n        return at(this._stack, index);\n    }\n\n    /** clear forward history from current index. */\n    public clearForward(): void {\n        this._stack = this._stack.slice(0, this._index + 1);\n    }\n\n    /** return closet index by ID. */\n    public closest(id: string): number | undefined {\n        id = normalizeId(id);\n        const { _index: base } = this;\n        const candidates = this._stack\n            .map((s, index) => { return { index, distance: Math.abs(base - index), ...s }; })\n            .filter(s => s['@id'] === id)\n        ;\n        sort(candidates, (l, r) => (l.distance > r.distance ? 1 : -1), true);\n        return candidates[0]?.index;\n    }\n\n    /** return closet stack information by to ID and from ID. */\n    public direct(toId: string, fromId?: string): HistoryDirectReturnType<T> {\n        const toIndex   = this.closest(toId);\n        const fromIndex = null == fromId ? this._index : this.closest(fromId);\n        if (null == fromIndex || null == toIndex) {\n            return { direction: 'missing' };\n        } else {\n            const delta = toIndex - fromIndex;\n            const direction = 0 === delta\n                ? 'none'\n                : delta < 0 ? 'back' : 'forward';\n            return { direction, delta, index: toIndex, state: this._stack[toIndex] };\n        }\n    }\n\n    /** get active data from current index origin */\n    public distance(delta: number): HistoryState<T> {\n        const pos = this._index + delta;\n        if (pos < 0) {\n            throw new RangeError(`invalid array index. [length: ${this.length}, given: ${pos}]`);\n        }\n        return this.at(pos);\n    }\n\n    /** noop stack */\n    public noopStack = noop; // eslint-disable-line @typescript-eslint/explicit-member-accessibility\n\n    /** push stack */\n    public pushStack(data: HistoryState<T>): void {\n        this._stack[++this._index] = data;\n    }\n\n    /** replace stack */\n    public replaceStack(data: HistoryState<T>): void {\n        this._stack[this._index] = data;\n    }\n\n    /** seek stack */\n    public seekStack(data: HistoryState<T>): void {\n        const index = this.closest(data['@id']);\n        if (null == index) {\n            this.pushStack(data);\n        } else {\n            this._index = index;\n        }\n    }\n\n    /** dispose object */\n    public dispose(): void {\n        this._stack.length = 0;\n        this._index = NaN;\n    }\n}\n","import { webRoot } from '@cdp/web-utils';\nimport { URL } from './ssr';\nimport { normalizeId } from './history/internal';\n\n/** re-export */\nexport * from '@cdp/extension-path2regexp';\n\n/**\n * @en Generates an ID to be used by the stack inside the router.\n * @ja ルーター内部の stack が使用する ID を生成\n *\n * @param src\n *  - `en` specifies where the path string is created from [ex: `location.hash`, `location.href`, `#path`, `path`, `/path`]\n *  - `ja` path 文字列の作成元を指定 [ex: `location.hash`, `location.href`, `#path`, `path`, `/path`]\n */\nexport const toRouterStackId = (src: string): string => {\n    if (URL.canParse(src)) {\n        const { hash } = new URL(src);\n        return hash ? normalizeId(hash) : normalizeId(src.substring(webRoot.length));\n    } else {\n        return normalizeId(src);\n    }\n};\n\n/**\n * @en Get the normalized `/<id>` string from the url / path.\n * @ja url / path を指定して, 正規化した `/<stack id>` 文字列を取得\n *\n * @param src\n *  - `en` specifies where the path string is created from [ex: `location.hash`, `location.href`, `#path`, `path`, `/path`]\n *  - `ja` path 文字列の作成元を指定 [ex: `location.hash`, `location.href`, `#path`, `path`, `/path`]\n */\nexport const toRouterPath = (src: string): string => {\n    return `/${toRouterStackId(src)}`;\n};\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any\n */\n\nimport {\n    Accessible,\n    PlainObject,\n    isObject,\n    noop,\n    $cdp,\n} from '@cdp/core-utils';\nimport { Silenceable, EventPublisher } from '@cdp/events';\nimport { Deferred, CancelToken } from '@cdp/promise';\nimport { toUrl } from '@cdp/web-utils';\nimport { toRouterStackId as toId } from '../utils';\nimport { window } from '../ssr';\nimport type {\n    IHistory,\n    HistoryEvent,\n    HistoryState,\n    HistorySetStateOptions,\n    HistoryDirectReturnType,\n} from './interfaces';\nimport {\n    HistoryStack,\n    createData,\n    createUncancellableDeferred,\n    assignStateElement,\n} from './internal';\n\n/** @internal dispatch additional information */\ninterface DispatchInfo<T> {\n    df: Deferred;\n    newId: string;\n    oldId: string;\n    postproc: 'noop' | 'push' | 'replace' | 'seek';\n    nextState?: HistoryState<T>;\n    prevState?: HistoryState<T>;\n}\n\n/** @internal constant */\nconst enum Const {\n    HASH_PREFIX = '#/',\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */\nconst setDispatchInfo = <T>(state: Accessible<T>, additional: DispatchInfo<T>): T => {\n    (state[$cdp] as DispatchInfo<T>) = additional;\n    return state;\n};\n\n/** @internal */\nconst parseDispatchInfo = <T>(state: Accessible<T>): [T, DispatchInfo<T>?] => {\n    if (isObject(state) && state[$cdp]) {\n        const additional = state[$cdp];\n        delete state[$cdp];\n        return [state, additional as DispatchInfo<T>];\n    } else {\n        return [state];\n    }\n};\n\n/** @internal instance signature */\nconst $signature = Symbol('SessionHistory#signature');\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Browser session history management class.\n * @ja ブラウザセッション履歴管理クラス\n */\nclass SessionHistory<T = PlainObject> extends EventPublisher<HistoryEvent<T>> implements IHistory<T> {\n    private readonly _window: Window;\n    private readonly _mode: 'hash' | 'history';\n    private readonly _popStateHandler: (ev: PopStateEvent) => void;\n    private readonly _stack = new HistoryStack<T>();\n    private _dfGo?: Deferred;\n\n    /**\n     * constructor\n     */\n    constructor(windowContxt: Window, mode: 'hash' | 'history', id?: string, state?: T) {\n        super();\n        (this as any)[$signature] = true;\n        this._window = windowContxt;\n        this._mode = mode;\n\n        this._popStateHandler = this.onPopState.bind(this);\n        this._window.addEventListener('popstate', this._popStateHandler);\n\n        // initialize\n        void this.replace(id ?? toId(this._window.location.href), state, { silent: true });\n    }\n\n    /**\n     * dispose object\n     */\n    dispose(): void {\n        this._window.removeEventListener('popstate', this._popStateHandler);\n        this._stack.dispose();\n        this.off();\n        delete (this as any)[$signature];\n    }\n\n    /**\n     * reset history\n     */\n    async reset(options?: Silenceable): Promise<void> {\n        if (Number.isNaN(this.index) || this._stack.length <= 1) {\n            return;\n        }\n\n        const { silent } = options ?? {};\n        const { location } = this._window;\n        const prevState = this._stack.state;\n        const oldURL = location.href;\n\n        this.setIndex(0);\n        await this.clearForward();\n\n        const newURL = location.href;\n\n        if (!silent) {\n            const additional: DispatchInfo<T> = {\n                df: createUncancellableDeferred('SessionHistory#reset() is uncancellable method.'),\n                newId: toId(newURL),\n                oldId: toId(oldURL),\n                postproc: 'noop',\n                prevState,\n            };\n            await this.dispatchChangeInfo(this.state, additional);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IHistory<T>\n\n    /** history stack length */\n    get length(): number {\n        return this._stack.length;\n    }\n\n    /** current state */\n    get state(): HistoryState<T> {\n        return this._stack.state;\n    }\n\n    /** current id */\n    get id(): string {\n        return this._stack.id;\n    }\n\n    /** current index */\n    get index(): number {\n        return this._stack.index;\n    }\n\n    /** stack pool */\n    get stack(): readonly HistoryState<T>[] {\n        return this._stack.array;\n    }\n\n    /** check it can go back in history */\n    get canBack(): boolean {\n        return !this._stack.isFirst;\n    }\n\n    /** check it can go forward in history */\n    get canForward(): boolean {\n        return !this._stack.isLast;\n    }\n\n    /** get data by index. */\n    at(index: number): HistoryState<T> {\n        return this._stack.at(index);\n    }\n\n    /** To move backward through history. */\n    back(): Promise<number> {\n        return this.go(-1);\n    }\n\n    /** To move forward through history. */\n    forward(): Promise<number> {\n        return this.go(1);\n    }\n\n    /** To move a specific point in history. */\n    async go(delta?: number): Promise<number> {\n        // if already called, no reaction.\n        if (this._dfGo) {\n            return this.index;\n        }\n\n        // if given 0, just reload.\n        if (!delta) {\n            await this.triggerEventAndWait('refresh', this.state, undefined);\n            return this.index;\n        }\n\n        const oldIndex = this.index;\n\n        try {\n            this._dfGo = new Deferred();\n            this._stack.distance(delta);\n            this._window.history.go(delta);\n            await this._dfGo;\n        } catch (e) {\n            console.warn(e);\n            this.setIndex(oldIndex);\n        } finally {\n            this._dfGo = undefined;\n        }\n\n        return this.index;\n    }\n\n    /** To move a specific point in history by stack ID. */\n    traverseTo(id: string): Promise<number> {\n        const { direction, delta } = this.direct(id);\n        if ('missing' === direction) {\n            console.warn(`traverseTo(${id}), returned missing.`);\n            return Promise.resolve(this.index);\n        }\n        return this.go(delta);\n    }\n\n    /**\n     * @en Register new history.\n     * @ja 新規履歴の登録\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` スタックIDを指定\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` スタック に紐づく状態オブジェクト\n     * @param options\n     *  - `en` State management options\n     *  - `ja` 状態管理用オプションを指定\n     */\n    push(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('push', id, state, options ?? {});\n    }\n\n    /**\n     * @en Replace current history.\n     * @ja 現在の履歴の置換\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` スタックIDを指定\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` スタック に紐づく状態オブジェクト\n     * @param options\n     *  - `en` State management options\n     *  - `ja` 状態管理用オプションを指定\n     */\n    replace(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('replace', id, state, options ?? {});\n    }\n\n    /**\n     * @en Clear forward history from current index.\n     * @ja 現在の履歴のインデックスより前方の履歴を削除\n     */\n    clearForward(): Promise<void> {\n        this._stack.clearForward();\n        return this.clearForwardHistory();\n    }\n\n    /**\n     * @en Return closet index by ID.\n     * @ja 指定された ID から最も近い index を返却\n     */\n    closest(id: string): number | undefined {\n        return this._stack.closest(id);\n    }\n\n    /**\n     * @en Return destination stack information by `start` and `end` ID.\n     * @ja 起点, 終点の ID を指定してスタック情報を返却\n     */\n    direct(toId: string, fromId?: string): HistoryDirectReturnType<T> {\n        return this._stack.direct(toId, fromId);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    /** @internal set index */\n    private setIndex(idx: number): void {\n        this._stack.index = idx;\n    }\n\n    /** @internal convert to URL */\n    private toUrl(id: string): string {\n        return ('hash' === this._mode) ? `${Const.HASH_PREFIX}${id}` : toUrl(id);\n    }\n\n    /** @internal trigger event & wait process */\n    private async triggerEventAndWait(\n        event: 'refresh' | 'changing',\n        arg1: HistoryState<T>,\n        arg2: HistoryState<T> | undefined | ((reason?: unknown) => void),\n    ): Promise<void> {\n        const promises: Promise<unknown>[] = [];\n        this.publish(event, arg1, arg2 as any, promises);\n        await Promise.all(promises);\n    }\n\n    /** @internal update */\n    private async updateState(method: 'push' | 'replace', id: string, state: T | undefined, options: HistorySetStateOptions): Promise<number> {\n        const { silent, cancel } = options;\n        const { location, history } = this._window;\n\n        const data = createData(id, state);\n        id = data['@id'];\n        if ('replace' === method && 0 === this.index) {\n            data['@origin'] = true;\n        }\n\n        const oldURL = location.href;\n        history[`${method}State`](data, '', this.toUrl(id));\n        const newURL = location.href;\n\n        assignStateElement(data, this._stack as HistoryStack);\n\n        if (!silent) {\n            const additional: DispatchInfo<T> = {\n                df: new Deferred(cancel),\n                newId: toId(newURL),\n                oldId: toId(oldURL),\n                postproc: method,\n                nextState: data,\n            };\n            await this.dispatchChangeInfo(data, additional);\n        } else {\n            this._stack[`${method}Stack`](data);\n        }\n\n        return this.index;\n    }\n\n    /** @internal dispatch `popstate` events */\n    private async dispatchChangeInfo(newState: Accessible<T>, additional: DispatchInfo<T>): Promise<void> {\n        const state = setDispatchInfo(newState, additional);\n        this._window.dispatchEvent(new PopStateEvent('popstate', { state }));\n        await additional.df;\n    }\n\n    /** @internal silent popstate event listner scope */\n    private async suppressEventListenerScope(executor: (wait: () => Promise<unknown>) => Promise<void>): Promise<void> {\n        try {\n            this._window.removeEventListener('popstate', this._popStateHandler);\n            const waitPopState = (): Promise<unknown> => {\n                return new Promise(resolve => {\n                    this._window.addEventListener('popstate', (ev: PopStateEvent) => {\n                        resolve(ev.state);\n                    });\n                });\n            };\n            await executor(waitPopState);\n        } finally {\n            this._window.addEventListener('popstate', this._popStateHandler);\n        }\n    }\n\n    /** @internal rollback history */\n    private async rollbackHistory(method: string, newId: string): Promise<void> {\n        const { history } = this._window;\n        switch (method) {\n            case 'replace':\n                history.replaceState(this.state, '', this.toUrl(this.id));\n                break;\n            case 'push':\n                await this.suppressEventListenerScope(async (wait: () => Promise<unknown>): Promise<void> => {\n                    const promise = wait();\n                    history.go(-1);\n                    await promise;\n                });\n                break;\n            default:\n                await this.suppressEventListenerScope(async (wait: () => Promise<unknown>): Promise<void> => {\n                    const delta = this.index - this.closest(newId)!;\n                    if (0 !== delta) {\n                        const promise = wait();\n                        delta && history.go(delta);\n                        await promise;\n                    }\n                });\n                break;\n        }\n    }\n\n    /** @internal clear forward session history from current index. */\n    private async clearForwardHistory(): Promise<void> {\n        await this.suppressEventListenerScope(async (wait: () => Promise<unknown>): Promise<void> => {\n            const isOrigin = (st: Accessible<unknown>): boolean => {\n                return st?.['@origin'] as boolean;\n            };\n\n            const { history } = this._window;\n            let state = history.state;\n\n            // back to session origin\n            while (!isOrigin(state)) {\n                const promise = wait();\n                history.back();\n                state = await promise;\n            }\n\n            const ensure = (src: Accessible<unknown>): unknown => {\n                const ctx = { ...src };\n                delete ctx['router'];\n                delete ctx['@params'];\n                return JSON.parse(JSON.stringify(ctx));\n            };\n\n            // forward from index 1 to current value\n            for (let i = 1, n = this._stack.length; i < n; i++) {\n                const st = this._stack.at(i);\n                history.pushState(ensure(st), '', this.toUrl(st['@id']));\n            }\n        });\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers:\n\n    /** @internal receive `popstate` events */\n    private async onPopState(ev: PopStateEvent): Promise<void> {\n        const { location } = this._window;\n        const [newState, additional] = parseDispatchInfo(ev.state);\n        const newId   = additional?.newId ?? toId(location.href);\n        const method  = additional?.postproc ?? 'seek';\n        const df      = additional?.df ?? this._dfGo ?? new Deferred();\n        const oldData = additional?.prevState || this.state;\n        const newData = additional?.nextState || this.direct(newId).state || createData(newId, newState);\n        const { cancel, token } = CancelToken.source(); // eslint-disable-line @typescript-eslint/unbound-method\n\n        try {\n            // for fail safe\n            df.catch(noop);\n\n            await this.triggerEventAndWait('changing', newData, cancel);\n\n            if (token.requested) {\n                throw token.reason;\n            }\n\n            this._stack[`${method}Stack`](newData);\n            await this.triggerEventAndWait('refresh', newData, oldData);\n\n            df.resolve();\n        } catch (e) {\n            // history を元に戻す\n            await this.rollbackHistory(method, newId);\n            this.publish('error', e);\n            df.reject(e);\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en {@link createSessionHistory}() options.\n * @ja {@link createSessionHistory}() に渡すオプション\n * \n */\nexport interface SessionHistoryCreateOptions {\n    context?: Window;\n    mode?: 'hash' | 'history';\n}\n\n/**\n * @en Create browser session history management object.\n * @ja ブラウザセッション管理オブジェクトを構築\n *\n * @param id\n *  - `en` Specified stack ID\n *  - `ja` スタックIDを指定\n * @param state\n *  - `en` State object associated with the stack\n *  - `ja` スタック に紐づく状態オブジェクト\n * @param options\n *  - `en` {@link SessionHistoryCreateOptions} object\n *  - `ja` {@link SessionHistoryCreateOptions} オブジェクト\n */\nexport function createSessionHistory<T = PlainObject>(id?: string, state?: T, options?: SessionHistoryCreateOptions): IHistory<T> {\n    const { context, mode } = Object.assign({ mode: 'hash' }, options);\n    return new SessionHistory(context ?? window, mode, id, state);\n}\n\n/**\n * @en Reset browser session history.\n * @ja ブラウザセッション履歴のリセット\n *\n * @param instance\n *  - `en` `SessionHistory` instance\n *  - `ja` `SessionHistory` インスタンスを指定\n */\nexport async function resetSessionHistory<T = PlainObject>(instance: IHistory<T>, options?: HistorySetStateOptions): Promise<void> {\n    (instance as any)[$signature] && await (instance as SessionHistory<T>).reset(options);\n}\n\n/**\n * @en Dispose browser session history management object.\n * @ja ブラウザセッション管理オブジェクトの破棄\n *\n * @param instance\n *  - `en` `SessionHistory` instance\n *  - `ja` `SessionHistory` インスタンスを指定\n */\nexport function disposeSessionHistory<T = PlainObject>(instance: IHistory<T>): void {\n    (instance as any)[$signature] && (instance as SessionHistory<T>).dispose();\n}\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any\n */\n\nimport { PlainObject, post } from '@cdp/core-utils';\nimport { Silenceable, EventPublisher } from '@cdp/events';\nimport { Deferred, CancelToken } from '@cdp/promise';\nimport type {\n    IHistory,\n    HistoryEvent,\n    HistoryState,\n    HistorySetStateOptions,\n    HistoryDirectReturnType,\n} from './interfaces';\nimport {\n    HistoryStack,\n    createData,\n    createUncancellableDeferred,\n    assignStateElement,\n} from './internal';\n\n/** @internal instance signature */\nconst $signature = Symbol('MemoryHistory#signature');\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Memory history management class.\n * @ja メモリ履歴管理クラス\n */\nclass MemoryHistory<T = PlainObject> extends EventPublisher<HistoryEvent<T>> implements IHistory<T> {\n    private readonly _stack = new HistoryStack<T>();\n\n    /**\n     * constructor\n     */\n    constructor(id: string, state?: T) {\n        super();\n        (this as any)[$signature] = true;\n        // initialize\n        void this.replace(id, state, { silent: true });\n    }\n\n    /**\n     * dispose object\n     */\n    dispose(): void {\n        this._stack.dispose();\n        this.off();\n        delete (this as any)[$signature];\n    }\n\n    /**\n     * reset history\n     */\n    async reset(options?: Silenceable): Promise<void> {\n        if (Number.isNaN(this.index) || this._stack.length <= 1) {\n            return;\n        }\n\n        const { silent } = options ?? {};\n\n        const oldState = this.state;\n        this.setIndex(0);\n        await this.clearForward();\n        const newState = this.state;\n\n        if (!silent) {\n            const df = createUncancellableDeferred('MemoryHistory#reset() is uncancellable method.');\n            void post(() => {\n                void this.onChangeState('noop', df, newState, oldState);\n            });\n            await df;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IHistory<T>\n\n    /** history stack length */\n    get length(): number {\n        return this._stack.length;\n    }\n\n    /** current state */\n    get state(): HistoryState<T> {\n        return this._stack.state;\n    }\n\n    /** current id */\n    get id(): string {\n        return this._stack.id;\n    }\n\n    /** current index */\n    get index(): number {\n        return this._stack.index;\n    }\n\n    /** stack pool */\n    get stack(): readonly HistoryState<T>[] {\n        return this._stack.array;\n    }\n\n    /** check it can go back in history */\n    get canBack(): boolean {\n        return !this._stack.isFirst;\n    }\n\n    /** check it can go forward in history */\n    get canForward(): boolean {\n        return !this._stack.isLast;\n    }\n\n    /** get data by index. */\n    at(index: number): HistoryState<T> {\n        return this._stack.at(index);\n    }\n\n    /** To move backward through history. */\n    back(): Promise<number> {\n        return this.go(-1);\n    }\n\n    /** To move forward through history. */\n    forward(): Promise<number> {\n        return this.go(1);\n    }\n\n    /** To move a specific point in history. */\n    async go(delta?: number): Promise<number> {\n        const oldIndex = this.index;\n\n        try {\n            // if given 0, just reload.\n            const oldState = delta ? this.state : undefined;\n            const newState = this._stack.distance(delta ?? 0);\n            const df = new Deferred();\n            void post(() => {\n                void this.onChangeState('seek', df, newState, oldState);\n            });\n            await df;\n        } catch (e) {\n            console.warn(e);\n            this.setIndex(oldIndex);\n        }\n\n        return this.index;\n    }\n\n    /** To move a specific point in history by stack ID. */\n    traverseTo(id: string): Promise<number> {\n        const { direction, delta } = this.direct(id);\n        if ('missing' === direction) {\n            console.warn(`traverseTo(${id}), returned missing.`);\n            return Promise.resolve(this.index);\n        }\n        return this.go(delta);\n    }\n\n    /**\n     * @en Register new history.\n     * @ja 新規履歴の登録\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` スタックIDを指定\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` スタック に紐づく状態オブジェクト\n     * @param options\n     *  - `en` State management options\n     *  - `ja` 状態管理用オプションを指定\n     */\n    push(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('push', id, state, options ?? {});\n    }\n\n    /**\n     * @en Replace current history.\n     * @ja 現在の履歴の置換\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` スタックIDを指定\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` スタック に紐づく状態オブジェクト\n     * @param options\n     *  - `en` State management options\n     *  - `ja` 状態管理用オプションを指定\n     */\n    replace(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('replace', id, state, options ?? {});\n    }\n\n    /**\n     * @en Clear forward history from current index.\n     * @ja 現在の履歴のインデックスより前方の履歴を削除\n     */\n    async clearForward(): Promise<void> { // eslint-disable-line @typescript-eslint/require-await\n        this._stack.clearForward();\n    }\n\n    /**\n     * @en Return closet index by ID.\n     * @ja 指定された ID から最も近い index を返却\n     */\n    closest(id: string): number | undefined {\n        return this._stack.closest(id);\n    }\n\n    /**\n     * @en Return destination stack information by `start` and `end` ID.\n     * @ja 起点, 終点の ID から終点のスタック情報を返却\n     */\n    direct(toId: string, fromId?: string): HistoryDirectReturnType<T> {\n        return this._stack.direct(toId, fromId);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    /** @internal set index */\n    private setIndex(idx: number): void {\n        this._stack.index = idx;\n    }\n\n    /** @internal trigger event & wait process */\n    private async triggerEventAndWait(\n        event: 'refresh' | 'changing',\n        arg1: HistoryState<T>,\n        arg2: HistoryState<T> | undefined | ((reason?: unknown) => void),\n    ): Promise<void> {\n        const promises: Promise<unknown>[] = [];\n        this.publish(event, arg1, arg2 as any, promises);\n        await Promise.all(promises);\n    }\n\n    /** @internal update */\n    private async updateState(method: 'push' | 'replace', id: string, state: T | undefined, options: HistorySetStateOptions): Promise<number> {\n        const { silent, cancel } = options;\n\n        const newState = createData(id, state);\n        if ('replace' === method && 0 === this.index) {\n            newState['@origin'] = true;\n        }\n\n        assignStateElement(newState, this._stack as HistoryStack);\n\n        if (!silent) {\n            const df = new Deferred(cancel);\n            void post(() => {\n                void this.onChangeState(method, df, newState, this.state);\n            });\n            await df;\n        } else {\n            this._stack[`${method}Stack`](newState);\n        }\n\n        return this.index;\n    }\n\n    /** @internal change state handler */\n    private async onChangeState(method: 'noop' | 'push' | 'replace' | 'seek', df: Deferred, newState: HistoryState<T>, oldState: HistoryState<T> | undefined): Promise<void> {\n        const { cancel, token } = CancelToken.source(); // eslint-disable-line @typescript-eslint/unbound-method\n\n        try {\n            await this.triggerEventAndWait('changing', newState, cancel);\n\n            if (token.requested) {\n                throw token.reason;\n            }\n\n            this._stack[`${method}Stack`](newState);\n            await this.triggerEventAndWait('refresh', newState, oldState);\n\n            df.resolve();\n        } catch (e) {\n            this.publish('error', e);\n            df.reject(e);\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Create memory history management object.\n * @ja メモリ履歴管理オブジェクトを構築\n *\n * @param id\n *  - `en` Specified stack ID\n *  - `ja` スタックIDを指定\n * @param state\n *  - `en` State object associated with the stack\n *  - `ja` スタック に紐づく状態オブジェクト\n */\nexport function createMemoryHistory<T = PlainObject>(id: string, state?: T): IHistory<T> {\n    return new MemoryHistory(id, state);\n}\n\n/**\n * @en Reset memory history.\n * @ja メモリ履歴のリセット\n *\n * @param instance\n *  - `en` `MemoryHistory` instance\n *  - `ja` `MemoryHistory` インスタンスを指定\n */\nexport async function resetMemoryHistory<T = PlainObject>(instance: IHistory<T>, options?: HistorySetStateOptions): Promise<void> {\n    (instance as any)[$signature] && await (instance as MemoryHistory<T>).reset(options);\n}\n\n/**\n * @en Dispose memory history management object.\n * @ja メモリ履歴管理オブジェクトの破棄\n *\n * @param instance\n *  - `en` `MemoryHistory` instance\n *  - `ja` `MemoryHistory` インスタンスを指定\n */\nexport function disposeMemoryHistory<T = PlainObject>(instance: IHistory<T>): void {\n    (instance as any)[$signature] && (instance as MemoryHistory<T>).dispose();\n}\n","import { path2regexp } from '@cdp/extension-path2regexp';\nimport {\n    Writable,\n    Class,\n    isString,\n    isArray,\n    isObject,\n    isFunction,\n    assignValue,\n    sleep,\n} from '@cdp/core-utils';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport {\n    toQueryStrings,\n    parseUrlQuery,\n    convertUrlParamType,\n} from '@cdp/ajax';\nimport {\n    DOM,\n    DOMSelector,\n    dom as $,\n} from '@cdp/dom';\nimport {\n    toUrl,\n    loadTemplateSource,\n    toTemplateElement,\n} from '@cdp/web-utils';\nimport {\n    HistoryDirection,\n    IHistory,\n    createSessionHistory,\n    createMemoryHistory,\n} from '../history';\nimport { normalizeId } from '../history/internal';\nimport type {\n    PageTransitionParams,\n    RouteChangeInfo,\n    Page,\n    RoutePathParams,\n    RouteParameters,\n    Route,\n    RouteSubFlowParams,\n    RouteNavigationOptions,\n    Router,\n} from './interfaces';\nimport type { RouteAyncProcessContext } from './async-process';\n\n/** @internal */\nexport const enum CssName {\n    DEFAULT_PREFIX       = 'cdp',\n    TRANSITION_DIRECTION = 'transition-direction',\n    TRANSITION_RUNNING   = 'transition-running',\n    PAGE_CURRENT         = 'page-current',\n    PAGE_PREVIOUS        = 'page-previous',\n    ENTER_FROM_CLASS     = 'enter-from',\n    ENTER_ACTIVE_CLASS   = 'enter-active',\n    ENTER_TO_CLASS       = 'enter-to',\n    LEAVE_FROM_CLASS     = 'leave-from',\n    LEAVE_ACTIVE_CLASS   = 'leave-active',\n    LEAVE_TO_CLASS       = 'leave-to',\n}\n\n/** @internal */\nexport const enum DomCache {\n    DATA_NAME           = 'dom-cache',\n    CACHE_LEVEL_MEMORY  = 'memory',\n    CACHE_LEVEL_CONNECT = 'connect',\n}\n\n/** @internal */\nexport const enum LinkData {\n    TRANSITION       = 'transition',\n    NAVIAGATE_METHOD = 'navigate-method',\n    PREFETCH         = 'prefetch',\n    PREVENT_ROUTER   = 'prevent-router',\n}\n\n/** @internal */\nexport const enum Const {\n    WAIT_TRANSITION_MARGIN = 100, // msec\n}\n\n/** @internal */\nexport type PageEvent = 'init' | 'mounted' | 'cloned' | 'before-enter' | 'after-enter' | 'before-leave' | 'after-leave' | 'unmounted' | 'removed';\n\n/** @internal */\nexport interface RouteChangeInfoContext extends RouteChangeInfo {\n    readonly asyncProcess: RouteAyncProcessContext;\n    samePageInstance?: boolean;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal flat RouteParameters */\nexport type RouteContextParameters = Omit<RouteParameters, 'routes'> & {\n    /** regexp from path */\n    regexp: RegExp;\n    /** keys of params */\n    paramKeys: string[];\n    /** DOM template instance with Page element */\n    $template?: DOM;\n    /** router page instance from `component` property */\n    page?: Page;\n    /** latest route context cache */\n    '@route'?: Route;\n};\n\n/** @internal */\nexport type RouteSubFlowParamsContext = RouteSubFlowParams & Required<PageTransitionParams> & {\n    origin: string;\n};\n\n/** @internal RouteContext */\nexport type RouteContext = Writable<Route> & RouteNavigationOptions & {\n    '@params': RouteContextParameters;\n    subflow?: RouteSubFlowParamsContext;\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal RouteContextParameters to RouteContext */\nexport const toRouteContext = (url: string, router: Router, params: RouteContextParameters, navOptions?: RouteNavigationOptions): RouteContext => {\n    // omit unclonable props\n    const fromNavigate = !!navOptions;\n    const ensureClone = (ctx: unknown): RouteContext => JSON.parse(JSON.stringify(ctx));\n    const context = Object.assign(\n        {\n            url,\n            router: fromNavigate ? undefined : router,\n        },\n        navOptions,\n        {\n            // force override\n            query: {},\n            params: {},\n            path: params.path,\n            '@params': fromNavigate ? undefined : params,\n        },\n    );\n    return fromNavigate ? ensureClone(context) : context as RouteContext;\n};\n\n/** @internal convert context params */\nexport const toRouteContextParameters = (routes: RouteParameters | RouteParameters[] | undefined): RouteContextParameters[] => {\n    const flatten = (parentPath: string, nested: RouteParameters[]): RouteParameters[] => {\n        const retval: RouteParameters[] = [];\n        for (const n of nested) {\n            n.path = `${parentPath.replace(/\\/$/, '')}/${normalizeId(n.path)}`;\n            retval.push(n);\n            if (n.routes) {\n                retval.push(...flatten(n.path, n.routes));\n            }\n        }\n        return retval;\n    };\n\n    return flatten('', isArray(routes) ? routes : routes ? [routes] : [])\n        .map((seed: RouteContextParameters) => {\n            try {\n                const { regexp, keys } = path2regexp.pathToRegexp(seed.path);\n                seed.regexp = regexp;\n                seed.paramKeys = keys.filter(k => isString(k.name)).map(k => k.name);\n            } catch (e) {\n                console.error(e);\n            }\n            return seed;\n        });\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal prepare IHistory object */\nexport const prepareHistory = (seed: 'hash' | 'history' | 'memory' | IHistory = 'hash', initialPath?: string, context?: Window): IHistory<RouteContext> => {\n    return (isString(seed)\n        ? 'memory' === seed ? createMemoryHistory(initialPath ?? '') : createSessionHistory(initialPath, undefined, { mode: seed, context })\n        : seed\n    ) as IHistory<RouteContext>;\n};\n\n/** @internal */\nconst ensurePathParams = (params: RoutePathParams | undefined): path2regexp.ParamData => {\n    const pathParams: path2regexp.ParamData = {};\n    if (params) {\n        for (const key of Object.keys(params)) {\n            pathParams[key] = String(params[key]);\n        }\n    }\n    return pathParams;\n};\n\n/** @internal */\nexport const buildNavigateUrl = (path: string, options: RouteNavigationOptions): string => {\n    try {\n        path = `/${normalizeId(path)}`;\n        const { query, params } = options;\n        let url = path2regexp.compile(path)(ensurePathParams(params));\n        if (query) {\n            url += `?${toQueryStrings(query)}`;\n        }\n        return url;\n    } catch (error) {\n        throw makeResult(\n            RESULT_CODE.ERROR_MVC_ROUTER_NAVIGATE_FAILED,\n            `Construct route destination failed. [path: ${path}, detail: ${error.toString()}]`,\n            error,\n        );\n    }\n};\n\n/** @internal */\nexport const parseUrlParams = (route: RouteContext): void => {\n    const { url } = route;\n    route.query  = url.includes('?') ? parseUrlQuery(normalizeId(url)) : {};\n    route.params = {};\n\n    const { regexp, paramKeys } = route['@params'];\n    if (paramKeys.length) {\n        const params = regexp.exec(url)?.map((value, index) => { return { value, key: paramKeys[index - 1] }; });\n        for (const param of params!) {\n            if (null != param.key && null != param.value) {\n                assignValue(route.params, param.key, convertUrlParamType(param.value));\n            }\n        }\n    }\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal ensure RouteContextParameters#instance */\nexport const ensureRouterPageInstance = async (route: RouteContext): Promise<boolean> => {\n    const { '@params': params } = route;\n\n    if (params.page) {\n        return false; // already created\n    }\n\n    const { component, componentOptions } = params;\n    if (isFunction(component)) {\n        try {\n            params.page = new (component as unknown as Class)(route, componentOptions);\n        } catch {\n            params.page = await component(route, componentOptions);\n        }\n    } else if (isObject(component)) {\n        params.page = Object.assign({ '@route': route, '@options': componentOptions }, component) as Page;\n    } else {\n        params.page = { '@route': route, '@options': componentOptions } as Page;\n    }\n\n    return true; // newly created\n};\n\n/** @internal ensure RouteContextParameters#$template */\nexport const ensureRouterPageTemplate = async (params: RouteContextParameters): Promise<boolean> => {\n    if (params.$template) {\n        return false; // already created\n    }\n\n    const ensureInstance = (el: HTMLElement | undefined): DOM => {\n        return el instanceof HTMLTemplateElement ? $([...el.content.children]) as DOM : $(el);\n    };\n\n    const { content } = params;\n    if (null == content) {\n        // noop element\n        params.$template = $<HTMLElement>();\n    } else if (isString((content as Record<string, unknown>)['selector'])) {\n        // from ajax\n        const { selector, url } = content as { selector: string; url?: string; };\n        const template = toTemplateElement(await loadTemplateSource(selector, { url: url && toUrl(url) }));\n        if (!template) {\n            throw Error(`template load failed. [selector: ${selector}, url: ${url}]`);\n        }\n        params.$template = ensureInstance(template);\n    } else if (isFunction(content)) {\n        params.$template = ensureInstance($(await content())[0]);\n    } else {\n        params.$template = ensureInstance($(content as DOMSelector)[0]);\n    }\n\n    return true; // newly created\n};\n\n/** @internal decide transition direction */\nexport const decideTransitionDirection = (changeInfo: RouteChangeInfo): HistoryDirection => {\n    if (changeInfo.reverse) {\n        switch (changeInfo.direction) {\n            case 'back':\n                return 'forward';\n            case 'forward':\n                return 'back';\n            default:\n                break;\n        }\n    }\n    return changeInfo.direction;\n};\n\n/** @internal */\ntype EffectType = 'animation' | 'transition';\n\n/** @internal retrieve effect duration property */\nconst getEffectDurationSec = ($el: DOM, effect: EffectType): number => {\n    try {\n        return parseFloat(getComputedStyle($el[0])[`${effect}Duration`]);\n    } catch {\n        return 0;\n    }\n};\n\n/** @internal */\nconst waitForEffect = ($el: DOM, effect: EffectType, durationSec: number): Promise<unknown> => {\n    return Promise.race([\n        new Promise(resolve => $el[`${effect}End`](resolve)),\n        sleep(durationSec * 1000 + Const.WAIT_TRANSITION_MARGIN),\n    ]);\n};\n\n/** @internal transition execution */\nexport const processPageTransition = async($el: DOM, fromClass: string, activeClass: string, toClass: string): Promise<void> => {\n    $el.removeClass(fromClass);\n    $el.addClass(toClass);\n\n    const promises: Promise<unknown>[] = [];\n    for (const effect of ['animation', 'transition'] as EffectType[]) {\n        const duration = getEffectDurationSec($el, effect);\n        duration && promises.push(waitForEffect($el, effect, duration));\n    }\n    await Promise.all(promises);\n\n    $el.removeClass([activeClass, toClass]);\n};\n","import type { RouteAyncProcess } from './interfaces';\n\n/** @internal RouteAyncProcess implementation */\nexport class RouteAyncProcessContext implements RouteAyncProcess {\n    private readonly _promises: Promise<unknown>[] = [];\n\n///////////////////////////////////////////////////////////////////////\n// implements: RouteAyncProcess\n\n    register(promise: Promise<unknown>): void {\n        this._promises.push(promise);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// internal methods:\n\n    get promises(): readonly Promise<unknown>[] {\n        return this._promises;\n    }\n\n    public async complete(): Promise<void> {\n        await Promise.all(this._promises);\n        this._promises.length = 0;\n    }\n}\n","import {\n    UnknownFunction,\n    Accessible,\n    isArray,\n    isFunction,\n    camelize,\n} from '@cdp/core-utils';\nimport { EventPublisher } from '@cdp/events';\nimport { NativePromise } from '@cdp/promise';\nimport {\n    RESULT_CODE,\n    isResult,\n    makeResult,\n} from '@cdp/result';\nimport {\n    DOM,\n    dom as $,\n    DOMSelector,\n} from '@cdp/dom';\nimport { waitFrame } from '@cdp/web-utils';\nimport { toRouterPath } from '../utils';\nimport { window } from '../ssr';\nimport { normalizeId } from '../history/internal';\nimport type { IHistory, HistoryState } from '../history';\nimport {\n    PageTransitionParams,\n    RouterEvent,\n    Page,\n    RouteParameters,\n    Route,\n    TransitionSettings,\n    NavigationSettings,\n    PageStack,\n    PushPageStackOptions,\n    RouterConstructionOptions,\n    RouteSubFlowParams,\n    RouteNavigationOptions,\n    RouterRefreshLevel,\n    Router,\n} from './interfaces';\nimport {\n    CssName,\n    DomCache,\n    LinkData,\n    PageEvent,\n    RouteContextParameters,\n    RouteSubFlowParamsContext,\n    RouteContext,\n    RouteChangeInfoContext,\n    toRouteContextParameters,\n    toRouteContext,\n    prepareHistory,\n    buildNavigateUrl,\n    parseUrlParams,\n    ensureRouterPageInstance,\n    ensureRouterPageTemplate,\n    decideTransitionDirection,\n    processPageTransition,\n} from './internal';\nimport { RouteAyncProcessContext } from './async-process';\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Router impliment class.\n * @ja Router 実装クラス\n */\nclass RouterContext extends EventPublisher<RouterEvent> implements Router {\n    private readonly _routes: Record<string, RouteContextParameters> = {};\n    private readonly _history: IHistory<RouteContext>;\n    private readonly _$el: DOM;\n    private readonly _raf: UnknownFunction;\n    private readonly _historyChangingHandler: typeof RouterContext.prototype.onHistoryChanging;\n    private readonly _historyRefreshHandler: typeof RouterContext.prototype.onHistoryRefresh;\n    private readonly _errorHandler: typeof RouterContext.prototype.onHandleError;\n    private readonly _cssPrefix: string;\n    private _transitionSettings: TransitionSettings;\n    private _navigationSettings: Required<NavigationSettings>;\n    private _lastRoute?: RouteContext;\n    private _prevRoute?: RouteContext;\n    private _subflowTransitionParams?: PageTransitionParams;\n    private _inChangingPage = false;\n\n    /**\n     * constructor\n     */\n    constructor(selector: DOMSelector<string | HTMLElement>, options: RouterConstructionOptions) {\n        super();\n\n        const {\n            routes,\n            start,\n            el,\n            window: context,\n            history,\n            initialPath,\n            additionalStacks,\n            cssPrefix,\n            transition,\n            navigation,\n        } = options;\n\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this._raf = context?.requestAnimationFrame ?? window.requestAnimationFrame;\n\n        this._$el = $(selector, el);\n        if (!this._$el.length) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_ELEMENT_NOT_FOUND, `Router element not found. [selector: ${selector as string}]`);\n        }\n\n        this._history = prepareHistory(history, initialPath, context!);\n        this._historyChangingHandler = this.onHistoryChanging.bind(this);\n        this._historyRefreshHandler  = this.onHistoryRefresh.bind(this);\n        this._errorHandler           = this.onHandleError.bind(this);\n\n        this._history.on('changing', this._historyChangingHandler);\n        this._history.on('refresh',  this._historyRefreshHandler);\n        this._history.on('error',    this._errorHandler);\n\n        // follow anchor\n        this._$el.on('click', '[href]', this.onAnchorClicked.bind(this));\n\n        this._cssPrefix = cssPrefix ?? CssName.DEFAULT_PREFIX;\n        this._transitionSettings = Object.assign({ default: 'none', reload: 'none' }, transition);\n        this._navigationSettings = Object.assign({ method: 'push' }, navigation);\n\n        void (async () => {\n            await this.register(routes!, false);\n            if (additionalStacks?.length) {\n                await this.pushPageStack(additionalStacks, { noNavigate: true });\n            }\n            start && await this.refresh();\n        })();\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: Router\n\n    /** Router's view HTML element */\n    get el(): HTMLElement {\n        return this._$el[0];\n    }\n\n    /** Object with current route data */\n    get currentRoute(): Route {\n        return this._history.state;\n    }\n\n    /** Check state is in sub-flow */\n    get isInSubFlow(): boolean {\n        return !!this.findSubFlowParams(false);\n    }\n\n    /** Check it can go back in history */\n    get canBack(): boolean {\n        return this._history.canBack;\n    }\n\n    /** Check it can go forward in history */\n    get canForward(): boolean {\n        return this._history.canForward;\n    }\n\n    /** Route registration */\n    async register(routes: RouteParameters | RouteParameters[], refresh = false): Promise<this> {\n        const prefetchParams: RouteContextParameters[] = [];\n        for (const context of toRouteContextParameters(routes)) {\n            this._routes[context.path] = context;\n            const { content, prefetch } = context;\n            content && prefetch && prefetchParams.push(context);\n        }\n\n        prefetchParams.length && await this.setPrefetchContents(prefetchParams);\n        refresh && await this.refresh();\n\n        return this;\n    }\n\n    /** Navigate to new page. */\n    async navigate(to: string, options?: RouteNavigationOptions): Promise<this> {\n        try {\n            const seed = this.findRouteContextParams(to);\n            if (!seed) {\n                throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_NAVIGATE_FAILED, `Route not found. [to: ${to}]`);\n            }\n\n            const opts   = Object.assign({ intent: undefined }, options);\n            const url    = buildNavigateUrl(to, opts);\n            const route  = toRouteContext(url, this, seed, opts);\n            const method = opts.method ?? this._navigationSettings.method;\n\n            try {\n                // exec navigate\n                await this._history[method](url, route);\n            } catch {\n                // noop\n            }\n        } catch (e) {\n            this.onHandleError(e);\n        }\n\n        return this;\n    }\n\n    /** Add page stack starting from the current history. */\n    async pushPageStack(stack: PageStack | PageStack[], options?: PushPageStackOptions): Promise<this> {\n        try {\n            const { noNavigate, traverseTo } = options ?? {};\n            const stacks = isArray(stack) ? stack : [stack];\n            const routes = stacks.filter(s => !!s.route).map(s => s.route!);\n\n            // ensrue Route\n            await this.register(routes, false);\n\n            await this.suppressEventListenerScope(async () => {\n                // push history\n                for (const page of stacks) {\n                    const { path: url, transition, reverse } = page;\n                    const path = toRouterPath(url);\n                    const params = this.findRouteContextParams(path);\n                    if (null == params) {\n                        throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED, `Route cannot be resolved. [path: ${url}]`, page);\n                    }\n                    // silent registry\n                    const route = toRouteContext(path, this, params, { intent: undefined });\n                    route.transition = transition;\n                    route.reverse    = reverse;\n                    void this._history.push(path, route, { silent: true });\n                }\n\n                await this.waitFrame();\n\n                if (traverseTo) {\n                    await this._history.traverseTo(toRouterPath(traverseTo));\n                }\n            });\n\n            if (!noNavigate) {\n                await this.refresh();\n            }\n        } catch (e) {\n            this.onHandleError(e);\n        }\n\n        return this;\n    }\n\n    /** To move backward through history. */\n    back(): Promise<this> {\n        return this.go(-1);\n    }\n\n    /** To move forward through history. */\n    forward(): Promise<this> {\n        return this.go(1);\n    }\n\n    /** To move a specific point in history. */\n    async go(delta?: number): Promise<this> {\n        await this._history.go(delta);\n        return this;\n    }\n\n    /** To move a specific point in history by path string. */\n    async traverseTo(src: string): Promise<this> {\n        await this._history.traverseTo(toRouterPath(src));\n        return this;\n    }\n\n    /** Begin sub-flow transaction. */\n    async beginSubFlow(to: string, subflow?: RouteSubFlowParams, options?: RouteNavigationOptions): Promise<this> {\n        try {\n            const { transition, reverse } = options ?? {};\n            const params = Object.assign(\n                {\n                    transition: this._transitionSettings.default!,\n                    reverse: false,\n                    origin: this.currentRoute.url,\n                },\n                subflow,\n                {\n                    transition,\n                    reverse,\n                }\n            );\n            this.evaluateSubFlowParams(params);\n            (this.currentRoute as RouteContext).subflow = params;\n            await this.navigate(to, options);\n        } catch (e) {\n            this.onHandleError(e);\n        }\n        return this;\n    }\n\n    /** Commit sub-flow transaction. */\n    async commitSubFlow(params?: PageTransitionParams): Promise<this> {\n        const subflow = this.findSubFlowParams(true);\n        if (!subflow) {\n            return this;\n        }\n\n        const { transition, reverse } = subflow.params;\n\n        this._subflowTransitionParams = Object.assign({ transition, reverse }, params);\n        const { additionalDistance, additionalStacks } = subflow.params;\n        const distance = subflow.distance + additionalDistance;\n\n        if (additionalStacks?.length) {\n            await this.suppressEventListenerScope(() => this.go(-1 * distance));\n            await this.pushPageStack(additionalStacks);\n        } else {\n            await this.go(-1 * distance);\n        }\n        await this._history.clearForward();\n\n        return this;\n    }\n\n    /** Cancel sub-flow transaction. */\n    async cancelSubFlow(params?: PageTransitionParams): Promise<this> {\n        const subflow = this.findSubFlowParams(true);\n        if (!subflow) {\n            return this;\n        }\n\n        const { transition, reverse } = subflow.params;\n\n        this._subflowTransitionParams = Object.assign({ transition, reverse }, params);\n        await this.go(-1 * subflow.distance);\n        await this._history.clearForward();\n\n        return this;\n    }\n\n    /** Set common transition settnigs. */\n    transitionSettings(newSettings?: TransitionSettings): TransitionSettings {\n        const oldSettings = { ...this._transitionSettings };\n        newSettings && Object.assign(this._transitionSettings, newSettings);\n        return oldSettings;\n    }\n\n    /** Set common navigation settnigs. */\n    navigationSettings(newSettings?: NavigationSettings): NavigationSettings {\n        const oldSettings = { ...this._navigationSettings };\n        newSettings && Object.assign(this._navigationSettings, newSettings);\n        return oldSettings;\n    }\n\n    /** Refresh router (specify update level). */\n    async refresh(level = RouterRefreshLevel.RELOAD): Promise<this> {\n        switch (level) {\n            case RouterRefreshLevel.RELOAD:\n                return this.go();\n            case RouterRefreshLevel.DOM_CLEAR: {\n                this.releaseCacheContents(undefined);\n                this._prevRoute && (this._prevRoute.el = null!);\n                return this.go();\n            }\n            default:\n                console.warn(`unsupported level: ${level}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                return this;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: sub-flow\n\n    /** @internal evaluate sub-flow parameters */\n    private evaluateSubFlowParams(subflow: RouteSubFlowParams): void {\n        let additionalDistance = 0;\n\n        if (subflow.base) {\n            const baseId = normalizeId(subflow.base);\n            let found = false;\n            const { index, stack } = this._history;\n            for (let i = index; i >= 0; i--, additionalDistance++) {\n                if (stack[i]['@id'] === baseId) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_INVALID_SUBFLOW_BASE_URL, `Invalid sub-flow base url. [url: ${subflow.base}]`);\n            }\n        } else {\n            subflow.base = this.currentRoute.url;\n        }\n\n        Object.assign(subflow, { additionalDistance });\n    }\n\n    /** @internal find sub-flow parameters */\n    private findSubFlowParams(detach: boolean): { distance: number; params: RouteSubFlowParamsContext & { additionalDistance: number; }; } | void {\n        const stack = this._history.stack;\n        for (let i = stack.length - 1, distance = 0; i >= 0; i--, distance++) {\n            if (stack[i].subflow) {\n                const params = stack[i].subflow as RouteSubFlowParamsContext & { additionalDistance: number; };\n                detach && delete stack[i].subflow;\n                return { distance, params };\n            }\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: transition utils\n\n    /** @internal common `RouterEventArg` maker */\n    private makeRouteChangeInfo(newState: HistoryState<RouteContext>, oldState: HistoryState<RouteContext> | undefined): RouteChangeInfoContext {\n        const intent = newState.intent;\n        delete newState.intent; // navigate 時に指定された intent は one time のみ有効にする\n\n        const from = (oldState ?? this._lastRoute) as Accessible<RouteContext, string> | undefined;\n        const direction = this._history.direct(newState['@id'], from?.['@id']).direction;\n        const asyncProcess = new RouteAyncProcessContext();\n        const reload = from ? newState.url === from.url : true;\n        const { transition, reverse }\n            = this._subflowTransitionParams ?? (reload\n                ? { transition: this._transitionSettings.reload, reverse: false }\n                : ('back' !== direction ? newState : from as RouteContext));\n\n        return {\n            router: this,\n            from,\n            to: newState,\n            direction,\n            asyncProcess,\n            reload,\n            transition,\n            reverse,\n            intent,\n        };\n    }\n\n    /** @internal find route by url */\n    private findRouteContextParams(path: string): RouteContextParameters | void {\n        const key = `/${normalizeId(path.split('?')[0])}`;\n        for (const path of Object.keys(this._routes)) {\n            const { regexp } = this._routes[path];\n            if (regexp.test(key)) {\n                return this._routes[path];\n            }\n        }\n    }\n\n    /** @internal trigger page event */\n    private triggerPageCallback(event: PageEvent, target: Page | undefined, arg: Route | RouteChangeInfoContext): void {\n        const method = camelize(`page-${event}`);\n        if (isFunction((target as Accessible<Page, UnknownFunction> | undefined)?.[method])) {\n            const retval = (target as Accessible<Page, UnknownFunction>)[method](arg);\n            if (retval instanceof NativePromise && (arg as Accessible<Route>)['asyncProcess']) {\n                (arg as RouteChangeInfoContext).asyncProcess.register(retval);\n            }\n        }\n    }\n\n    /** @internal wait frame */\n    private waitFrame(): Promise<void> {\n        return waitFrame(1, this._raf);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: transition entrance\n\n    /** @internal change page main procedure */\n    private async changePage(nextRoute: HistoryState<RouteContext>, prevRoute: HistoryState<RouteContext> | undefined): Promise<void> {\n        try {\n            this._inChangingPage = true;\n\n            parseUrlParams(nextRoute);\n\n            const changeInfo = this.makeRouteChangeInfo(nextRoute, prevRoute);\n            this._subflowTransitionParams = undefined;\n\n            const [\n                pageNext, $elNext,\n                pagePrev, $elPrev,\n            ] = await this.prepareChangeContext(changeInfo);\n\n            // transition core\n            const transition = await this.transitionPage(pageNext, $elNext, pagePrev, $elPrev, changeInfo);\n\n            this.updateChangeContext($elNext, $elPrev, changeInfo, transition);\n\n            // 遷移先が subflow 開始点である場合, subflow 解除\n            if (nextRoute.url === this.findSubFlowParams(false)?.params.origin) {\n                this.findSubFlowParams(true);\n                await this._history.clearForward();\n            }\n\n            // prefetch content のケア\n            await this.treatPrefetchContents();\n\n            this.publish('changed', changeInfo);\n        } finally {\n            this._inChangingPage = false;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: transition prepare\n\n    /** @internal */\n    private async prepareChangeContext(changeInfo: RouteChangeInfoContext): Promise<[Page, DOM, Page, DOM]> {\n        const nextRoute = changeInfo.to as HistoryState<RouteContext>;\n        const prevRoute = changeInfo.from as HistoryState<RouteContext> | undefined;\n\n        const { '@params': nextParams } = nextRoute;\n        const { '@params': prevParams } = prevRoute ?? {};\n\n        // page instance\n        await ensureRouterPageInstance(nextRoute);\n        // page $template\n        await ensureRouterPageTemplate(nextParams);\n\n        changeInfo.samePageInstance = prevParams?.page && prevParams.page === nextParams.page;\n        const { reload, samePageInstance, asyncProcess } = changeInfo;\n\n        // page $el\n        if (!reload && samePageInstance) {\n            await this.cloneContent(nextRoute, nextParams, prevRoute!, changeInfo, asyncProcess);\n        } else if (!nextRoute.el) {\n            await this.loadContent(nextRoute, nextParams, changeInfo, asyncProcess);\n        }\n\n        const $elNext = $(nextRoute.el);\n        const pageNext = nextParams.page!;\n\n        // mount\n        if (!$elNext.isConnected) {\n            await this.mountContent($elNext, pageNext, changeInfo, asyncProcess);\n        }\n\n        return [\n            pageNext, $elNext,                                                                   // next\n            (reload && {} || (prevParams?.page ?? {})), (reload && $(null) || $(prevRoute?.el)), // prev\n        ];\n    }\n\n    /** @internal */\n    private async cloneContent(\n        nextRoute: RouteContext, nextParams: RouteContextParameters,\n        prevRoute: RouteContext,\n        changeInfo: RouteChangeInfoContext,\n        asyncProcess: RouteAyncProcessContext,\n    ): Promise<void> {\n        nextRoute.el = prevRoute.el;\n        prevRoute.el = nextRoute.el?.cloneNode(true) as HTMLElement;\n        $(prevRoute.el).removeAttr('id').insertBefore(nextRoute.el);\n        $(nextRoute.el).attr('aria-hidden', true).removeClass([`${this._cssPrefix}-${CssName.PAGE_CURRENT}`, `${this._cssPrefix}-${CssName.PAGE_PREVIOUS}`]);\n        this.publish('cloned', changeInfo);\n        this.triggerPageCallback('cloned', nextParams.page, changeInfo);\n        await asyncProcess.complete();\n    }\n\n    /** @internal */\n    private async loadContent(\n        route: RouteContext, params: RouteContextParameters,\n        changeInfo: RouteChangeInfoContext,\n        asyncProcess: RouteAyncProcessContext,\n    ): Promise<void> {\n        let fireEvents = true;\n\n        if (!route.el) {\n            const elCache = this._routes[route.path]['@route']?.el;\n            fireEvents = !elCache;\n            if (elCache) {                              // dom-cache case\n                route.el = elCache;\n            } else if (params.$template?.isConnected) { // prefetch case\n                route.el         = params.$template[0];\n                params.$template = params.$template.clone();\n            } else {\n                route.el = params.$template!.clone()[0];\n            }\n        }\n\n        // update master cache\n        if (route !== this._routes[route.path]['@route']) {\n            this._routes[route.path]['@route'] = route;\n        }\n\n        if (fireEvents) {\n            this.publish('loaded', changeInfo);\n            await asyncProcess.complete();\n            this.triggerPageCallback('init', params.page, changeInfo);\n            await asyncProcess.complete();\n        }\n    }\n\n    /** @internal */\n    private async mountContent(\n        $el: DOM, page: Page | undefined,\n        changeInfo: RouteChangeInfoContext,\n        asyncProcess: RouteAyncProcessContext,\n    ): Promise<void> {\n        $el.attr('aria-hidden', true);\n        this._$el.append($el);\n        this.publish('mounted', changeInfo);\n        this.triggerPageCallback('mounted', page, changeInfo);\n        await asyncProcess.complete();\n    }\n\n    /** @internal */\n    private unmountContent(route: RouteContext): void {\n        const $el = $(route.el);\n        const page = route['@params'].page;\n        if ($el.isConnected) {\n            $el.detach();\n            this.publish('unmounted', route);\n            this.triggerPageCallback('unmounted', page, route);\n        }\n        if (route.el) {\n            route.el = null!;\n            this.publish('unloaded', route);\n            this.triggerPageCallback('removed', page, route);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: transition core\n\n    /** @internal */\n    private async transitionPage(\n        pageNext: Page, $elNext: DOM,\n        pagePrev: Page, $elPrev: DOM,\n        changeInfo: RouteChangeInfoContext,\n    ): Promise<string | undefined> {\n        const transition = changeInfo.transition ?? this._transitionSettings.default;\n\n        const {\n            'enter-from-class': customEnterFromClass,\n            'enter-active-class': customEnterActiveClass,\n            'enter-to-class': customEnterToClass,\n            'leave-from-class': customLeaveFromClass,\n            'leave-active-class': customLeaveActiveClass,\n            'leave-to-class': customLeaveToClass,\n        } = this._transitionSettings;\n\n        // enter-css-class\n        const enterFromClass   = customEnterFromClass   ?? `${transition}-${CssName.ENTER_FROM_CLASS}`;\n        const enterActiveClass = customEnterActiveClass ?? `${transition}-${CssName.ENTER_ACTIVE_CLASS}`;\n        const enterToClass     = customEnterToClass     ?? `${transition}-${CssName.ENTER_TO_CLASS}`;\n\n        // leave-css-class\n        const leaveFromClass   = customLeaveFromClass   ?? `${transition}-${CssName.LEAVE_FROM_CLASS}`;\n        const leaveActiveClass = customLeaveActiveClass ?? `${transition}-${CssName.LEAVE_ACTIVE_CLASS}`;\n        const leaveToClass     = customLeaveToClass     ?? `${transition}-${CssName.LEAVE_TO_CLASS}`;\n\n        await this.beginTransition(\n            pageNext, $elNext, enterFromClass, enterActiveClass,\n            pagePrev, $elPrev, leaveFromClass, leaveActiveClass,\n            changeInfo,\n        );\n\n        await this.waitFrame();\n\n        // transision execution\n        await Promise.all([\n            processPageTransition($elNext, enterFromClass, enterActiveClass, enterToClass),\n            processPageTransition($elPrev, leaveFromClass, leaveActiveClass, leaveToClass),\n        ]);\n\n        await this.waitFrame();\n\n        await this.endTransition(\n            pageNext, $elNext,\n            pagePrev, $elPrev,\n            changeInfo,\n        );\n\n        return transition;\n    }\n\n    /** @internal transition proc : begin */\n    private async beginTransition(\n        pageNext: Page, $elNext: DOM, enterFromClass: string, enterActiveClass: string,\n        pagePrev: Page, $elPrev: DOM, leaveFromClass: string, leaveActiveClass: string,\n        changeInfo: RouteChangeInfoContext,\n    ): Promise<void> {\n        this._$el.addClass([\n            `${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`,\n            `${this._cssPrefix}-${CssName.TRANSITION_DIRECTION}-${decideTransitionDirection(changeInfo)}`,\n        ]);\n\n        $elNext\n            .addClass([enterFromClass, `${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`])\n            .removeAttr('aria-hidden')\n            .reflow()\n            .addClass(enterActiveClass)\n        ;\n        $elPrev.addClass([leaveFromClass, leaveActiveClass, `${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`]);\n\n        this.publish('before-transition', changeInfo);\n        this.triggerPageCallback('before-leave', pagePrev, changeInfo);\n        this.triggerPageCallback('before-enter', pageNext, changeInfo);\n        await changeInfo.asyncProcess.complete();\n    }\n\n    /** @internal transition proc : end */\n    private async endTransition(\n        pageNext: Page, $elNext: DOM,\n        pagePrev: Page, $elPrev: DOM,\n        changeInfo: RouteChangeInfoContext,\n    ): Promise<void> {\n        ($elNext[0] !== $elPrev[0]) && $elPrev.attr('aria-hidden', true);\n        $elNext.removeClass([`${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`]);\n        $elPrev.removeClass([`${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`]);\n\n        this._$el.removeClass([\n            `${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`,\n            `${this._cssPrefix}-${CssName.TRANSITION_DIRECTION}-${decideTransitionDirection(changeInfo)}`,\n        ]);\n\n        this.triggerPageCallback('after-leave', pagePrev, changeInfo);\n        this.triggerPageCallback('after-enter', pageNext, changeInfo);\n        this.publish('after-transition', changeInfo);\n        await changeInfo.asyncProcess.complete();\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: transition finalize\n\n    /** @internal update page status after transition */\n    private updateChangeContext(\n        $elNext: DOM,\n        $elPrev: DOM,\n        changeInfo: RouteChangeInfoContext,\n        transition: string | undefined,\n    ): void {\n        const { from, reload, samePageInstance, direction, to } = changeInfo;\n        const prevRoute = from as RouteContext;\n        const nextRoute = to as RouteContext;\n        const urlChanged = !reload;\n\n\n        if ($elNext[0] !== $elPrev[0]) {\n            // update class\n            $elPrev\n                .removeClass(`${this._cssPrefix}-${CssName.PAGE_CURRENT}`)\n                .addClass(`${this._cssPrefix}-${CssName.PAGE_PREVIOUS}`)\n            ;\n            $elNext.addClass(`${this._cssPrefix}-${CssName.PAGE_CURRENT}`);\n\n            if (urlChanged && this._prevRoute) {\n                this._prevRoute.el?.classList.remove(`${this._cssPrefix}-${CssName.PAGE_PREVIOUS}`);\n                this.treatDomCacheContents(nextRoute, this._prevRoute);\n            }\n        }\n\n        if (urlChanged) {\n            this._prevRoute = prevRoute;\n            if (samePageInstance) {\n                $elPrev.detach();\n                $elNext.addClass(`${this._cssPrefix}-${CssName.PAGE_PREVIOUS}`);\n                this._prevRoute && (this._prevRoute.el = null!);\n            }\n        }\n\n        this._lastRoute = this.currentRoute as RouteContext;\n        'forward' === direction && transition && (this._lastRoute.transition = transition);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: prefetch & dom cache\n\n    /** @internal unset dom cached contents */\n    private releaseCacheContents(el: HTMLElement | undefined): void {\n        for (const key of Object.keys(this._routes)) {\n            const route = this._routes[key]['@route'] as RouteContext | undefined;\n            if (route) {\n                if (null == el) {\n                    this.unmountContent(route);\n                } else if (route.el === el) {\n                    route.el = null!;\n                }\n            }\n        }\n        for (const route of this._history.stack) {\n            if ((null == el && route.el) || route.el === el) {\n                route.el = null!;\n            }\n        }\n    }\n\n    /** @internal destruction of dom according to condition */\n    private treatDomCacheContents(nextRoute: RouteContext, prevRoute: RouteContext): void {\n        if (prevRoute.el && prevRoute.el !== this.currentRoute.el) {\n            const $el = $(prevRoute.el);\n            const cacheLv = $el.data(DomCache.DATA_NAME);\n            if (DomCache.CACHE_LEVEL_CONNECT !== cacheLv) {\n                const page = prevRoute['@params'].page;\n                $el.detach();\n                const fireEvents = prevRoute['@params'].page !== nextRoute['@params'].page;\n                if (fireEvents) {\n                    this.publish('unmounted', prevRoute);\n                    this.triggerPageCallback('unmounted', page, prevRoute);\n                }\n                if (DomCache.CACHE_LEVEL_MEMORY !== cacheLv) {\n                    this.releaseCacheContents(prevRoute.el);\n                    prevRoute.el = null!;\n                    if (fireEvents) {\n                        this.publish('unloaded', prevRoute);\n                        this.triggerPageCallback('removed', page, prevRoute);\n                    }\n                }\n            }\n        }\n    }\n\n    /** @internal set dom prefetched contents */\n    private async setPrefetchContents(params: RouteContextParameters[]): Promise<void> {\n        const toRoute = (param: RouteContextParameters, el: HTMLElement): RouteContext => {\n            const ctx = toRouteContext(param.prefetch!, this, param);\n            ctx.el = el;\n            return ctx;\n        };\n\n        const toRouteChangeInfo = (route: RouteContext): RouteChangeInfoContext => {\n            return {\n                router: this,\n                to: route,\n                direction: 'none',\n                asyncProcess: new RouteAyncProcessContext(),\n                reload: false,\n            };\n        };\n\n        for (const param of params) {\n            const elRoute = param['@route']?.el;\n            if (!elRoute || (this.currentRoute.el !== elRoute && this._lastRoute?.el !== elRoute && this._prevRoute?.el !== elRoute)) {\n                await ensureRouterPageTemplate(param);\n                const el = param.$template![0];\n                if (!el.isConnected) {\n                    const route = toRoute(param, el);\n                    await ensureRouterPageInstance(route);\n                    const changeInfo = toRouteChangeInfo(route);\n                    const { asyncProcess } = changeInfo;\n                    // load & init\n                    await this.loadContent(route, param, changeInfo, asyncProcess);\n                    // mount\n                    await this.mountContent($(el), param.page, changeInfo, asyncProcess);\n                }\n            }\n        }\n    }\n\n    /** @internal load prefetch dom contents */\n    private async treatPrefetchContents(): Promise<void> {\n        // 遷移先から prefetch content を検出\n        const prefetchParams: RouteContextParameters[] = [];\n        const targets = this.currentRoute.el?.querySelectorAll(`[data-${LinkData.PREFETCH}]`) ?? [];\n        for (const el of targets) {\n            const $el = $(el);\n            if (false !== $el.data(LinkData.PREFETCH)) {\n                const url = $el.attr('href');\n                const params = this.findRouteContextParams(url!);\n                if (params) {\n                    params.prefetch = url;\n                    prefetchParams.push(params);\n                }\n            }\n        }\n        await this.setPrefetchContents(prefetchParams);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers:\n\n    /** @internal `history` `changing` handler */\n    private onHistoryChanging(nextState: HistoryState<RouteContext>, cancel: (reason?: unknown) => void, promises: Promise<unknown>[]): void {\n        if (this._inChangingPage) {\n            cancel(makeResult(RESULT_CODE.ERROR_MVC_ROUTER_BUSY));\n            return;\n        }\n        const changeInfo = this.makeRouteChangeInfo(nextState, undefined);\n        this.publish('will-change', changeInfo, cancel);\n        promises.push(...changeInfo.asyncProcess.promises);\n    }\n\n    /** @internal `history` `refresh` handler */\n    private onHistoryRefresh(newState: HistoryState<Partial<RouteContext>>, oldState: HistoryState<RouteContext> | undefined, promises: Promise<unknown>[]): void {\n        const ensure = (state: HistoryState<Partial<RouteContext>>): HistoryState<RouteContext> => {\n            const path  = `/${state['@id']}`;\n            const params = this.findRouteContextParams(path);\n            if (null == params) {\n                throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED, `Route cannot be resolved. [path: ${path}]`, state);\n            }\n            if (null == state['@params']) {\n                // RouteContextParameter を assign\n                Object.assign(state, toRouteContext(path, this, params));\n            }\n            if (!state.el) {\n                // id に紐づく要素がすでに存在する場合は割り当て\n                state.el = this._history.direct(state['@id'])?.state?.el;\n            }\n            return state as HistoryState<RouteContext>;\n        };\n\n        try {\n            // scheduling `refresh` done.\n            promises.push(this.changePage(ensure(newState), oldState));\n        } catch (e) {\n            this.onHandleError(e);\n        }\n    }\n\n    /** @internal error handler */\n    private onHandleError(error: unknown): void {\n        this.publish(\n            'error',\n            isResult(error) ? error : makeResult(RESULT_CODE.ERROR_MVC_ROUTER_NAVIGATE_FAILED, 'Route navigate failed.', error)\n        );\n        console.error(error);\n    }\n\n    /** @internal anchor click handler */\n    private onAnchorClicked(event: MouseEvent): void {\n        const $target = $(event.target as Element).closest('[href]');\n        if ($target.data(LinkData.PREVENT_ROUTER)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const url        = $target.attr('href');\n        const transition = $target.data(LinkData.TRANSITION) as string;\n        const method     = $target.data(LinkData.NAVIAGATE_METHOD) as string;\n        const methodOpts = ('push' === method || 'replace' === method ? { method } : {}) as NavigationSettings;\n\n        if ('#' === url) {\n            void this.back();\n        } else {\n            void this.navigate(url!, { transition, ...methodOpts });\n        }\n    }\n\n    /** @internal silent event listner scope */\n    private async suppressEventListenerScope(executor: () => Promise<unknown>): Promise<unknown> {\n        try {\n            this._history.off('changing', this._historyChangingHandler);\n            this._history.off('refresh',  this._historyRefreshHandler);\n            this._history.off('error',    this._errorHandler);\n            return await executor();\n        } finally {\n            this._history.on('changing', this._historyChangingHandler);\n            this._history.on('refresh',  this._historyRefreshHandler);\n            this._history.on('error',    this._errorHandler);\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Create {@link Router} object.\n * @ja {@link Router} オブジェクトを構築\n *\n * @param selector\n *  - `en` An object or the selector string which becomes origin of {@link DOM}.\n *  - `ja` {@link DOM} のもとになるインスタンスまたはセレクタ文字列\n * @param options\n *  - `en` {@link RouterConstructionOptions} object\n *  - `ja` {@link RouterConstructionOptions} オブジェクト\n */\nexport function createRouter(selector: DOMSelector<string | HTMLElement>, options?: RouterConstructionOptions): Router {\n    return new RouterContext(selector, Object.assign({\n        start: true,\n    }, options));\n}\n","/* eslint-disable\n    @stylistic:js/max-len,\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        APP = CDP_KNOWN_MODULE.APP * LOCAL_CODE_RANGE_GUIDE.FUNCTION,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja 拡張エラーコード定義\n     */\n    export enum RESULT_CODE {\n        APP_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_APP_CONTEXT_NEED_TO_BE_INITIALIZED = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.APP + 1, 'AppContext need to be initialized with options at least once.'),\n    }\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const window = safe(globalThis.window);\n","import { getGlobalNamespace, getConfig } from '@cdp/core-utils';\nimport { i18n } from '@cdp/i18n';\n\n/** @internal */\nexport const enum CssName {\n    PAGE_CURRENT  = 'page-current',\n    PAGE_PREVIOUS = 'page-previous',\n}\n\n/** @internal partial match class name */\nexport const hasPartialClassName = <T extends Element>(el: T, className: string): boolean => {\n    for (const name of el.classList) {\n        if (name.includes(className)) {\n            return true;\n        }\n    }\n    return false;\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal force clear i18n settings */\nexport const clearI18NSettings = (): void => {\n    const context: Partial<typeof i18n> = i18n;\n    delete context.options;\n    delete context.language;\n    delete context.languages;\n    delete context.isInitialized;\n};\n\n/** @internal */\nexport const getAppConfig = <T extends object>(base: T): T => {\n    return Object.assign(\n        {},\n        getConfig<T>(),                  // CDP.Config\n        getGlobalNamespace<T>('Config'), // global Config\n        base,\n    );\n};\n\n/** @internal ensure DOMContentLoaded */\nexport const waitDomContentLoaded = async (context: Document): Promise<void> => {\n    'loading' === context.readyState && await new Promise<unknown>(resolve => {\n        context.addEventListener('DOMContentLoaded', resolve, { once: true });\n    });\n};\n\n/** @internal ensure custom document event ready */\nexport const waitDocumentEventReady = async (context: Document, event: string | undefined): Promise<void> => {\n    null != event && await new Promise<unknown>(resolve => {\n        context.addEventListener(event, resolve, { once: true });\n    });\n};\n","import { isFunction } from '@cdp/core-utils';\nimport { Subscribable, EventPublisher } from '@cdp/events';\nimport { Deferred } from '@cdp/promise';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport { waitFrame } from '@cdp/web-utils';\nimport {\n    DOMSelector,\n    dom as $,\n} from '@cdp/dom';\nimport {\n    I18NOptions,\n    I18NDetectErrorBehaviour,\n    initializeI18N,\n    localize,\n    getLanguage,\n    changeLanguage,\n    i18n,\n} from '@cdp/i18n';\nimport {\n    HistoryState,\n    Route,\n    RouteChangeInfo,\n    RouteParameters,\n    RouterConstructionOptions,\n    RouterRefreshLevel,\n    Router,\n    Page,\n    createRouter,\n    toRouterPath,\n} from '@cdp/router';\nimport { window } from './ssr';\nimport {\n    clearI18NSettings,\n    getAppConfig,\n    waitDomContentLoaded,\n    waitDocumentEventReady,\n} from './internal';\n\n/**\n * @en `orientation` identifier\n * @ja `orientation` 識別子\n */\nexport const enum Orientation {\n    PORTRAIT  = 'portrait',\n    LANDSCAPE = 'landscape',\n}\n\n/**\n * @en The event definition fired in {@link AppContext}.\n * @ja {@link AppContext} 内から発行されるイベント定義\n */\nexport interface AppContextEvent {\n    /**\n     * @en Application ready notification.\n     * @ja アプリケーション準備完了通知\n     * @args [context]\n     */\n    'ready': [AppContext];\n\n    /**\n     * @en Hardware back button press notification.\n     * @ja ハードウェアバックボタンの押下通知\n     * @args [Event]\n     */\n    'backbutton': [Event];\n\n    /**\n     * @en Device orientation change notification.\n     * @ja デバイスオリエンテーション変更通知\n     * https://developer.mozilla.org/ja/docs/Web/API/Window/orientationchange_event\n     * @args [Orientaion, angle]\n     */\n    'orientationchange': [Orientation, number];\n\n    /**\n     * @en Application langugate change notification.\n     * @ja アプリケーション言語変更通知\n     * @args [language, i18n.TFunction]\n     */\n    'languagechange': [string, i18n.TFunction];\n}\n\n/**\n * @en {@link AppContext} create options.\n * @ja {@link AppContext} 構築オプション\n */\nexport interface AppContextOptions extends RouterConstructionOptions {\n    /**\n     * @en An object or the selector string which becomes origin of {@link DOM} for main router.\n     * @ja メインルーターの {@link DOM} のもとになるインスタンスまたはセレクタ文字列\n     * @default `#app`\n     */\n    main?: DOMSelector<string | HTMLElement>;\n\n    /**\n     * @en An object or the selector string which becomes origin of {@link DOM} assigned to the splash screen. <br>\n     *     It will be removed just before appliaction ready.\n     * @ja スプラッシュスクリーンに割り当てられている {@link DOM} のもとになるインスタンスまたはセレクタ文字列 <br>\n     *     準備完了直前に削除される\n     */\n    splash?: DOMSelector<string | HTMLElement>;\n\n    /**\n     * @en Localization module options.\n     * @ja ローカライズモジュールオプション\n     */\n    i18n?: I18NOptions;\n\n    /**\n     * @en Custom stand-by function for application ready state.\n     * @ja アプリケーション準備完了のための待ち受け関数\n     */\n    waitForReady?: Promise<unknown> | ((context: AppContext) => Promise<unknown>);\n\n    /**\n     * @en Custom `document` event for application ready state.\n     * @ja アプリケーション準備完了のためのカスタム `document` イベント\n     */\n    documentEventReady?: string;\n\n    /**\n     * @en Custom `document` event for hardware back button. default: `backbutton`\n     * @ja ハードウェアバックボタンのためのカスタム `document` イベント. 既定値 `backbutton`\n     */\n    documentEventBackButton?: string;\n\n    /**\n     * @internal\n     * @en Specify true to destroy the instance cache and reset. (for debug)\n     * @ja インスタンスキャッシュを破棄しリセットする場合に true を指定 (デバッグ用)\n     */\n    reset?: boolean;\n}\n\n/**\n * @en Application context interface\n * @ja アプリケーションコンテキスト\n */\nexport interface AppContext extends Subscribable<AppContextEvent> {\n    /**\n     * @en main router interface\n     * @ja メインルーター\n     */\n    readonly router: Router;\n\n    /**\n     * @en `Promise` for ready state.\n     * @ja 準備完了確認用 `Promise` オブジェクト\n     */\n    readonly ready: Promise<void>;\n\n    /**\n     * @en Current active page instance.\n     * @ja 現在アクティブなページインスタンス\n     */\n    readonly activePage: Page;\n\n    /**\n     * @en Current {@link Orientation} id.\n     * @ja 現在の {@link Orientation} を取得\n     */\n    readonly orientation: Orientation;\n\n    /**\n     * @en User-definable extended property.\n     * @ja ユーザー定義可能な拡張プロパティ\n     */\n    extension: unknown;\n\n    /**\n     * @en Changes the language.\n     * @ja 言語の切り替え\n     *\n     * @param lng\n     *  - `en` locale string ex: `en`, `en-US`\n     *  - `ja` ロケール文字 ex: `en`, `en-US`\n     * @param options\n     *  - `en` error behaviour\n     *  - `ja` エラー時の振る舞いを指定\n     */\n    changeLanguage(lng: string, options?: I18NDetectErrorBehaviour): Promise<i18n.TFunction>;\n\n    /**\n     * @en Determines if a given URL is the router's current path.\n     * @ja 指定した URL がルーターの現在のパスであるか判定\n     *\n     * @param url\n     *  - `en` specify the URL you want to identify\n     *  - `ja` 判別したい URL を指定\n     */\n    isCurrentPath(url: string): boolean;\n}\n\n//__________________________________________________________________________________________________//\n\nconst _initialRoutes: RouteParameters[] = [];\n\n/**\n * @en Route parameters for page registration. Need to describe `path`, `content`.\n * @ja ページ登録用ルートパラメータ. `path`, `content` の記述が必要\n */\nexport type PageRouteParameters = Required<Pick<RouteParameters, 'content'>> & RouteParameters;\n\n/**\n * @en Pre-register concrete {@link Page} class. Registered with the main router when instantiating {@link AppContext}. <br>\n *     If constructor needs arguments, `options.componentOptions` is available.\n * @ja Page 具象化クラスの事前登録. {@link AppContext} のインスタンス化時にメインルーターに登録される. <br>\n *     constructor を指定する引数がある場合は, `options.componentOptions` を利用可能\n *\n * @example <br>\n *\n * ```ts\n * import {\n *     Page,\n *     Router,\n *     AppContext,\n *     registerPage,\n * } from '@cdp/runtime';\n *\n * const pageFactory = (router: Router, ...args: any[]): Page => {\n *   :\n * };\n * \n * // pre-registration\n * registerPage({\n *     path: 'page-path',\n *     conponent: pageFactory,\n *     content: '#page-id'\n * });\n *\n * // initial access\n * const app = AppContext({ main: '#app' });\n * :\n * ```\n *\n * @param path\n *  - `en` route path\n *  - `ja` ルートのパス\n * @param component\n *  - `en` specify the constructor or built object of the page component\n *  - `ja` ページコンポーネントのコンストラクタもしくは構築済みオブジェクト\n * @param options\n *  - `en` route parameters\n *  - `ja` ルートパラメータ\n */\nexport const registerPage = (params: PageRouteParameters): void => {\n    _initialRoutes.push(params);\n};\n\n//__________________________________________________________________________________________________//\n\n/** AppContext impl class */\nclass Application extends EventPublisher<AppContextEvent> implements AppContext {\n    private readonly _window: Window;\n    private readonly _router: Router;\n    private readonly _ready = new Deferred();\n    private _extension: unknown;\n\n    constructor(options: AppContextOptions) {\n        super();\n        const { main, window: win, routes: _routes } = options;\n        const routerOpts = Object.assign({}, options, { routes: _routes!.concat(..._initialRoutes), start: false });\n        this._window = win ?? window;\n        this._router = createRouter(main as string, routerOpts);\n        void this.initialize(options);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: AppContext\n\n    get router(): Router {\n        return this._router;\n    }\n\n    get ready(): Promise<void> {\n        return this._ready;\n    }\n\n    get activePage(): Page {\n        return (this._router.currentRoute as Route & Record<string, { page: Page; }>)['@params']?.page || {};\n    }\n\n    get orientation(): Orientation {\n        const $window = $(this._window);\n        return ($window.width() < $window.height()) ? Orientation.PORTRAIT : Orientation.LANDSCAPE;\n    }\n\n    get extension(): unknown {\n        return this._extension;\n    }\n\n    set extension(val: unknown) {\n        this._extension = val;\n    }\n\n    async changeLanguage(lng: string, options?: I18NDetectErrorBehaviour): Promise<i18n.TFunction> {\n        const t = await changeLanguage(lng, options);\n        await this._router.refresh(RouterRefreshLevel.DOM_CLEAR);\n        this.publish('languagechange', getLanguage(), t);\n        return t;\n    }\n\n    isCurrentPath(url: string): boolean {\n        const srcPath = toRouterPath(url);\n        const curPath = toRouterPath((this._router.currentRoute as HistoryState<Route>)['@id']);\n        return srcPath === curPath;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    private async initialize(options: AppContextOptions): Promise<void> {\n        const { splash, i18n, waitForReady, documentEventReady, documentEventBackButton, start } = options;\n        const { _window } = this;\n\n        _window.addEventListener('error', this.onGlobalError.bind(this));\n        _window.addEventListener('unhandledrejection', this.onGlobalUnhandledRejection.bind(this));\n\n        await waitDomContentLoaded(_window.document);\n        await Promise.all([\n            initializeI18N(i18n),\n            isFunction(waitForReady) ? waitForReady(this) : waitForReady,\n            waitDocumentEventReady(_window.document, documentEventReady),\n        ]);\n\n        _window.document.addEventListener(documentEventBackButton!, this.onHandleBackKey.bind(this));\n        _window.addEventListener('orientationchange', this.onHandleOrientationChanged.bind(this));\n\n        this._router.on('loaded', this.onPageLoaded.bind(this));\n        start && await this._router.refresh();\n\n        // remove splash screen\n        $(splash, _window.document).remove();\n\n        this._ready.resolve();\n        this.publish('ready', this);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers:\n\n    private onPageLoaded(info: RouteChangeInfo): void {\n        localize(info.to.el);\n    }\n\n    private onGlobalError(event: ErrorEvent): void {\n        console.error(`[Global Error] ${event.message}, ${event.filename}, ${event.colno}, ${event.error}`);\n    }\n\n    private onGlobalUnhandledRejection(event: PromiseRejectionEvent): void {\n        console.error(`[Global Unhandled Rejection] ${event.reason}`);\n    }\n\n    private onHandleBackKey(event: Event): void {\n        this.publish('backbutton', event);\n    }\n\n    private async onHandleOrientationChanged(/*event: Event*/): Promise<void> {\n        const { requestAnimationFrame, screen } = this._window; // eslint-disable-line @typescript-eslint/unbound-method\n        await waitFrame(1, requestAnimationFrame);\n        this.publish('orientationchange', this.orientation, screen.orientation.angle);\n    }\n}\n\n/** context cache */\nlet _appContext: AppContext | undefined;\n\n/**\n * @en Application context access\n * @ja アプリケーションコンテキスト取得\n *\n * @example <br>\n *\n * ```ts\n * import { AppContext } from '@cdp/runtime';\n * ```\n *\n * - initial access\n *\n * ```ts\n * const app = AppContext({\n *     main: '#app',\n *     routes: [\n *         { path: '/' },\n *         { path: '/one' },\n *         { path: '/two' }\n *     ],\n * });\n * :\n * ```\n *\n * - from the second time onwards\n *\n * ```ts\n * const app = AppContext();\n * :\n * ```\n *\n * @param options\n *  - `en` init options\n *  - `ja` 初期化オプション\n */\nexport const AppContext = (options?: AppContextOptions): AppContext => {\n    const opts = getAppConfig(Object.assign({\n        main: '#app',\n        start: true,\n        routes: [],\n        documentEventBackButton: 'backbutton',\n    }, options) as AppContextOptions);\n\n    if (null == options && null == _appContext) {\n        throw makeResult(RESULT_CODE.ERROR_APP_CONTEXT_NEED_TO_BE_INITIALIZED, 'AppContext should be initialized with options at least once.');\n    }\n\n    if (opts.reset) {\n        _appContext = undefined;\n        clearI18NSettings();\n    }\n\n    if (!_appContext) {\n        _appContext = new Application(opts);\n    }\n    return _appContext;\n};\n","import { ViewConstructionOptions, View } from '@cdp/view';\nimport {\n    Router,\n    Route,\n    RouteChangeInfo,\n    HistoryDirection,\n    Page,\n} from '@cdp/router';\nimport { CssName, hasPartialClassName } from './internal';\n\n/** @internal */ const _properties = Symbol('page-view:properties');\n\n/** @internal */\ninterface Property {\n    route?: Route;\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Base class definition of {@link View} that can be specified in as {@link Page} of {@link Router}.\n * @ja {@link Router} の {@link Page} に指定可能な {@link View} の基底クラス定義\n */\nexport abstract class PageView<TElement extends Element = HTMLElement, TEvent extends object = object>\n    extends View<TElement, TEvent> implements Page {\n\n    /** @internal */\n    private readonly [_properties]: Property;\n\n    /**\n     * constructor\n     *\n     * @param route\n     *  - `en` route context\n     *  - `ja` ルートコンテキスト\n     * @param options\n     *  - `en` {@link View} construction options.\n     *  - `ja` {@link View} 構築オプション\n     */\n    constructor(route?: Route, options?: ViewConstructionOptions<TElement>) {\n        super(options);\n        this[_properties] = { route };\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: properties\n\n    /**\n     * @en Check the page is active.\n     * @ja ページがアクティブであるか判定\n     */\n    get active(): boolean {\n        return hasPartialClassName(this.el, CssName.PAGE_CURRENT);\n    }\n\n    /**\n     * @en Route data associated with the page (public).\n     * @ja ページに紐づくルートデータ (公開用)\n     */\n    get ['@route'](): Route | undefined {\n        return this[_properties].route;\n    }\n\n    /**\n     * @en {@link Router} instance\n     * @ja {@link Router} インスタンス\n     */\n    protected get _route(): Route | undefined {\n        return this['@route'];\n    }\n\n    /**\n     * @en {@link Router} instance\n     * @ja {@link Router} インスタンス\n     */\n    protected get _router(): Router | undefined {\n        return this[_properties].route?.router;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: View\n\n    /** @override */\n    render(...args: unknown[]): any { /* overridable */ } // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n\n///////////////////////////////////////////////////////////////////////\n// event handlers: utilized page event\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /**\n     * @override\n     * @en Triggered when the page's HTMLElement is newly constructed by router.\n     * @ja ページの HTMLElement がルーターによって新規に構築されたときに発火\n     */\n    protected onPageInit(thisPage: Route): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered immediately after the page's HTMLElement is inserted into the DOM.\n     * @ja ページの HTMLElement が DOM に挿入された直後に発火\n     */\n    protected onPageMounted(thisPage: Route): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered immediately after the page's HTMLElement is cloned and inserted into the DOM.\n     * @ja ページの HTMLElement が複製され DOM に挿入された直後に発火\n     */\n    protected onPageCloned(thisPage: Route, prevPage: Route): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered when the page is ready to be activated after initialization.\n     * @ja 初期化後, ページがアクティベート可能な状態になると発火\n     */\n    protected onPageBeforeEnter(thisPage: Route, prevPage: Route | undefined, direction: HistoryDirection, intent?: unknown): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered when the page is fully displayed.\n     * @ja ページが完全に表示されると発火\n     */\n    protected onPageAfterEnter(thisPage: Route, prevPage: Route | undefined, direction: HistoryDirection, intent?: unknown): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered just before the page goes hidden.\n     * @ja ページが非表示に移行する直前に発火\n     */\n    protected onPageBeforeLeave(thisPage: Route, nextPage: Route, direction: HistoryDirection, intent?: unknown): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered immediately after the page is hidden.\n     * @ja ページが非表示になった直後に発火\n     */\n    protected onPageAfterLeave(thisPage: Route, nextPage: Route, direction: HistoryDirection, intent?: unknown): void | Promise<void> { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered immediately after the page's HTMLElement is detached from the DOM.\n     * @ja ページの HTMLElement が DOM から切り離された直後に発火\n     */\n    protected onPageUnmounted(thisPage: Route): void { /* overridable */ }\n\n    /**\n     * @override\n     * @en Triggered when the page's HTMLElement is destroyed by the router.\n     * @ja ページの HTMLElement がルーターによって破棄されたときに発火\n     */\n    protected onPageRemoved(thisPage: Route): void { /* overridable */ }\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n\n///////////////////////////////////////////////////////////////////////\n// implements: Page\n\n    /**\n     * @internal\n     * @en Triggered when the page's HTMLElement is newly constructed by router.\n     * @ja ページの HTMLElement がルーターによって新規に構築されたときに発火\n     */\n    pageInit(info: RouteChangeInfo): void | Promise<void> {\n        const { to } = info;\n        this[_properties].route = to;\n        const { el } = to;\n        if (el !== this.el as unknown) {\n            this.setElement(el as unknown as TElement);\n        }\n        return this.onPageInit(to);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page's HTMLElement is inserted into the DOM.\n     * @ja ページの HTMLElement が DOM に挿入された直後に発火\n     */\n    pageMounted(info: RouteChangeInfo): void | Promise<void> {\n        const { to } = info;\n        this[_properties].route = to;\n        return this.onPageMounted(to);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page's HTMLElement is cloned and inserted into the DOM.\n     * @ja ページの HTMLElement が複製され DOM に挿入された直後に発火\n     */\n    pageCloned(info: RouteChangeInfo): void | Promise<void> {\n        const { to, from } = info;\n        this[_properties].route = to;\n        return this.onPageCloned(to, from!);\n    }\n\n    /**\n     * @internal\n     * @en Triggered when the page is ready to be activated after initialization.\n     * @ja 初期化後, ページがアクティベート可能な状態になると発火\n     */\n    pageBeforeEnter(info: RouteChangeInfo): void | Promise<void> {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = to;\n        return this.onPageBeforeEnter(to, from, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered when the page is fully displayed.\n     * @ja ページが完全に表示されると発火\n     */\n    pageAfterEnter(info: RouteChangeInfo): void | Promise<void> {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = to;\n        return this.onPageAfterEnter(to, from, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered just before the page goes hidden.\n     * @ja ページが非表示に移行する直前に発火\n     */\n    pageBeforeLeave(info: RouteChangeInfo): void | Promise<void> {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = from!;\n        return this.onPageBeforeLeave(from!, to, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page is hidden.\n     * @ja ページが非表示になった直後に発火\n     */\n    pageAfterLeave(info: RouteChangeInfo): void | Promise<void> {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = from!;\n        return this.onPageAfterLeave(from!, to, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page's HTMLElement is detached from the DOM.\n     * @ja ページの HTMLElement が DOM から切り離された直後に発火\n     */\n    pageUnmounted(info: Route): void {\n        this.onPageUnmounted(info);\n    }\n\n    /**\n     * @internal\n     * @en Triggered when the page's HTMLElement is destroyed by the router.\n     * @ja ページの HTMLElement がルーターによって破棄されたときに発火\n     */\n    pageRemoved(info: Route): void {\n        this.release();\n        this[_properties].route = undefined;\n        this.onPageRemoved(info);\n    }\n}\n","/**\n * @en Cursor position constant.\n * @ja カーソル位置定数\n */\nexport const enum CursorPos {\n    OUT_OF_RANGE    = -1,\n    CURRENT         = -2,\n}\n\n/**\n * @en Seek expression function type.\n * @ja シーク式関数定義\n */\nexport type SeekExp<T> = (value: T, index?: number, obj?: T[]) => boolean;\n\n/**\n * @en The class provides cursor interface for Array. <br>\n *     It is different from Iterator interface of es2015, and that provides interface which is similar to DB recordset's one.\n * @ja Array 用カーソル I/F を提供するクラス <br>\n *     es2015 の Iterator I/F とは異なり、DB recordset オブジェクトライクな走査 I/F を提供する\n */\nexport class ArrayCursor<T = any> { // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** @internal 対象の配列  */\n    private _array: T[];\n    /** @internal 要素外の先頭を示しているときに true  */\n    private _bof: boolean;\n    /** @internal 要素外の末尾を示しているときに true */\n    private _eof: boolean;\n    /** @internal 現在の index */\n    private _index: number;\n\n    /**\n     * constructor\n     *\n     * @param array\n     *  - `en` target array\n     *  - `ja` 走査対象の配列を指定\n     * @param initialIndex\n     *  - `en` initial index. default: 0\n     *  - `ja` 初期化する index を指定 default: 0\n     */\n    constructor(array: T[], initialIndex = 0) {\n        this._array = array;\n        this._index = initialIndex;\n        if (this.valid()) {\n            this._bof = this._eof = false;\n        } else {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n            this._eof = false;\n        }\n    }\n\n    /**\n     * @en Reset target array.\n     * @ja 対象の再設定\n     *\n     * @param array\n     *  - `en` target array. default: empty array.\n     *  - `ja` 走査対象の配列を指定.   default: 空配列\n     * @param initialIndex\n     *  - `en` initial index. default: CURSOR.OUT_OF_RANGE\n     *  - `ja` 初期化する index を指定 default: CURSOR.OUT_OF_RANGE\n     */\n    public reset(array: T[] = [], initialIndex: number = CursorPos.OUT_OF_RANGE): ArrayCursor<T> {\n        this._array = array;\n        this._index = initialIndex;\n        if (this.valid()) {\n            this._bof = this._eof = false;\n        } else {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n            this._eof = false;\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessors:\n\n    /**\n     * @en Access to current element.\n     * @ja 現在の要素にアクセス\n     */\n    get current(): T | undefined {\n        return this._array[this._index];\n    }\n\n    /**\n     * @en Get current index.\n     * @ja 現在指し示している index を取得\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    /**\n     * @en Get target array length.\n     * @ja 走査対象の要素数を取得\n     */\n    get length(): number {\n        return this._array.length;\n    }\n\n    /**\n     * @en Judge BOF or not.\n     * @ja 要素外の先頭か判定\n     */\n    get isBOF(): boolean {\n        return this._bof;\n    }\n\n    /**\n     * @en Judge EOF or not.\n     * @ja 要素外の末尾か判定\n     */\n    get isEOF(): boolean {\n        return this._eof;\n    }\n\n    /**\n     * @en Access to raw array instance.\n     * @ja 走査対象にアクセス\n     */\n    get array(): T[] {\n        return this._array;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// cursor operation:\n\n    /**\n     * @en Move to first element position.\n     * @ja 先頭要素へ移動\n     */\n    public moveFirst(): ArrayCursor<T> {\n        this._index = 0;\n        this._bof = this._eof = false;\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Move to last element position.\n     * @ja 末尾要素へ移動\n     */\n    public moveLast(): ArrayCursor<T> {\n        this._index = this._array.length - 1;\n        this._bof = this._eof = false;\n        if (!this.valid()) {\n            this._eof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Move to next element position.\n     * @ja カーソルを次へ移動\n     */\n    public moveNext(): ArrayCursor<T> {\n        if (this._bof) {\n            this._bof = false;\n            this._index = 0;\n        } else {\n            this._index++;\n        }\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._eof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Move to previous element position.\n     * @ja カーソルを前へ移動\n     */\n    public movePrevious(): ArrayCursor<T> {\n        if (this._eof) {\n            this._eof = false;\n            this._index = this.length - 1;\n        } else {\n            this._index--;\n        }\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Seek by passed criteria. <br>\n     *     If the operation failed, the cursor position set to EOF.\n     * @ja 指定条件でシーク <br>\n     *     シークに失敗した場合は EOF 状態になる\n     *\n     * @param criteria\n     *  - `en` index or seek expression\n     *  - `ja` index / 条件式を指定\n     */\n    public seek(criteria: number | SeekExp<T>): ArrayCursor<T> {\n        if ('number' === typeof criteria) {\n            this._index = criteria;\n        } else {\n            this._index = this._array.findIndex(criteria);\n        }\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = false;\n            this._eof = true;\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    /**\n     * カーソルが有効な範囲を示しているか判定\n     *\n     * @internal\n     *\n     * @returns true: 有効 / false: 無効\n     */\n    private valid(): boolean {\n        return (0 <= this._index && this._index < this._array.length);\n    }\n}\n","import { unescapeHTML, isFunction } from '@cdp/core-utils';\nimport {\n    JST,\n    TemplateCompileOptions,\n    TemplateEngine,\n} from '@cdp/core-template';\nimport { LoadTemplateOptions, loadTemplateSource } from '@cdp/web-utils';\nexport { clearTemplateCache } from '@cdp/web-utils';\nimport {\n    CompiledTemplate,\n    TemplateBridgeCompileOptions,\n    TemplateBridge,\n} from './bridge';\n\n/**\n * @en Template query type list.\n * @ja テンプレート取得時に指定可能な型一覧\n */\nexport interface TemplateQueryTypeList {\n    engine: JST;\n    bridge: CompiledTemplate;\n}\n\n/**\n * @en Template query type definitions.\n * @ja テンプレート取得時に指定可能な型指定子\n */\nexport type TemplateQueryTypes = keyof TemplateQueryTypeList;\n\n/**\n * @en Template query options.\n * @ja テンプレート取得オプション\n */\nexport interface TemplateQueryOptions<T extends TemplateQueryTypes> extends LoadTemplateOptions, TemplateCompileOptions, TemplateBridgeCompileOptions {\n    /**\n     * `engine` / 'bridge'\n     */\n    type?: T;\n    /**\n     * @en template load callback. `bridge` mode allows localization here.\n     * @ja テンプレート読み込みコールバック. `bridge` モードではここでローカライズが可能\n     */\n    callback?: (src: string | HTMLTemplateElement) => string | HTMLTemplateElement | Promise<string | HTMLTemplateElement>;\n}\n\n/**\n * @en Get compiled JavaScript template.\n * @ja コンパイル済み JavaScript テンプレート取得\n *\n * @param selector\n *  - `en` The selector string of DOM.\n *  - `ja` DOM セレクタ文字列\n * @param options\n *  - `en` query options\n *  - `ja` クエリオプション\n */\nexport async function getTemplate<T extends TemplateQueryTypes = 'engine'>(\n    selector: string, options?: TemplateQueryOptions<T>\n): Promise<TemplateQueryTypeList[T]> {\n    const { type, url, noCache, callback } = Object.assign({ type: 'engine', noCache: false }, options);\n    let src = await loadTemplateSource(selector, { url, noCache });\n    if (!src) {\n        throw new URIError(`cannot specified template resource. { selector: ${selector},  url: ${url} }`);\n    }\n\n    if (isFunction(callback)) {\n        src = await callback(src);\n    }\n\n    switch (type) {\n        case 'engine':\n            return TemplateEngine.compile(src instanceof HTMLTemplateElement ? unescapeHTML(src.innerHTML) : src, options) as TemplateQueryTypeList[T];\n        case 'bridge':\n            return TemplateBridge.compile(src, options) as TemplateQueryTypeList[T];\n        default:\n            throw new TypeError(`[type: ${type}] is unknown.`);\n    }\n}\n"],"mappings":"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","ignoreList":[]}