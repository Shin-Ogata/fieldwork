{"version":3,"names":["location","safe","globalThis","document","requestAnimationFrame","requestIdleCallback","getWebDirectory","url","match","exec","webRoot","querySelector","getAttribute","href","toUrl","seed","includes","slice","async","waitFrame","frameCount","executor","Promise","_mapProvider","_mapSource","loadTemplateSource","selector","options","noCache","Object","assign","provider","queryTemplateProvider","html","request","text","template","createElement","innerHTML","fragment","content","replace","queryTemplateSource","key","context","target","source","HTMLTemplateElement","toTemplateElement","src","str","from","window","CustomEvent","isWindowContext","x","parent","Window","elementify","elements","trim","startsWith","endsWith","push","children","isFunction","getElementById","el","substring","body","querySelectorAll","nodeType","length","e","console","ensurePositiveNumber","value","isNumber","undefined","_scriptsAttrs","_factory","dom","utils","evaluate","code","doc","script","attr","val","setAttribute","getGlobalNamespace","head","appendChild","parentNode","removeChild","retval","_createIterableIterator","Symbol","DOMBase","constructor","self","this","index","elem","entries","isConnected","isNode","iterator","base","pointer","next","done","keys","values","_createIterableIterator$1","valueGenerator","current","isNodeElement","Node","ELEMENT_NODE","isNodeHTMLOrSVGElement","dataset","isNodeQueriable","isTypeElement","isTypeHTMLOrSVGElement","isTypeDocument","Document","isTypeWindow","isEmptySelector","isStringSelector","isNodeSelector","isDocumentSelector","isWindowSelector","isIterableSelector","nodeName","name","toLowerCase","getOffsetParent","node","offsetParent","$svg","$","cssProps","css","display","position","parentElement","isMultiSelectElement","multiple","isInputElement","DOMAttributes","addClass","className","classes","isArray","classList","add","removeClass","remove","hasClass","contains","toggleClass","force","operation","toggle","prop","isString","first","assignValue","removeAttr","String","removeAttribute","attrs","option","selectedOptions","selected","data","toTypedData","camelize","fromTypedData","removeData","props","map","k","winnow","validCallback","invalidCallback","noop","call","matches","validParentNode","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","validRetrieveNode","is","retrieveSiblings","sibling","filter","siblings","Set","setMixClassAttribute","DOMTraversing","get","Math","trunc","toArray","i","child","previousSibling","indexOf","last","$add","elems","not","delete","find","$selector","has","targets","$target","callback","each","begin","end","eq","closest","closests","c","parents","parentsUntil","reverse","nextSiblings","nextElementSibling","nextAll","nextUntil","prev","prevSiblings","previousElementSibling","prevAll","prevUntil","contents","contentDocument","childNodes","rootElement","documentElement","offsets","offset","isHTMLString","subject","toNodeSet","nodes","$dom","toNode","createTextNode","removeElement","keepListener","off","DOMManipulation","htmlString","textContent","append","appendTo","prepend","prependTo","before","insertBefore","after","nextSibling","insertAfter","wrapAll","$wrap","ownerDocument","clone","firstElementChild","wrapInner","$el","wrap","unwrap","replaceWith","empty","firstChild","detach","newContent","createDocumentFragment","replaceAll","getDefaultView","defaultView","getComputedStyleFrom","view","getComputedStyle","toNumber","parseFloat","_resolver","width","height","getPadding","style","type","getPropertyValue","getBorder","getMargin","manageSizeFor","classify","size","manageInnerSizeFor","isTextProp","newVal","setProperty","parseOuterSizeArgs","args","includeMargin","manageOuterSizeFor","getOffsetSize","margin","getOffsetPosition","getClientRects","top","left","rect","getBoundingClientRect","scrollY","scrollX","offsetWidth","DOMStyles","dasherize","propName","removeProperty","ensureChainCaseProperies","innerWidth","innerHeight","outerWidth","outerHeight","parentOffset","marginTop","mt","marginLeft","ml","$offsetParent","borderTopWidth","borderLeftWidth","coordinates","cssTop","cssLeft","curOffset","curPosition","needCalculatePosition","_eventContextMap","eventData","WeakMap","eventListeners","liveEventListeners","queryEventData","event","unshift","registerEventData","set","normalizeEventNamespaces","namespaces","split","main","shift","sort","join","splitEventNamespaces","combos","combination","signature","namespace","ns","resolveEventNamespaces","query","cookies","signatures","cookie","getEventListenersHandlers","ensure","registered","handlers","toCookie","opts","once","JSON","stringify","extractAllHandlers","parse","handler","proxy","extractNamespaceHandlers","names","n","namespaceFilter","_handlers","listener","parseEventArgs","capture","_noTrigger","eventShortcut","trigger","on","cloneEvent","dst","contexts","addEventListener","DOMEvents","events","handleLiveEvent","apply","handleEvent","combo","removeEventListener","origin","splice","onceHandler","eventArgs","arg","detail","bubbles","cancelable","dispatchEvent","transitionEnd","permanent","fireCallBack","animationEnd","hover","handlerIn","handlerOut","mouseenter","mouseleave","click","bind","dblclick","blur","focus","focusin","focusout","keyup","keydown","keypress","submit","contextmenu","change","mousedown","mousemove","mouseup","mouseout","mouseover","touchstart","touchend","touchmove","touchcancel","resize","scroll","withEvents","deep","cloneElement","cloneNode","srcElements","dstElements","queryTargetElement","isNodeDocument","execScroll","duration","easing","initialTop","scrollTop","initialLeft","scrollLeft","enableTop","enableLeft","notify","calcMetrics","enable","initialValue","max","new","initial","maxValue","newValue","min","metricsTop","metricsLeft","calcProgress","swing","progress","cos","PI","delta","startTime","Date","now","animate","elapse","progressCoeff","DOMScroll","scrollTo","parseArgs","_animContextMap","DOMEffects","params","result","animations","Map","finished","resolve","anim","all","then","cancel","animation","finish","DOMClass","mixins","super","static","isDOMClass","setup","fn","factory","prototype","create","navigator","screen","devicePixelRatio","globalContext","maybeTablet","queryPlatform","info","ios","android","androidChrome","desktop","mobile","phone","tablet","iphone","iphoneX","ipod","ipad","edge","ie","firefox","macos","windows","cordova","getGlobal","electron","userAgent","ua","platform","os","standalone","screenWidth","screenHeight","pixelRatio","maxTouchPoints","regex","osVersion","supportOrientation","consoleLogger","log","output","warn","error","Logger","concreteLogger","init","prefix","logger","debug","setDebug","bool","forward","deprecate","lvl","debugOnly","moduleName","baseLogger","EventEmitter","observers","forEach","l","emit","cloned","concat","observer","defer","res","rej","promise","reject","makeString","object","getLastOfPath","path","Empty","cleanKey","canNotTraverseDeeper","stack","hasOwnProperty","obj","setPath","getPath","getPathWithDefaults","defaultData","deepExtend","overwrite","regexEscape","_entityMap","escape","s","userAgentData","chars","deepFind","keySeparator","paths","j","p","mix","joinedPath","ResourceStore","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","getResource","lng","utils.getPath","addResource","silent","utils.setPath","addResources","resources","m","toString","addResourceBundle","pack","utils.deepExtend","removeResourceBundle","hasResourceBundle","getResourceBundle","compatibilityAPI","getDataByLanguage","hasLanguageSomeTranslations","v","toJSON","postProcessor","processors","addPostProcessor","module","handle","translator","processor","process","checkedLoadedFor","Translator","services","copy","a","t","utils.copy","changeLanguage","language","exists","interpolation","resolved","extractFromKey","nsSeparator","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","looksLikeObjectPath","possibleChars","r","RegExp","matched","test","ki","utils.looksLikeObjectPath","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","Array","returnDetails","appendNamespaceToCIMode","resUsedKey","usedKey","resExactUsedKey","exactUsedKey","resType","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","extendTranslation","usedDefault","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValue","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","defaultVariables","usedLng","usedNS","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsZeroSuffixLookup","ordinal","shouldUseIntlApi","needsContextHandling","codes","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","pluralSeparator","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","capitalize","string","charAt","toUpperCase","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","specialCases","lowerCaseLng","part","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","sets","nr","_rulesPluralsTypes","Number","deprecatedJsonVersions","suffixesOrder","zero","one","two","few","many","other","PluralResolver","compatibilityJSON","Intl","PluralRules","rules","createRules","numbers","plurals","addRule","getRule","needsPlural","rule","resolvedOptions","pluralCategories","getPluralFormsOfKey","pluralCategory1","pluralCategory2","pluralCategory","number","select","getSuffixRetroCompatible","idx","noAbs","abs","simplifyPluralSuffix","returnSuffix","Interpolator","format","escapeValue","iOpts","utils.escape","useRawValueToEscape","utils.regexEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","regexpStr","regexp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","replaces","regexSafe","handleFormat","utils.getPathWithDefaults","interpolationkey","f","missingInterpolationHandler","todos","safeValue","todo","matchedVar","temp","utils.makeString","lastIndex","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","reduce","Formatter","formats","NumberFormat","currency","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","mem","formatName","formatOptions","parseFormatStr","formatStr","optStr","opt","rest","isNaN","parseInt","formatted","valOptions","formatParams","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","err","q","pushPath","utils.pushPath","removePending","loadedKeys","read","fcName","tried","wait","setTimeout","prepareLoading","loadOne","fallbackValue","isUpdate","transformOptions","I18n","modules","external","bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","initImmediate","defOpts","preload","partialBundledLanguages","ret","tDescription","getDefaults","createClassOnDemand","ClassOrObject","formatter","lu","LanguageUtils","BackendConnector","languageDetector","detection","deferred","initializedStoreOnce","loadResources","usedCallback","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","isLanguageChangingTo","setLngProps","setLng","cacheUserLanguage","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","cloneInstance","mergedOptions","instance","createInstance","i18next","i18n","RESULT_CODE","CDP_DECLARE","DECLARE_ERROR_CODE","AjaxBackend","_options","_fallbackMap","initOptions","_services","loadPath","fallbackResources","resolveUrl","loadUrl","json","toResult","msg","message","ERROR_AJAX_RESPONSE","cause","status","extend","domOptions","selectorAttr","targetAttr","optionsAttr","useOptionsAttr","parseDefaultValueFromContent","customTagName","extendDefault","o","insert","method","translated","translatedWithWrap","$firstChild","substr","dataAttr","localize","targetSelector","$children","initializeI18N","noThrow","resourcePath","DomLocalizer","makeResult","ERROR_I18N_CORE_LAYER","getLanguage","WebStorage","_broker","EventBroker","_storage","storage","verify","Storage","kind","localStorage","dropUndefined","deserialize","oldVal","deepEqual","setItem","serialize","cc","removeItem","clear","webStorage","dataSyncNULL","NullDataSync","responce","resolveURL","_methodMap","update","patch","dataSyncREST","RestDataSync","sync","dataType","ERROR_MVC_INVALID_SYNC_PARAMS","ajax","parseContext","separator","model","isModel","idAttr","valid","id","genId","StorageDataSync","_separator","getStorage","setStorage","newStorage","setIdSeparator","newSeparator","oldSeparator","deepMerge","destroy","ERROR_MVC_INVALID_SYNC_STORAGE_DATA_NOT_FOUND","items","getItem","ids","ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY","saveEntries","queryEntries","entires","entry","old","createStorageDataSync","dataSyncSTORAGE","_default","defaultSync","newSync","oldSync","_defineAttributes","_updateAttributes","_validate","_changeHandler","_properties","RESULT_VALID_ATTRS","freeze","SUCCESS","Model","EventReceiver","attributes","ObservableObject","baseAttrs","prevAttrs","cid","luid","changeFired","defineProperty","_prevAttrs","_attrs","changedKeys","diff","changedAttrs","proto","enumerable","configurable","idAttribute","_baseAttrs","_changedAttrs","_cid","getBroker","hasListener","channel","channels","managed","unsubscribe","isValid","SUCCEEDED","validate","validateAttributes","FAILED","attribute","escapeHTML","setAttributes","suspend","resume","clearAttrs","deepCopy","hasChanged","isEmptyObject","changed","previous","isNew","response","syncMethod","resp","parseSaveArgs","isObject","serverAttrs","destruct","stopListening","fallback","_collator","Collator","sensitivity","numeric","getStringComparator","order","lhs","rhs","lhsProp","rhsProp","compare","getDateComparator","lhsDate","rhsDate","lhsValue","valueOf","rhsValue","getGenericComparator","getBooleanComparator","getNumberComparator","toComparator","sortKey","convertSortKeys","sortKeys","comparators","makePromise","editor","remap","records","getEditContext","token","ObservableArray","NOT_SUPPORTED","validOrders","orders","clearArray","appendArray","insertArray","reorderArray","work","reorders","unique","removeArray","equal","item","notEqual","greater","less","greaterEqual","lessEqual","like","toLocaleLowerCase","notLike","dateLessEqual","unit","date","computeDate","dateLessNotEqual","DynamicCondition","_operators","_combination","_sumKeys","_limit","_random","_sortKeys","seeds","operators","sumKeys","limit","random","fltr","cond","operator","searchItems","comparator","_limitCriteria","coeff","conditionalFix","condition","shuffle","criteria","limitCount","excess","total","queryFromCache","cached","baseIndex","auto","noSearch","results","ERROR_MVC_INVALID_ACCESS","tryCache","queryInfo","canCache","cache","queryItems","ensureOptions","queryFromProvider","receivedAll","hasCond","nextOpts","_prepareModel","_removeModels","_addReference","_removeReference","_onModelEvent","ensureSortOptions","comps","modelIdAttribute","ctor","getModelId","modelConstructor","isCollectionModel","spliceArray","at","_setOptions","merge","_addOptions","Collection","EventSource","_properties$2","modelOptions","queryOptions","constructOptions","byId","initQueryInfo","collection","prevId","getChangedIds","_defaultQueryOptions","_queryInfo","release","afterFilter","clearCache","models","_queryFilter","_afterFilter","filtered","_provider","_defaultParse","_lastQueryOptions","_comparators","ERROR_MVC_INVALID_COMPARATORS","parseFilterArgs","original","finalize","requery","fetch","isNil","singular","candidate","toAdd","toMerge","toRemove","modelSet","sortable","existing","orderChanged","some","changes","added","removed","merged","resetModelStore","save","mdl","EventPublisher","listenTo","partial","pos2key","pos","prepare","ERROR_MVC_EDIT_PERMISSION_DENIED","indices","makeListChanged","rangeFrom","rangeTo","to","insertedTo","_ensureElement","View","_properties$1","tagName","undelegateEvents","_tagName","drop","class","setElement","delegateEvents","hash","delegate","undelegate","global","trustedTypes","policy","createPolicy","createHTML","boundAttributeSuffix","marker","markerMatch","nodeMarker","d","createMarker","createComment","isPrimitive","isIterable","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","strings","_$litType$","svg","noChange","for","nothing","templateCache","render","container","partOwnerNode","_a","renderBefore","endNode","_b","ChildPart","_$setValue","walker","createTreeWalker","getTemplateHtml","attrNames","rawTextEndRegex","attrName","attrNameEndIndex","htmlResult","Template","nodeIndex","attrNameIndex","partCount","currentNode","svgElement","nextNode","hasAttributes","attrsToRemove","getAttributeNames","realName","statics","PropertyPart","BooleanAttributePart","EventPart","AttributePart","emptyScript","resolveDirective","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$initialize","_c","_d","_$resolve","TemplateInstance","_parts","_$disconnectableChildren","_$template","_$parent","_$isConnected","_clone","creationScope","importNode","partIndex","templatePart","ElementPart","_update","startNode","_$committedValue","_$startNode","_$endNode","__isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","ref","_$getTemplate","h","itemParts","itemPart","start","_$notifyConnectionChanged","setConnected","element","fill","valueIndex","noCommit","_commitValue","emptyStringForBooleanAttribute","newListener","oldListener","shouldRemoveListener","passive","shouldAddListener","host","_$LH","_boundAttributeSuffix","_marker","_markerMatch","_HTML_RESULT","_getTemplateHtml","_TemplateInstance","_isIterable","_resolveDirective","_ChildPart","_AttributePart","_BooleanAttributePart","_EventPart","_PropertyPart","_ElementPart","polyfillSupport","litHtmlPolyfillSupport","litHtmlVersions","PartType","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","directive","_$litDirective$","Directive","_partInfo","__part","__attributeIndex","_part","isTemplateResult","isSingleExpression","insertPart","containerPart","refPart","refNode","oldParent","parentChanged","newConnectionState","_$reparentDisconnectables","setChildPartValue","RESET_VALUE","setCommittedValue","getCommittedValue","removePart","clearPart","notifyChildrenConnectedChanged","removeDisconnectableFromParent","addDisconnectableToParent","installDisconnectAPI","reparentDisconnectables","newParent","notifyChildPartConnectedChanged","isClearingValue","fromPartIndex","AsyncDirective","_$notifyDirectiveConnectionChanged","isClearingDirective","reconnected","disconnected","setValue","newValues","Ref","lastElementForContextAndCallback","RefDirective","_ref","refChanged","_updateRefValue","_lastElementForRef","_element","_context","lastElementForCallback","PseudoWeakRef","disconnect","reconnect","deref","Pauser","_promise","_resolve","pause","AsyncReplaceDirective","__weakThis","__pauser","_mapper","mapper","__value","weakThis","pauser","iterable","forAwaitOf","_this","commitValue","_index","asyncReplace","asyncAppend","AsyncAppendDirective","partInfo","__childPart","newPart","CacheDirective","_templateCache","_value","partValue","childPart","cachedContainerPart","cachedPart","classMap","ClassMapDirective","classInfo","_previousClasses","_staticClasses","guard","GuardDirective","_previousValue","every","keyed","Keyed","live","LiveDirective","hasAttribute","generateMap","repeat","RepeatDirective","_getValuesAndKeys","keyFnOrTemplate","keyFn","oldParts","newKeys","_itemKeys","oldKeys","newParts","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","styleMap","StyleMapDirective","styleInfo","_previousStyleProperties","templateContent","TemplateContentDirective","_previousTemplate","UnsafeHTMLDirective","directiveName","_templateResult","raw","resultType","unsafeHTML","UnsafeSVGDirective","unsafeSVG","isPromise","_infinity","until","UntilDirective","__lastRenderedIndex","__values","previousValues","previousLength","directives","choose","cases","defaultCase","caseValue","ifDefined","joiner","startOrEnd","step","when","trueCase","falseCase","toTemplateStringsArray","createCustom","config","strTemplate","transform","tmpl2Parse","staticParts","insertionPoints","remainingTmplStr","startIndexOfIP","delimiter","iPTransformResult","transformIP","insertionPoint","lastStaticPart","ctx","iP","transformer","transformers","transformFunction","transformVariable","ctx2Value","ctx2MustacheString","mustacheStringyfy","variable","indexOfEndDelimiter","dataKey","unsafeVariable","isMustacheFalsy","NaN","falsy","parseSection","tmplStr","indexOfStartTagEnd","endTag","indexOfEndTagStart","innerTmpl","section","parsedSection","transformedInnerTmpl","sectionData","innerCtx","invertedSection","comment","customDelimiter","originalEndDeliLength","indexOfEndTag","newStartDeli","newEndDeli","xform","mustache","createMustacheTransformer","arg1","arg2","createTransform","unsafeVariableTransformer","sectionTransformer","invertedSectionTransformer","customDelimiterTransformer","createDefault","KEYWORDS","UNARY_OPERATORS","BINARY_OPERATORS","PRECEDENCE","_TWO_CHAR_OPS","_THREE_CHAR_OPS","Kind","precedence","_isIdentOrKeywordStart","ch","_isNumber","Tokenizer","input","_tokenStart","_input","_advance","nextToken","_next","_isQuote","_tokenizeString","_tokenizeIdentOrKeyword","_tokenizeNumber","_tokenizeDot","_tokenizeComma","_tokenizeColon","_isOperator","_tokenizeOperator","_isGrouper","_tokenizeGrouper","resetTokenStart","charCodeAt","_getValue","lookahead","_clearValue","_us","quoteChar","STRING","_match","group","KEYWORD","IDENTIFIER","INTEGER","_tokenizeFraction","DOT","COMMA","COLON","DECIMAL","op","OPERATOR","fromCharCode","GROUPER","expr","astFactory","Parser","_tokenizer","_ast","_parseExpression","_matches","_token","_kind","_parseUnary","_parsePrecedence","_parseArguments","invoke","indexExpr","_parseIndex","right","_makeInvokeOrGetter","_parseTernary","_parseBinary","getter","receiver","binary","_parseInteger","_parseDecimal","_parsePrimary","unary","trueExpr","falseExpr","ternary","keyword","_parseInvokeOrIdentifier","_parseString","_parseParen","_parseMap","_parseList","literal","identifier","_parseIdentifier","paren","_BINARY_OPERATORS","b","_UNARY_OPERATORS","EvalAstFactory","scope","getIds","idents","_scope","g","argValues","argument","expressionCache","toCamelCase","_","p1","getSingleValue","ast","expression","defaultHandlers","if","renderers","ifAttribute","evaluateTemplate","repeatAttribute","litTemplate","getLitTemplate","itemModel","templateResult","prepareTemplate","superTemplate","templateRenderers","superLitTemplate","superRenderers","superCallRenderer","litTemplateCache","makeLitTemplate","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","elementsToRemove","superRenderer","superCallTemplate","renderer","attributeNames","attributeName","attributeValue","splitValue","exprs","exprText","_renderers","TEXT_NODE","textNode","newTextNode","Text","createStampinoTransformer","TypeError","_builtins","stampino","TemplateBridge","_transformer","engine","jst","newTransformer","oldTransformer","builtins","tokens","lexer","char","pattern","prefixes","defaultPattern","escapeString","tryConsume","mustConsume","nextType","consumeText","modifier","open","name_1","pattern_1","tokensToFunction","reFlags","flags","encode","optional","segment","typeOfMessage","regexpToFunction","re","decode","pathname","_loop_1","sensitive","tokensToRegexp","strict","_e","_f","endsWithRe","delimiterRe","route","_i","tokens_1","mod","endToken","isEndDelimited","pathToRegexp","regexpToRegexp","groupsRegex","execResult","arrayToRegexp","stringToRegexp","path2regexp","compile","normalizeId","createData","createUncancellableDeferred","uncancellable","Deferred","HistoryStack","_stack","distance","array","clearForward","candidates","direct","toId","fromId","toIndex","fromIndex","direction","RangeError","noopStack","pushStack","replaceStack","seekStack","dispose","$signature","SessionHistory","_window","_mode","_popStateHandler","_dfGo","windowContxt","mode","onPopState","prevState","oldURL","setIndex","backToSesssionOrigin","newURL","additional","df","newId","oldId","postproc","dispatchChangeInfo","back","go","triggerRefresh","history","updateState","toHash","toPath","newState","oldState","promises","publish","nextState","$cdp","setDispatchInfo","PopStateEvent","waitPopState","ev","replaceState","suppressEventListenerScope","st","parseDispatchInfo","oldData","newData","CancelToken","catch","requested","reason","rollbackHistory","createSessionHistory","MemoryHistory","post","onChangeState","createMemoryHistory","toRouteContext","router","navOptions","fromNavigate","decideTransitionDirection","changeInfo","waitForEffect","durationSec","race","sleep","processPageTransition","fromClass","activeClass","toClass","animationDuration","getAnimationSec","transitionDuration","getTransitionSec","RouterContext","_routes","_history","_$el","_raf","_historyChangingHandler","_historyRefreshHandler","_errorHandler","_cssPrefix","_transitionSettings","_lastRoute","_prevRoute","_tempTransitionParams","routes","initialPath","cssPrefix","transition","ERROR_MVC_ROUTER_ELEMENT_NOT_FOUND","prepareHistory","onHistoryChanging","onHistoryRefresh","onHandleError","onAnchorClicked","register","currentRoute","isInSubFlow","findSubFlowParams","refresh","flatten","parentPath","nested","paramKeys","toRouteContextParameters","findRouteContextParameter","ERROR_MVC_ROUTER_NAVIGATE_FAILED","intent","toQueryStrings","buildNavigateUrl","noNavigate","stacks","page","ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED","subflow","evaluationSubFlowParams","navigate","additionalDistance","additinalStacks","pushPageStack","setTransitionSettings","newSettings","oldSettings","baseId","ERROR_MVC_ROUTER_INVALID_SUBFLOW_BASE_URL","makeRouteChangeInfo","triggerPageCallback","nextRoute","prevRoute","parseUrlQuery","param","convertUrlParamType","parseUrlParams","pageNext","$elNext","pagePrev","$elPrev","prepareChangeContext","transitionPage","updateChangeContext","component","componentOptions","ensureRouterPageInstance","$template","ensureRouterPageTemplate","customEnterFromClass","customEnterActiveClass","customEnterToClass","customLeaveFromClass","customLeaveActiveClass","customLeaveToClass","enterFromClass","enterActiveClass","enterToClass","leaveFromClass","leaveActiveClass","leaveToClass","beginTransition","endTransition","cacheLv","handled","changePage","isResult","preventDefault","createRouter","waitDocumentEventReady","_initialPages","Application","_router","_ready","_extension","win","initialize","ready","activePage","orientation","$window","extension","splash","waitForReady","documentEventReady","documentEventBackButton","onGlobalError","onGlobalUnhandledRejection","readyState","waitDomContentLoaded","onHandleBackKey","onHandleOrientationChanged","onPageLoaded","angle","_appContext","getConfig","ERROR_APP_CONTEXT_NEED_TO_BE_INITIALIZED","clearI18NSettings","ArrayCursor","_array","_bof","_eof","initialIndex","isBOF","isEOF","moveFirst","moveLast","moveNext","movePrevious","seek","findIndex","PageView","active","hasPartialClassName","_route","onPageInit","thisPage","onPageMounted","onPageBeforeEnter","prevPage","onPageAfterEnter","onPageBeforeLeave","nextPage","onPageAfterLeave","onPageUnmounted","onPageRemoved","pageInit","pageMounted","pageBeforeEnter","pageAfterEnter","pageBeforeLeave","pageAfterLeave","pageUnmounted","pageRemoved","appendCollection","clearCollection","clearTemplateCache","defaultCollatorProvider","newProvider","oldProvider","disposeMemoryHistory","disposeSessionHistory","getTemplate","URIError","TemplateEngine","unescapeHTML","insertCollection","removeCollection","reorderCollection","resetMemoryHistory","resetSessionHistory","toTemplateString","waitIdle"],"sources":["cdp:///@cdp/lib-web/web-utils/ssr.ts","cdp:///@cdp/lib-web/web-utils/web-root.ts","cdp:///@cdp/lib-web/web-utils/wait.ts","cdp:///@cdp/lib-web/web-utils/template-loader.ts","cdp:///@cdp/lib-web/dom/ssr.ts","cdp:///@cdp/lib-web/dom/utils.ts","cdp:///@cdp/lib-web/dom/static.ts","cdp:///@cdp/lib-web/dom/base.ts","cdp:///@cdp/lib-web/dom/attributes.ts","cdp:///@cdp/lib-web/dom/traversing.ts","cdp:///@cdp/lib-web/dom/manipulation.ts","cdp:///@cdp/lib-web/dom/styles.ts","cdp:///@cdp/lib-web/dom/events.ts","cdp:///@cdp/lib-web/dom/scroll.ts","cdp:///@cdp/lib-web/dom/effects.ts","cdp:///@cdp/lib-web/dom/class.ts","cdp:///@cdp/lib-web/dom/index.ts","cdp:///@cdp/lib-web/environment/ssr.ts","cdp:///@cdp/lib-web/environment/platform.ts","cdp:///@cdp/lib-web/extension-i18n/i18next/src/logger.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/EventEmitter.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/utils.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/ResourceStore.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/postProcessor.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/Translator.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/LanguageUtils.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/PluralResolver.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/Interpolator.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/Formatter.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/BackendConnector.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/defaults.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/i18next.js","cdp:///@cdp/lib-web/extension-i18n/i18next/src/index.js","cdp:///@cdp/lib-web/extension-i18n/index.ts","cdp:///@cdp/lib-web/i18n/result-code-defs.ts","cdp:///@cdp/lib-web/i18n/ssr.ts","cdp:///@cdp/lib-web/i18n/plugin/ajax-backend.ts","cdp:///@cdp/lib-web/i18n/plugin/dom-localizer.ts","cdp:///@cdp/lib-web/i18n/core.ts","cdp:///@cdp/lib-web/web-storage/web-storage.ts","cdp:///@cdp/lib-web/data-sync/result-code-defs.ts","cdp:///@cdp/lib-web/data-sync/null.ts","cdp:///@cdp/lib-web/data-sync/internal.ts","cdp:///@cdp/lib-web/data-sync/rest.ts","cdp:///@cdp/lib-web/data-sync/storage.ts","cdp:///@cdp/lib-web/data-sync/settings.ts","cdp:///@cdp/lib-web/model/result-code-defs.ts","cdp:///@cdp/lib-web/model/base.ts","cdp:///@cdp/lib-web/collection/result-code-defs.ts","cdp:///@cdp/lib-web/collection/utils/comparator.ts","cdp:///@cdp/lib-web/collection/utils/array-editor.ts","cdp:///@cdp/lib-web/collection/query/dynamic-filters.ts","cdp:///@cdp/lib-web/collection/query/dynamic-condition.ts","cdp:///@cdp/lib-web/collection/query/query.ts","cdp:///@cdp/lib-web/collection/base.ts","cdp:///@cdp/lib-web/collection/collection-editor.ts","cdp:///@cdp/lib-web/view/ssr.ts","cdp:///@cdp/lib-web/view/base.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/lit-html.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directive.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directive-helpers.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/async-directive.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/ref.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/private-async-helpers.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/async-replace.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/async-append.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/cache.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/class-map.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/guard.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/keyed.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/live.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/repeat.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/style-map.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/template-content.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/unsafe-html.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/unsafe-svg.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/until.ts","cdp:///@cdp/lib-web/extension-template/index.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/choose.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/if-defined.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/join.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/map.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/range.ts","cdp:///@cdp/lib-web/extension-template/lit-html/src/directives/when.ts","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/lit-transformer.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/helper/dataHelper.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/variableTransformer.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/unsafeVariable.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/helper/isMustacheFalsy.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/helper/sectionHelper.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/section.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/invertedSection.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/comment.js","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/transformers/customDelimiter.js","cdp:///@cdp/lib-web/extension-template-bridge/bridge-mustache.ts","cdp:///@cdp/lib-web/extension-template-bridge/lit-transformer/src/lit-transformer-configuredOutOfTheBox.js","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/constants.ts","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/tokenizer.ts","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/parser.ts","cdp:///@cdp/lib-web/extension-template-bridge/jexpr/src/lib/eval.ts","cdp:///@cdp/lib-web/extension-template-bridge/stampino/src/stampino.ts","cdp:///@cdp/lib-web/extension-template-bridge/bridge-stampino.ts","cdp:///@cdp/lib-web/template/bridge.ts","cdp:///@cdp/lib-web/extension-path2regexp/path-to-regexp/src/index.ts","cdp:///@cdp/lib-web/extension-path2regexp/index.ts","cdp:///@cdp/lib-web/router/result-code-defs.ts","cdp:///@cdp/lib-web/router/ssr.ts","cdp:///@cdp/lib-web/router/history/internal.ts","cdp:///@cdp/lib-web/router/history/session.ts","cdp:///@cdp/lib-web/router/history/memory.ts","cdp:///@cdp/lib-web/router/router/internal.ts","cdp:///@cdp/lib-web/router/router/core.ts","cdp:///@cdp/lib-web/app/result-code-defs.ts","cdp:///@cdp/lib-web/app/ssr.ts","cdp:///@cdp/lib-web/app/internal.ts","cdp:///@cdp/lib-web/app/context.ts","cdp:///@cdp/lib-web/app/page-view.ts","cdp:///@cdp/lib-web/collection/utils/array-cursor.ts","cdp:///@cdp/lib-web/template/loader.ts"],"sourcesContent":["import { safe } from '@cdp/core-utils';\n\n/** @internal */ export const location              = safe(globalThis.location);\n/** @internal */ export const document              = safe(globalThis.document);\n/** @internal */ export const requestAnimationFrame = safe(globalThis.requestAnimationFrame);\n/** @internal */ export const requestIdleCallback   = safe(globalThis.requestIdleCallback);\n","import { location, document } from './ssr';\n\n/**\n * @en Get the directory to which `url` belongs.\n * @ja æå® `url` ã®æå±ãããã£ã¬ã¯ããªãåå¾\n *\n * @param url\n *  - `en` target URL\n *  - `ja` å¯¾è±¡ã® URL\n */\nexport const getWebDirectory = (url: string): string => {\n    const match = /(.+\\/)([^/]*#[^/]+)?/.exec(url);\n    return (match && match[1]) || '';\n};\n\n/**\n * @en Accsessor for Web root location <br>\n *     Only the browser environment will be an allocating place in index.html, and becomes effective.\n * @ja Web root location ã¸ã®ã¢ã¯ã»ã¹ <br>\n *     index.html ã®éç½®å ´æã¨ãªãããã©ã¦ã¶ç°å¢ã®ã¿æå¹ã¨ãªã.\n */\nexport const webRoot: string = getWebDirectory(document.querySelector('base')?.getAttribute('href') || location.href);\n\n/**\n * @en Convert to an absolute url string if given a relative path. <br>\n *     If you want to access to Assets and in spite of the script location, the function is available.\n * @ja ç¸å¯¾ãã¹ãæå®ããã¦ããå ´åã¯ãçµ¶å¯¾URLæå­åã«å¤æ <br>\n *     js ã®éç½®ã«ä¾å­ãããã¨ãªã `assets` ã¢ã¯ã»ã¹ãããã¨ãã«ä½¿ç¨ãã.\n *\n * @see https://stackoverflow.com/questions/2188218/relative-paths-in-javascript-in-an-external-file\n *\n * @example <br>\n *\n * ```ts\n *  console.log(toUrl('/res/data/collection.json'));\n *  // \"http://localhost:8080/app/res/data/collection.json\"\n * ```\n *\n * @param seed\n *  - `en` set relative path from [[webRoot]].\n *  - `ja` [[webRoot]] ããã®ç¸å¯¾ãã¹ãæå®\n */\nexport const toUrl = (seed: string): string => {\n    if (seed?.includes('://')) {\n        return seed;\n    } else if (null != seed?.[0]) {\n        return ('/' === seed[0]) ? webRoot + seed.slice(1) : webRoot + seed;\n    } else {\n        return webRoot;\n    }\n};\n","import type { UnknownFunction } from '@cdp/core-utils';\nimport { requestAnimationFrame, requestIdleCallback } from './ssr';\n\n/**\n * @en Get the timing that does not block the rendering process etc.\n * @ja ã¬ã³ããªã³ã°å¦çç­ããã­ãã¯ããªãã¿ã¤ãã³ã°ãåå¾\n *\n * @example <br>\n *\n * ```ts\n *  await waitFrame();\n * ```\n *\n * @param frameCount\n *  - `en` wait frame count.\n *  - `ja` å¦çå¾ã¡ãè¡ããã¬ã¼ã æ°\n * @param executor\n *  - `en` wait frame executor.\n *  - `ja` å¦çå¾ã¡ãè¡ãå®è¡é¢æ°\n */\nexport async function waitFrame(frameCount = 1, executor: UnknownFunction = requestAnimationFrame): Promise<void> {\n    while (frameCount-- > 0) {\n        await new Promise<void>(executor);\n    }\n}\n\n/**\n * @en Wait until the current thread is idle.\n * @ja ç¾å¨ã®ã¹ã¬ãããã¢ã¤ãã«ç¶æã«ãªãã¾ã§å¾æ©\n *\n * @example <br>\n *\n * ```ts\n *  await waitIdle();\n * ```\n *\n */\nexport function waitIdle(options?: IdleRequestOptions): Promise<void> {\n    return new Promise<void>(resolve => requestIdleCallback(() => resolve(), options));\n}\n","import { AjaxGetRequestShortcutOptions, request } from '@cdp/ajax';\nimport { document } from './ssr';\n\n/** @internal */\ninterface TemplateProvider {\n    fragment: DocumentFragment;\n    html: string;\n}\n\n/** @internal */\ninterface TemplateProviderMap {\n    [url: string]: TemplateProvider;\n}\n\n/** @internal */\ninterface TemplateSourceMap {\n    [key: string]: string | HTMLTemplateElement;\n}\n\n/** @internal */ let _mapProvider: TemplateProviderMap = {};\n/** @internal */ let _mapSource: TemplateSourceMap = {};\n\n/** @internal */\nfunction queryTemplateSource(selector: string, provider: TemplateProvider | null, noCache: boolean): string | HTMLTemplateElement | undefined {\n    const { fragment, html } = provider || {};\n    const key = `${selector}${html ? `::${html}` : ''}`;\n    if (_mapSource[key]) {\n        return _mapSource[key];\n    }\n    const context = fragment || document;\n    const target = context.querySelector(selector);\n    const source = target instanceof HTMLTemplateElement ? target : target?.innerHTML;\n    !noCache && source && (_mapSource[key] = source);\n    return source;\n}\n\n/** @internal */\nasync function queryTemplateProvider(url: string | undefined, noCache: boolean): Promise<TemplateProvider | null> {\n    if (!url) {\n        return null;\n    }\n    if (_mapProvider[url]) {\n        return _mapProvider[url];\n    } else {\n        const html = await request.text(url);\n        const template = document.createElement('template');\n        template.innerHTML = html;\n        const fragment = template.content;\n        const provider = { fragment, html: html.replace(/\\s/gm, '') };\n        !noCache && fragment && (_mapProvider[url] = provider);\n        return provider;\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Load template options.\n * @ja ã­ã¼ããã³ãã¬ã¼ããªãã·ã§ã³\n */\nexport interface LoadTemplateOptions extends AjaxGetRequestShortcutOptions {\n    /**\n     * @en The template acquisition URL. if not specified the template will be searched from `document`.\n     * @ja ãã³ãã¬ã¼ãåå¾å URL. æå®ããªãå ´åã¯ `document` ããæ¤ç´¢\n     */\n    url?: string;\n    /**\n     * @en If you don't want to cache the template in memory, given `true`.\n     * @ja ãã³ãã¬ã¼ããã¡ã¢ãªã«ã­ã£ãã·ã¥ããªãå ´åã¯ `true` ãæå®\n     */\n    noCache?: boolean;\n}\n\n/**\n * @en Clear template's resources.\n * @ja ãã³ãã¬ã¼ããªã½ã¼ã¹ã­ã£ãã·ã¥ã®åé¤\n */\nexport function clearTemplateCache(): void {\n    _mapProvider = {};\n    _mapSource   = {};\n}\n\n/**\n * @en Load template source.\n * @ja ãã³ãã¬ã¼ãã½ã¼ã¹ã®ã­ã¼ã\n *\n * @param selector\n *  - `en` The selector string of DOM.\n *  - `ja` DOM ã»ã¬ã¯ã¿æå­å\n * @param options\n *  - `en` load options\n *  - `ja` ã­ã¼ããªãã·ã§ã³\n */\nexport async function loadTemplateSource(selector: string, options?: LoadTemplateOptions): Promise<string | HTMLTemplateElement | undefined> {\n    const { url, noCache } = Object.assign({ noCache: false }, options);\n    const provider = await queryTemplateProvider(url, noCache);\n    return queryTemplateSource(selector, provider, noCache);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Forced conversion to HTML string.\n * @ja HTML æå­åã«å¼·å¶å¤æ\n *\n * @param src\n *  - `en` `HTMLTemplateElement` instance or HTML string\n *  - `ja` `HTMLTemplateElement` ã¤ã³ã¹ã¿ã³ã¹ã¾ãã¯ HTML æå­å\n */\nexport function toTemplateString(src: string | HTMLTemplateElement | undefined): string | undefined {\n    return src instanceof HTMLTemplateElement ? src.innerHTML : src;\n}\n\n/**\n * @en Forced conversion to `HTMLTemplateElement`.\n * @ja `HTMLTemplateElement` ã«å¼·å¶å¤æ\n *\n * @param src\n *  - `en` `HTMLTemplateElement` instance or HTML string\n *  - `ja` `HTMLTemplateElement` ã¤ã³ã¹ã¿ã³ã¹ã¾ãã¯ HTML æå­å\n */\nexport function toTemplateElement(src: string | HTMLTemplateElement | undefined): HTMLTemplateElement | undefined {\n    const from = (str: string): HTMLTemplateElement => {\n        const template = document.createElement('template');\n        template.innerHTML = str;\n        return template;\n    };\n    return 'string' === typeof src ? from(src) : src;\n}\n","import { safe } from '@cdp/core-utils';\n\n/*\n * SSR (Server Side Rendering) ç°å¢ã«ããã¦ããªãã¸ã§ã¯ãç­ã®å­å¨ãä¿è¨¼ãã\n */\n\n/** @internal */ export const window                = safe(globalThis.window);\n/** @internal */ export const document              = safe(globalThis.document);\n/** @internal */ export const CustomEvent           = safe(globalThis.CustomEvent);\n/** @internal */ export const requestAnimationFrame = safe(globalThis.requestAnimationFrame);\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Nil,\n    isNumber,\n    isFunction,\n    className,\n    getGlobalNamespace,\n} from '@cdp/core-utils';\nimport { document } from './ssr';\n\nexport type ElementBase = Node | Window;\nexport type ElementResult<T> = T extends ElementBase ? T : HTMLElement;\nexport type SelectorBase = Node | Window | string | Nil;\nexport type ElementifySeed<T extends SelectorBase = HTMLElement> = T | (T extends ElementBase ? T[] : never) | NodeListOf<T extends Node ? T : never>;\nexport type QueryContext = ParentNode & Partial<NonElementParentNode>;\n\n/**\n * @en Check the value-type is Window.\n * @ja Window åã§ãããå¤å®\n *\n * @param x\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isWindowContext(x: unknown): x is Window {\n    return (x as Window)?.parent instanceof Window;\n}\n\n/**\n * @en Create Element array from seed arg.\n * @ja æå®ããã Seed ãã Element éåãä½æ\n *\n * @param seed\n *  - `en` Object(s) or the selector string which becomes origin of Element array.\n *  - `ja` Element éåã®ãã¨ã«ãªããªãã¸ã§ã¯ã(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n * @param context\n *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n *  - `ja` ä½¿ç¨ãã `Document` ã³ã³ãã­ã¹ããæå®. æªæå®ã®å ´åã¯ç°å¢ã®æ¢å®å¤ãä½¿ç¨ããã.\n * @returns Element[] based Node or Window object.\n */\nexport function elementify<T extends SelectorBase>(seed?: ElementifySeed<T>, context?: QueryContext | null): ElementResult<T>[] {\n    if (!seed) {\n        return [];\n    }\n\n    context = context || document;\n    const elements: Element[] = [];\n\n    try {\n        if ('string' === typeof seed) {\n            const html = seed.trim();\n            if (html.startsWith('<') && html.endsWith('>')) {\n                // markup\n                const template = document.createElement('template');\n                template.innerHTML = html;\n                elements.push(...template.content.children);\n            } else {\n                const selector = html;\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                if (isFunction(context.getElementById) && ('#' === selector[0]) && !/[ .<>:~]/.exec(selector)) {\n                    // pure ID selector\n                    const el = context.getElementById(selector.substring(1));\n                    el && elements.push(el);\n                } else if ('body' === selector) {\n                    // body\n                    elements.push(document.body);\n                } else {\n                    // other selectors\n                    elements.push(...context.querySelectorAll(selector));\n                }\n            }\n        } else if ((seed as Node).nodeType || isWindowContext(seed)) {\n            // Node/element, Window\n            elements.push(seed as Node as Element);\n        } else if (0 < (seed as T[]).length && (seed[0].nodeType || isWindowContext(seed[0]))) {\n            // array of elements or collection of DOM\n            elements.push(...(seed as Node[] as Element[]));\n        }\n    } catch (e) {\n        console.warn(`elementify(${className(seed)}, ${className(context)}), failed. [error:${e}]`);\n    }\n\n    return elements as ElementResult<T>[];\n}\n\n/**\n * @en Ensure positive number, if not returned `undefined`.\n * @en æ­£å¤ã®ä¿è¨¼. ç°ãªãå ´å `undefined` ãè¿å´\n */\nexport function ensurePositiveNumber(value: number | undefined): number | undefined {\n    return (isNumber(value) && 0 <= value) ? value : undefined;\n}\n\n/**\n * @en For easing `swing` timing-function.\n * @ja easing `swing` ç¨ã¿ã¤ãã³ã°é¢æ°\n *\n * @reference\n *  - https://stackoverflow.com/questions/9245030/looking-for-a-swing-like-easing-expressible-both-with-jquery-and-css3\n *  - https://stackoverflow.com/questions/5207301/jquery-easing-functions-without-using-a-plugin\n *\n * @param progress [0 - 1]\n */\nexport function swing(progress: number): number {\n    return 0.5 - (Math.cos(progress * Math.PI) / 2);\n}\n\n/**\n * @en [[evaluate]]() options.\n * @ja [[evaluate]]() ã«æ¸¡ããªãã·ã§ã³\n */\nexport interface EvalOptions {\n    type?: string;\n    src?: string;\n    nonce?: string;\n    noModule?: string;\n}\n\n/** @internal */\nconst _scriptsAttrs: (keyof EvalOptions)[] = [\n    'type',\n    'src',\n    'nonce',\n    'noModule',\n];\n\n/**\n * @en The `eval` function by which script `nonce` attribute considered under the CSP condition.\n * @ja CSP ç°å¢ã«ããã¦ã¹ã¯ãªãã `nonce` å±æ§ãèæ®ãã `eval` å®è¡é¢æ°\n */\nexport function evaluate(code: string, options?: Element | EvalOptions, context?: Document | null): any {\n    const doc: Document = context || document;\n    const script = doc.createElement('script');\n    script.text = `CDP_DOM_EVAL_RETURN_VALUE_BRIDGE = (() => { return ${code}; })();`;\n\n    if (options) {\n        for (const attr of _scriptsAttrs) {\n            const val = options[attr] || ((options as Element).getAttribute && (options as Element).getAttribute(attr));\n            if (val) {\n                script.setAttribute(attr, val);\n            }\n        }\n    }\n\n    // execute\n    try {\n        getGlobalNamespace('CDP_DOM_EVAL_RETURN_VALUE_BRIDGE');\n        doc.head.appendChild(script).parentNode!.removeChild(script); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        const retval = globalThis['CDP_DOM_EVAL_RETURN_VALUE_BRIDGE'];\n        return retval;\n    } finally {\n        delete globalThis['CDP_DOM_EVAL_RETURN_VALUE_BRIDGE'];\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n */\n\nimport {\n    ElementBase,\n    SelectorBase,\n    QueryContext,\n    EvalOptions,\n    isWindowContext,\n    elementify,\n    evaluate,\n} from './utils';\nimport {\n    DOM,\n    DOMPlugin,\n    DOMClass,\n    DOMSelector,\n    DOMResult,\n    DOMIterateCallback,\n} from './class';\n\ndeclare namespace dom {\n    let fn: DOMClass;\n}\n\nexport type DOMFactory = <T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null) => DOMResult<T>;\n\n/** @internal */ let _factory!: DOMFactory;\n\n/**\n * @en Create [[DOM]] instance from `selector` arg.\n * @ja æå®ããã `selector` [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãä½æ\n *\n * @param selector\n *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n *  - `ja` [[DOM]] ã®ãã¨ã«ãªããªãã¸ã§ã¯ã(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n * @param context\n *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n *  - `ja` ä½¿ç¨ãã `Document` ã³ã³ãã­ã¹ããæå®. æªæå®ã®å ´åã¯ç°å¢ã®æ¢å®å¤ãä½¿ç¨ããã.\n * @returns [[DOM]] instance.\n */\nfunction dom<T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null): DOMResult<T> {\n    return _factory(selector, context);\n}\n\ndom.utils = {\n    isWindowContext,\n    elementify,\n    evaluate,\n};\n\n/** @internal å¾ªç°åç§åé¿ã®ããã®éå»¶ã³ã³ã¹ãã©ã¯ã·ã§ã³ã¡ã½ãã */\nexport function setup(fn: DOMClass, factory: DOMFactory): void {\n    _factory = factory;\n    dom.fn = fn;\n}\n\nexport {\n    ElementBase,\n    SelectorBase,\n    QueryContext,\n    EvalOptions,\n    DOM,\n    DOMPlugin,\n    DOMSelector,\n    DOMResult,\n    DOMIterateCallback,\n    dom,\n};\n","import { Nil } from '@cdp/core-utils';\nimport { isWindowContext } from './utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    DOM,\n    DOMSelector,\n    dom as $,\n} from './static';\n\n/** @internal */ const _createIterableIterator = Symbol('create-iterable-iterator');\n\n/**\n * @en Base abstraction class of [[DOMClass]]. This class provides iterator methods.\n * @ja [[DOMClass]] ã®åºåºæ½è±¡ã¯ã©ã¹. iterator ãæä¾.\n */\nexport class DOMBase<T extends ElementBase> implements ArrayLike<T>, Iterable<T> {\n    /**\n     * @en number of `Element`\n     * @ja ååãã `Element` æ°\n     */\n    readonly length: number;\n\n    /**\n     * @en `Element` accessor\n     * @ja `Element` ã¸ã®æ·»ãå­ã¢ã¯ã»ã¹\n     */\n    readonly [n: number]: T;\n\n    /**\n     * constructor\n     * \n     * @param elements\n     *  - `en` operation targets `Element` array.\n     *  - `ja` æä½å¯¾è±¡ã® `Element` éå\n     */\n    constructor(elements: T[]) {\n        const self: DOMAccess<T> = this;\n        for (const [index, elem] of elements.entries()) {\n            self[index] = elem;\n        }\n        this.length = elements.length;\n    }\n\n    /**\n     * @en Check target is `Node` and connected to` Document` or `ShadowRoot`.\n     * @ja å¯¾è±¡ã `Node` ã§ãããã¤ `Document` ã¾ãã¯ `ShadowRoot` ã«æ¥ç¶ããã¦ãããå¤å®\n     *\n     * @param el\n     *  - `en` [[ElementBase]] instance\n     *  - `ja` [[ElementBase]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    get isConnected(): boolean {\n        for (const el of this) {\n            if (isNode(el) && el.isConnected) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: Iterable<T>\n\n    /**\n     * @en Iterator of [[ElementBase]] values in the array.\n     * @ja æ ¼ç´ãã¦ãã [[ElementBase]] ã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    [Symbol.iterator](): Iterator<T> {\n        const iterator = {\n            base: this,\n            pointer: 0,\n            next(): IteratorResult<T> {\n                if (this.pointer < this.base.length) {\n                    return {\n                        done: false,\n                        value: this.base[this.pointer++],\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    };\n                }\n            },\n        };\n        return iterator as Iterator<T>;\n    }\n\n    /**\n     * @en Returns an iterable of key(index), value([[ElementBase]]) pairs for every entry in the array.\n     * @ja key(index), value([[ElementBase]]) éåã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    entries(): IterableIterator<[number, T]> {\n        return this[_createIterableIterator]((key: number, value: T) => [key, value]);\n    }\n\n    /**\n     * @en Returns an iterable of keys(index) in the array.\n     * @ja key(index) éåã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    keys(): IterableIterator<number> {\n        return this[_createIterableIterator]((key: number) => key);\n    }\n\n    /**\n     * @en Returns an iterable of values([[ElementBase]]) in the array.\n     * @ja values([[ElementBase]]) éåã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    values(): IterableIterator<T> {\n        return this[_createIterableIterator]((key: number, value: T) => value);\n    }\n\n    /** @internal common iterator create function */\n    private [_createIterableIterator]<R>(valueGenerator: (key: number, value: T) => R): IterableIterator<R> {\n        const context = {\n            base: this,\n            pointer: 0,\n        };\n\n        const iterator: IterableIterator<R> = {\n            next(): IteratorResult<R> {\n                const current = context.pointer;\n                if (current < context.base.length) {\n                    context.pointer++;\n                    return {\n                        done: false,\n                        value: valueGenerator(current, context.base[current]),\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    };\n                }\n            },\n            [Symbol.iterator](): IterableIterator<R> {\n                return this;\n            },\n        };\n\n        return iterator;\n    }\n}\n\n/**\n * @en Base interface for DOM Mixin class.\n * @ja DOM Mixin ã¯ã©ã¹ã®æ¢å®ã¤ã³ã¿ã¼ãã§ã¤ã¹\n */\nexport interface DOMIterable<T extends ElementBase = HTMLElement> extends Partial<DOMBase<T>> {\n    length: number;\n    [n: number]: T;\n    [Symbol.iterator]: () => Iterator<T>;\n}\n\n/**\n * @internal DOM access\n *\n * @example <br>\n *\n * ```ts\n *   const dom: DOMAccess<TElement> = this as DOMIterable<TElement>;\n * ```\n */\nexport interface DOMAccess<T extends ElementBase = HTMLElement> extends Partial<DOM<T>> { } // eslint-disable-line @typescript-eslint/no-empty-interface\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check target is `Node`.\n * @ja å¯¾è±¡ã `Node` ã§ãããå¤å®\n *\n * @param el\n *  - `en` [[ElementBase]] instance\n *  - `ja` [[ElementBase]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isNode(el: unknown): el is Node {\n    return !!(el && (el as Node).nodeType);\n}\n\n/**\n * @en Check target is `Element`.\n * @ja å¯¾è±¡ã `Element` ã§ãããå¤å®\n *\n * @param el\n *  - `en` [[ElementBase]] instance\n *  - `ja` [[ElementBase]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isNodeElement(el: ElementBase | Nil): el is Element {\n    return isNode(el) && (Node.ELEMENT_NODE === el.nodeType);\n}\n\n/**\n * @en Check target is `HTMLElement` or `SVGElement`.\n * @ja å¯¾è±¡ã `HTMLElement` ã¾ãã¯ `SVGElement` ã§ãããå¤å®\n *\n * @param el\n *  - `en` [[ElementBase]] instance\n *  - `ja` [[ElementBase]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isNodeHTMLOrSVGElement(el: ElementBase | Nil): el is HTMLElement | SVGElement {\n    return isNodeElement(el) && (null != (el as HTMLElement).dataset);\n}\n\n/**\n * @en Check target is `Element` or `Document`.\n * @ja å¯¾è±¡ã `Element` ã¾ãã¯ `Document` ã§ãããå¤å®\n *\n * @param el\n *  - `en` [[ElementBase]] instance\n *  - `ja` [[ElementBase]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isNodeQueriable(el: ElementBase | Nil): el is Element | Document {\n    return !!(el && (el as Node as Element).querySelector); // eslint-disable-line @typescript-eslint/unbound-method\n}\n\n/**\n * @en Check target is `Document`.\n * @ja å¯¾è±¡ã `Document` ã§ãããå¤å®\n *\n * @param el\n *  - `en` [[ElementBase]] instance\n *  - `ja` [[ElementBase]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isNodeDocument(el: ElementBase | Nil): el is Document {\n    return isNode(el) && (Node.DOCUMENT_NODE === el.nodeType);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check [[DOM]] target is `Element`.\n * @ja [[DOM]] ã `Element` ãå¯¾è±¡ã«ãã¦ãããå¤å®\n *\n * @param dom\n *  - `en` [[DOMIterable]] instance\n *  - `ja` [[DOMIterable]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isTypeElement(dom: DOMIterable<ElementBase>): dom is DOMIterable<Element> {\n    return isNodeElement(dom[0]);\n}\n\n/**\n * @en Check [[DOM]] target is `HTMLElement` or `SVGElement`.\n * @ja [[DOM]] ã `HTMLElement` ã¾ãã¯ `SVGElement` ãå¯¾è±¡ã«ãã¦ãããå¤å®\n *\n * @param dom\n *  - `en` [[DOMIterable]] instance\n *  - `ja` [[DOMIterable]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isTypeHTMLOrSVGElement(dom: DOMIterable<ElementBase>): dom is DOMIterable<HTMLElement | SVGElement> {\n    return isNodeHTMLOrSVGElement(dom[0]);\n}\n\n/**\n * @en Check [[DOM]] target is `Document`.\n * @ja [[DOM]] ã `Document` ãå¯¾è±¡ã«ãã¦ãããå¤å®\n *\n * @param dom\n *  - `en` [[DOMIterable]] instance\n *  - `ja` [[DOMIterable]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isTypeDocument(dom: DOMIterable<ElementBase>): dom is DOMIterable<Document> {\n    return dom[0] instanceof Document;\n}\n\n/**\n * @en Check [[DOM]] target is `Window`.\n * @ja [[DOM]] ã `Window` ãå¯¾è±¡ã«ãã¦ãããå¤å®\n *\n * @param dom\n *  - `en` [[DOMIterable]] instance\n *  - `ja` [[DOMIterable]] ã¤ã³ã¹ã¿ã³ã¹\n */\nexport function isTypeWindow(dom: DOMIterable<ElementBase>): dom is DOMIterable<Window> {\n    return isWindowContext(dom[0]);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check the selector type is Nil.\n * @ja Nil ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isEmptySelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Nil> {\n    return !selector;\n}\n\n/**\n * @en Check the selector type is String.\n * @ja String ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isStringSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, string> {\n    return 'string' === typeof selector;\n}\n\n/**\n * @en Check the selector type is Node.\n * @ja Node ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isNodeSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Node> {\n    return null != (selector as Node).nodeType;\n}\n\n/**\n * @en Check the selector type is Element.\n * @ja Element ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isElementSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Element> {\n    return selector instanceof Element;\n}\n\n/**\n * @en Check the selector type is Document.\n * @ja Document ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isDocumentSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Document> {\n    return selector instanceof Document;\n}\n\n/**\n * @en Check the selector type is Window.\n * @ja Window ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isWindowSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, Window> {\n    return isWindowContext(selector);\n}\n\n/**\n * @en Check the selector is able to iterate.\n * @ja èµ°æ»å¯è½ãªã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isIterableSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, NodeListOf<Node>> {\n    return null != (selector as T[]).length;\n}\n\n/**\n * @en Check the selector type is [[DOM]].\n * @ja [[DOM]] ã»ã¬ã¯ã¿ã§ãããå¤å®\n *\n * @param selector\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isDOMSelector<T extends SelectorBase>(selector: DOMSelector<T>): selector is Extract<DOMSelector<T>, DOM> {\n    return selector instanceof DOMBase;\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Check node name is argument.\n * @ja Node åãå¼æ°ã§ä¸ããååã¨ä¸è´ãããå¤å®\n */\nexport function nodeName(elem: Node | null, name: string): boolean {\n    return !!(elem && elem.nodeName.toLowerCase() === name.toLowerCase());\n}\n\n/**\n * @en Get node offset parent. This function will work SVGElement, too.\n * @ja offset parent ã®åå¾. SVGElement ã«ãé©ç¨å¯è½\n */\nexport function getOffsetParent(node: Node): Element | null {\n    if ((node as HTMLElement).offsetParent) {\n        return (node as HTMLElement).offsetParent;\n    } else if (nodeName(node, 'svg')) {\n        const $svg = $(node);\n        const cssProps = $svg.css(['display', 'position']);\n        if ('none' === cssProps.display || 'fixed' === cssProps.position) {\n            return null;\n        } else {\n            let parent = $svg[0].parentElement;\n            while (parent) {\n                const { display, position } = $(parent).css(['display', 'position']);\n                if ('none' === display) {\n                    return null;\n                } else if (!position || 'static' === position) {\n                    parent = parent.parentElement;\n                } else {\n                    break;\n                }\n            }\n            return parent;\n        }\n    } else {\n        return null;\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    UnknownObject,\n    PlainObject,\n    NonFunctionPropertyNames,\n    TypedData,\n    isString,\n    isArray,\n    toTypedData,\n    fromTypedData,\n    assignValue,\n    camelize,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport { ElementBase } from './static';\nimport {\n    DOMIterable,\n    isNodeElement,\n    isNodeHTMLOrSVGElement,\n    isTypeElement,\n    isTypeHTMLOrSVGElement,\n} from './base';\n\nexport type DOMValueType<T, K = 'value'> = T extends HTMLSelectElement ? (string | string[]) : K extends keyof T ? T[K] : string;\nexport type DOMData = PlainObject<TypedData>;\n\n/** @internal helper for `val()`*/\nfunction isMultiSelectElement(el: ElementBase): el is HTMLSelectElement {\n    return isNodeElement(el) && 'select' === el.nodeName.toLowerCase() && (el as HTMLSelectElement).multiple;\n}\n\n/** @internal helper for `val()`*/\nfunction isInputElement(el: ElementBase): el is HTMLInputElement {\n    return isNodeElement(el) && (null != (el as HTMLInputElement).value);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the attributes methods.\n * @ja å±æ§æä½ã¡ã½ãããéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMAttributes<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Classes\n\n    /**\n     * @en Add css class to elements.\n     * @ja css class è¦ç´ ã«è¿½å \n     *\n     * @param className\n     *  - `en` class name or class name list (array).\n     *  - `ja` ã¯ã©ã¹åã¾ãã¯ã¯ã©ã¹åã®éåãæå®\n     */\n    public addClass(className: string | string[]): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n        const classes = isArray(className) ? className : [className];\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.classList.add(...classes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Remove css class to elements.\n     * @ja css class è¦ç´ ãåé¤\n     *\n     * @param className\n     *  - `en` class name or class name list (array).\n     *  - `ja` ã¯ã©ã¹åã¾ãã¯ã¯ã©ã¹åã®éåãæå®\n     */\n    public removeClass(className: string | string[]): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n        const classes = isArray(className) ? className : [className];\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.classList.remove(...classes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Determine whether any of the matched elements are assigned the given class.\n     * @ja æå®ãããã¯ã©ã¹åãå°ãªãã¨ãè¦ç´ ãæã£ã¦ãããå¤å®\n     *\n     * @param className\n     *  - `en` class name\n     *  - `ja` ã¯ã©ã¹å\n     */\n    public hasClass(className: string): boolean {\n        if (!isTypeElement(this)) {\n            return false;\n        }\n        for (const el of this) {\n            if (isNodeElement(el) && el.classList.contains(className)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @en Add or remove one or more classes from each element in the set of matched elements, <br>\n     *     depending on either the class's presence or the value of the state argument.\n     * @ja ç¾å¨ã®ç¶æã«å¿ãã¦, æå®ãããã¯ã©ã¹åãè¦ç´ ã«è¿½å /åé¤ãå®è¡\n     *\n     * @param className\n     *  - `en` class name or class name list (array).\n     *  - `ja` ã¯ã©ã¹åã¾ãã¯ã¯ã©ã¹åã®éåãæå®\n     * @param force\n     *  - `en` if this argument exists, true: the classes should be added / false: removed.\n     *  - `ja` å¼æ°ãå­å¨ããå ´å, true: ã¯ã©ã¹ãè¿½å  / false: ã¯ã©ã¹ãåé¤\n     */\n    public toggleClass(className: string | string[], force?: boolean): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n\n        const classes = isArray(className) ? className : [className];\n        const operation = (() => {\n            if (null == force) {\n                return (elem: Element): void => {\n                    for (const name of classes) {\n                        elem.classList.toggle(name);\n                    }\n                };\n            } else if (force) {\n                return (elem: Element) => elem.classList.add(...classes);\n            } else {\n                return (elem: Element) => elem.classList.remove(...classes);\n            }\n        })();\n\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                operation(el);\n            }\n        }\n\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Properties\n\n    /**\n     * @en Get property value. <br>\n     *     The method gets the property value for only the first element in the matched set.\n     * @ja ãã­ããã£å¤ã®åå¾ <br>\n     *     æåã®è¦ç´ ãåå¾å¯¾è±¡\n     *\n     * @param name\n     *  - `en` target property name\n     *  - `ja` ãã­ããã£åãæå®\n     */\n    public prop<T extends NonFunctionPropertyNames<TElement>>(name: T): TElement[T];\n\n    /**\n     * @en Set single property value for the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦åä¸ãã­ããã£ã®è¨­å®\n     *\n     * @param name\n     *  - `en` target property name\n     *  - `ja` ãã­ããã£åãæå®\n     * @param value\n     *  - `en` target property value\n     *  - `ja` è¨­å®ãããã­ããã£å¤\n     */\n    public prop<T extends NonFunctionPropertyNames<TElement>>(name: T, value: TElement[T]): this;\n\n    /**\n     * @en Set multi property values for the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦è¤æ°ãã­ããã£ã®è¨­å®\n     *\n     * @param properties\n     *  - `en` An object of property-value pairs to set.\n     *  - `ja` property-value ãã¢ãæã¤ãªãã¸ã§ã¯ããæå®\n     */\n    public prop(properties: PlainObject): this;\n\n    public prop<T extends NonFunctionPropertyNames<TElement>>(key: T | PlainObject, value?: TElement[T]): TElement[T] | this {\n        if (null == value && isString(key)) {\n            // get first element property\n            const first = this[0];\n            return first && first[key as string];\n        } else {\n            // set property\n            for (const el of this) {\n                if (null != value) {\n                    // single\n                    assignValue(el as unknown as UnknownObject, key as string, value);\n                } else {\n                    // multiple\n                    for (const name of Object.keys(key)) {\n                        if (name in el) {\n                            assignValue(el as unknown as UnknownObject, name, key[name]);\n                        }\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Attributes\n\n    /**\n     * @en Get attribute value. <br>\n     *     The method gets the attribute value for only the first element in the matched set.\n     * @ja å±æ§å¤ã®åå¾ <br>\n     *     æåã®è¦ç´ ãåå¾å¯¾è±¡\n     *\n     * @param name\n     *  - `en` target attribute name\n     *  - `ja` å±æ§åãæå®\n     */\n    public attr(name: string): string | undefined;\n\n    /**\n     * @en Set single attribute value for the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦åä¸å±æ§ã®è¨­å®\n     *\n     * @param name\n     *  - `en` target attribute name\n     *  - `ja` å±æ§åãæå®\n     * @param value\n     *  - `en` target attribute value. if `null` set, remove attribute.\n     *  - `ja` è¨­å®ããå±æ§å¤. `null` ãæå®ãããå ´ååé¤\n     */\n    public attr(name: string, value: string | number | boolean | null): this;\n\n    /**\n     * @en Set multi attribute values for the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦è¤æ°å±æ§ã®è¨­å®\n     *\n     * @param attributes\n     *  - `en` An object of attribute-value pairs to set.\n     *  - `ja` attribute-value ãã¢ãæã¤ãªãã¸ã§ã¯ããæå®\n     */\n    public attr(properties: PlainObject): this;\n\n    public attr(key: string | PlainObject, value?: string | number | boolean | null): string | undefined | this {\n        if (!isTypeElement(this)) {\n            // non element\n            return undefined === value ? undefined : this;\n        } else if (undefined === value && isString(key)) {\n            // get first element attribute\n            const attr = this[0].getAttribute(key);\n            return (null != attr) ? attr : undefined;\n        } else if (null === value) {\n            // remove attribute\n            return this.removeAttr(key as string);\n        } else {\n            // set attribute\n            for (const el of this) {\n                if (isNodeElement(el)) {\n                    if (null != value) {\n                        // single\n                        el.setAttribute(key as string, String(value));\n                    } else {\n                        // multiple\n                        for (const name of Object.keys(key)) {\n                            const val = key[name];\n                            if (null === val) {\n                                el.removeAttribute(name);\n                            } else {\n                                el.setAttribute(name, String(val));\n                            }\n                        }\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Remove specified attribute.\n     * @ja æå®ããå±æ§ãåé¤\n     *\n     * @param name\n     *  - `en` attribute name or attribute name list (array).\n     *  - `ja` å±æ§åã¾ãã¯å±æ§åã®éåãæå®\n     */\n    public removeAttr(name: string | string[]): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n        const attrs = isArray(name) ? name : [name];\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                for (const attr of attrs) {\n                    el.removeAttribute(attr);\n                }\n            }\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Values\n\n    /**\n     * @en Get the current value of the first element in the set of matched elements.\n     * @ja value å¤ã®åå¾. æåã®è¦ç´ ãåå¾å¯¾è±¡\n     *\n     * @returns\n     *  - `en` `string` or `number` or `string[]` (`<select multiple=\"multiple\">`).\n     *  - `ja` `string` ã¾ãã¯ `number` ã¾ãã¯ `string[]` (`<select multiple=\"multiple\">`)\n     */\n    public val<T extends ElementBase = TElement>(): DOMValueType<T>;\n\n    /**\n     * @en Set the value of every matched element.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦ value å¤ãè¨­å®\n     *\n     * @param value\n     *  - `en` `string` or `number` or `string[]` (`<select multiple=\"multiple\">`).\n     *  - `ja` `string` ã¾ãã¯ `number` ã¾ãã¯ `string[]` (`<select multiple=\"multiple\">`)\n     */\n    public val<T extends ElementBase = TElement>(value: DOMValueType<T>): this;\n\n    public val<T extends ElementBase = TElement>(value?: DOMValueType<T>): any {\n        if (!isTypeElement(this)) {\n            // non element\n            return null == value ? undefined : this;\n        }\n\n        if (null == value) {\n            // get first element value\n            const el = this[0];\n            if (isMultiSelectElement(el)) {\n                const values = [];\n                for (const option of el.selectedOptions) {\n                    values.push(option.value);\n                }\n                return values;\n            } else if ('value' in el) {\n                return (el as any).value;\n            } else {\n                // no support value\n                return undefined;\n            }\n        } else {\n            // set value\n            for (const el of this) {\n                if (isArray(value) && isMultiSelectElement(el)) {\n                    for (const option of el.options) {\n                        option.selected = (value as string[]).includes(option.value);\n                    }\n                } else if (isInputElement(el)) {\n                    el.value = value;\n                }\n            }\n            return this;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Data\n\n    /**\n     * @en Return the values all `DOMStringMap` store set by an HTML5 data-* attribute for the first element in the collection.\n     * @ja æåã®è¦ç´ ã® HTML5 data-* å±æ§ã§ `DOMStringMap` ã«æ ¼ç´ãããå¨ãã¼ã¿å¤ãè¿å´\n     */\n    public data(): DOMData | undefined;\n\n    /**\n     * @en Return the value at the named data store for the first element in the collection, as set by data(key, value) or by an HTML5 data-* attribute.\n     * @ja æåã®è¦ç´ ã® key ã§æå®ãã HTML5 data-* å±æ§å¤ãè¿å´\n     *\n     * @param key\n     *  - `en` string equivalent to data-`key` is given.\n     *  - `ja` data-`key` ã«ç¸å½ããæå­åãæå®\n     */\n    public data(key: string): TypedData | undefined;\n\n    /**\n     * @en Store arbitrary data associated with the matched elements.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦ä»»æã®ãã¼ã¿ãæ ¼ç´\n     *\n     * @param key\n     *  - `en` string equivalent to data-`key` is given.\n     *  - `ja` data-`key` ã«ç¸å½ããæå­åãæå®\n     * @param value\n     *  - `en` data value (not only `string`)\n     *  - `ja` è¨­å®ããå¤ãæå® (æå­åä»¥å¤ãåä»å¯)\n     */\n    public data(key: string, value: TypedData): this;\n\n    public data(key?: string, value?: TypedData): DOMData | TypedData | undefined | this {\n        if (!isTypeHTMLOrSVGElement(this)) {\n            // non supported dataset element\n            return null == value ? undefined : this;\n        }\n\n        if (undefined === value) {\n            // get first element dataset\n            const dataset = this[0].dataset;\n            if (null == key) {\n                // get all data\n                const data: DOMData = {};\n                for (const prop of Object.keys(dataset)) {\n                    assignValue(data, prop, toTypedData(dataset[prop]));\n                }\n                return data;\n            } else {\n                // typed value\n                return toTypedData(dataset[camelize(key)]);\n            }\n        } else {\n            // set value\n            const prop = camelize(key || '');\n            if (prop) {\n                for (const el of this) {\n                    if (isNodeHTMLOrSVGElement(el)) {\n                        assignValue(el.dataset as unknown as UnknownObject, prop, fromTypedData(value));\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Remove specified data.\n     * @ja æå®ãããã¼ã¿ããã¼ã¿é åããåé¤\n     *\n     * @param key\n     *  - `en` string equivalent to data-`key` is given.\n     *  - `ja` data-`key` ã«ç¸å½ããæå­åãæå®\n     */\n    public removeData(key: string | string[]): this {\n        if (!isTypeHTMLOrSVGElement(this)) {\n            return this;\n        }\n        const props = isArray(key) ? key.map(k => camelize(k)) : [camelize(key)];\n        for (const el of this) {\n            if (isNodeHTMLOrSVGElement(el)) {\n                const { dataset } = el;\n                for (const prop of props) {\n                    delete dataset[prop];\n                }\n            }\n        }\n        return this;\n    }\n}\n\nsetMixClassAttribute(DOMAttributes, 'protoExtendsOnly');\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    isFunction,\n    isString,\n    noop,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport { document } from './ssr';\nimport { isWindowContext } from './utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    QueryContext,\n    DOM,\n    DOMSelector,\n    DOMResult,\n    DOMIterateCallback,\n    dom as $,\n} from './static';\nimport {\n    DOMBase,\n    DOMIterable,\n    isNode,\n    isNodeElement,\n    isNodeQueriable,\n    isTypeElement,\n    isTypeWindow,\n    isEmptySelector,\n    isStringSelector,\n    isDocumentSelector,\n    isWindowSelector,\n    isNodeSelector,\n    isIterableSelector,\n    nodeName,\n    getOffsetParent,\n} from './base';\n\nexport type DOMModificationCallback<T extends ElementBase, U extends ElementBase> = (index: number, element: T) => U;\n\n/** @internal helper for `is()` and `filter()` */\nfunction winnow<T extends SelectorBase, U extends ElementBase>(\n    selector: DOMSelector<T> | DOMIterateCallback<U>,\n    dom: DOMTraversing<U>,\n    validCallback: (el: U) => unknown,\n    invalidCallback?: () => unknown,\n): any {\n    invalidCallback = invalidCallback || noop;\n\n    let retval: unknown;\n    for (const [index, el] of dom.entries()) {\n        if (isFunction(selector)) {\n            if (selector.call(el, index, el)) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isStringSelector(selector)) {\n            if ((el as Node as Element).matches && (el as Node as Element).matches(selector)) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isWindowSelector(selector)) {\n            if (isWindowContext(el)) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            } else {\n                retval = invalidCallback();\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isDocumentSelector(selector)) {\n            if (document === el as Node as Document) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            } else {\n                retval = invalidCallback();\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isNodeSelector(selector)) {\n            if (selector === el as Node) {\n                retval = validCallback(el);\n                if (undefined !== retval) {\n                    return retval;\n                }\n            }\n        } else if (isIterableSelector(selector)) {\n            for (const elem of selector) {\n                if (elem === el as Node) {\n                    retval = validCallback(el);\n                    if (undefined !== retval) {\n                        return retval;\n                    }\n                }\n            }\n        } else {\n            retval = invalidCallback();\n            if (undefined !== retval) {\n                return retval;\n            }\n        }\n    }\n\n    retval = invalidCallback();\n    if (undefined !== retval) {\n        return retval;\n    }\n}\n\n/** @internal helper for `parent()`, `parents()` and `siblings()` */\nfunction validParentNode(parentNode: Node | null): parentNode is Node {\n    return null != parentNode && Node.DOCUMENT_NODE !== parentNode.nodeType && Node.DOCUMENT_FRAGMENT_NODE !== parentNode.nodeType;\n}\n\n/** @internal helper for `children()`, `parent()`, `next()` and `prev()` */\nfunction validRetrieveNode<T extends SelectorBase>(node: Node | null, selector: DOMSelector<T> | undefined): node is Node {\n    if (node) {\n        if (selector) {\n            if ($(node).is(selector)) {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/** @internal helper for `nextUntil()` and `prevUntil() */\nfunction retrieveSiblings<\n    E extends ElementBase,\n    T extends Node = HTMLElement,\n    U extends SelectorBase = SelectorBase,\n    V extends SelectorBase = SelectorBase\n>(\n    sibling: 'previousElementSibling' | 'nextElementSibling',\n    dom: DOMTraversing<E>,\n    selector?: DOMSelector<U>, filter?: DOMSelector<V>\n): DOM<T> {\n    if (!isTypeElement(dom)) {\n        return $() as DOM<T>;\n    }\n\n    const siblings = new Set<Node>();\n\n    for (const el of dom as DOMIterable<Element>) {\n        let elem = el[sibling];\n        while (elem) {\n            if (null != selector) {\n                if ($(elem).is(selector)) {\n                    break;\n                }\n            }\n            if (filter) {\n                if ($(elem).is(filter)) {\n                    siblings.add(elem);\n                }\n            } else {\n                siblings.add(elem);\n            }\n            elem = elem[sibling];\n        }\n    }\n\n    return $([...siblings]) as DOM<T>;\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the traversing methods.\n * @ja ãã©ãã¼ã¹ã¡ã½ãããéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMTraversing<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Element Methods\n\n    /**\n     * @en Retrieve one of the elements matched by the [[DOM]] instance.\n     * @ja ã¤ã³ããã¯ã¹ãæå®ãã¦éä¸ã®è¦ç´ ã«ã¢ã¯ã»ã¹\n     *\n     * @param index\n     *  - `en` A zero-based integer indicating which element to retrieve. <br>\n     *         If negative index is counted from the end of the matched set.\n     *  - `ja` 0 base ã®ã¤ã³ããã¯ã¹ãæå® <br>\n     *         è² å¤ãæå®ãããå ´å, æ«å°¾ããã®ã¤ã³ããã¯ã¹ã¨ãã¦è§£éããã\n     */\n    public get(index: number): TElement | undefined;\n\n    /**\n     * @en Retrieve the elements matched by the [[DOM]] instance.\n     * @ja éä¸ã®è¦ç´ ãã¹ã¦ãéåã§åå¾\n     */\n    public get(): TElement[];\n\n    public get(index?: number): TElement[] | TElement | undefined {\n        if (null != index) {\n            index = Math.trunc(index);\n            return index < 0 ? this[index + this.length] : this[index];\n        } else {\n            return this.toArray();\n        }\n    }\n\n    /**\n     * @en Retrieve all the elements contained in the [[DOM]] set, as an array.\n     * @ja éä¸ã®è¦ç´ ãã¹ã¦ãéåã§åå¾\n     */\n    public toArray(): TElement[] {\n        return [...this];\n    }\n\n    /**\n     * @en Return the position of the first element within the [[DOM]] collection relative to its sibling elements.\n     * @ja [[DOM]] åã®æåã®è¦ç´ ãåå¼è¦ç´ ã®ä½çªç®ã«æå±ããããè¿å´\n     */\n    public index(): number | undefined;\n\n    /**\n     * @en Search for a given a selector, element, or [[DOM]] instance from among the matched elements.\n     * @ja ã»ã¬ã¯ã¿, è¦ç´ , ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãæå®ã, éä¸ã®ä½çªç®ã«æå±ãã¦ããããè¿å´\n     */\n    public index<T extends ElementBase>(selector: string | T | DOM<T>): number | undefined;\n\n    public index<T extends ElementBase>(selector?: string | T | DOM<T>): number | undefined {\n        if (!isTypeElement(this)) {\n            return undefined;\n        } else if (null == selector) {\n            let i = 0;\n            let child: Node | null = this[0];\n            while (null !== (child = child.previousSibling)) {\n                if (Node.ELEMENT_NODE === child.nodeType) {\n                    i += 1;\n                }\n            }\n            return i;\n        } else {\n            let elem: T | Element;\n            if (isString(selector)) {\n                elem = $(selector)[0];\n            } else {\n                elem = selector instanceof DOMBase ? selector[0] : selector;\n            }\n            const i = [...this].indexOf(elem as TElement & Element);\n            return 0 <= i ? i : undefined;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Traversing\n\n    /**\n     * @en Reduce the set of matched elements to the first in the set as [[DOM]] instance.\n     * @ja ç®¡è½ãã¦ããæåã®è¦ç´ ã [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ã«ãã¦åå¾\n     */\n    public first(): DOM<TElement> {\n        return $(this[0]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to the final one in the set as [[DOM]] instance.\n     * @ja ç®¡è½ãã¦ããæ«å°¾ã®è¦ç´ ã [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ã«ãã¦åå¾\n     */\n    public last(): DOM<TElement> {\n        return $(this[this.length - 1]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Create a new [[DOM]] instance with elements added to the set from selector.\n     * @ja æå®ããã `selector` ã§åå¾ãã `Element` ãè¿½å ããæ°è¦ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãè¿å´\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     * @param context\n     *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n     *  - `ja` ä½¿ç¨ãã `Document` ã³ã³ãã­ã¹ããæå®. æªæå®ã®å ´åã¯ç°å¢ã®æ¢å®å¤ãä½¿ç¨ããã.\n     */\n    public add<T extends SelectorBase>(selector: DOMSelector<T>, context?: QueryContext): DOM<TElement> {\n        const $add = $(selector, context);\n        const elems = new Set([...this, ...$add]);\n        return $([...elems] as any);\n    }\n\n    /**\n     * @en Check the current matched set of elements against a selector, element, or [[DOM]] instance.\n     * @ja ã»ã¬ã¯ã¿, è¦ç´ , ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãæå®ã, ç¾å¨ã®è¦ç´ ã®ã»ããã¨ä¸è´ãããç¢ºèª\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]], test function.\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å, ãã¹ãé¢æ°\n     * @returns\n     *  - `en` `true` if at least one of these elements matches the given arguments.\n     *  - `ja` å¼æ°ã«æå®ããæ¡ä»¶ãè¦ç´ ã®ä¸ã¤ã§ãä¸è´ããã° `true` ãè¿å´\n     */\n    public is<T extends SelectorBase>(selector: DOMSelector<T> | DOMIterateCallback<TElement>): boolean {\n        if (this.length <= 0 || isEmptySelector(selector as DOMSelector<T>)) {\n            return false;\n        }\n        return winnow(selector, this, () => true, () => false) as boolean;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to those that match the selector or pass the function's test.\n     * @ja ã»ã¬ã¯ã¿, è¦ç´ , ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãæå®ã, ç¾å¨ã®è¦ç´ ã®ã»ããã¨ä¸è´ãããã®ãè¿å´\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]], test function.\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å, ãã¹ãé¢æ°\n     * @returns\n     *  - `en` New [[DOM]] instance including filtered elements.\n     *  - `ja` ãã£ã«ã¿ãªã³ã°ãããè¦ç´ ãååãã æ°è¦ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public filter<T extends SelectorBase>(selector: DOMSelector<T> | DOMIterateCallback<TElement>): DOM<TElement> {\n        if (this.length <= 0 || isEmptySelector(selector as DOMSelector<T>)) {\n            return $() as DOM<TElement>;\n        }\n        const elements: TElement[] = [];\n        winnow(selector, this, (el: TElement) => { elements.push(el); });\n        return $(elements as Node[]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Remove elements from the set of match the selector or pass the function's test.\n     * @ja ã»ã¬ã¯ã¿, è¦ç´ , ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãæå®ã, ç¾å¨ã®è¦ç´ ã®ã»ããã¨ä¸è´ãããã®ãåé¤ãã¦è¿å´\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]], test function.\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å, ãã¹ãé¢æ°\n     * @returns\n     *  - `en` New [[DOM]] instance excluding filtered elements.\n     *  - `ja` ãã£ã«ã¿ãªã³ã°ãããè¦ç´ ãä»¥å¤ãååãã æ°è¦ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public not<T extends SelectorBase>(selector: DOMSelector<T> | DOMIterateCallback<TElement>): DOM<TElement> {\n        if (this.length <= 0 || isEmptySelector(selector as DOMSelector<T>)) {\n            return $() as DOM<TElement>;\n        }\n        const elements = new Set<TElement>([...this]);\n        winnow(selector, this, (el: TElement) => { elements.delete(el); });\n        return $([...elements] as Node[]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Get the descendants of each element in the current set of matched elements, filtered by a selector.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦æå®ããã»ã¬ã¯ã¿ã«ä¸è´ããè¦ç´ ãæ¤ç´¢\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public find<T extends SelectorBase = SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        if (!isString(selector)) {\n            const $selector = $(selector) as DOM<Node>;\n            return $selector.filter((index, elem) => {\n                for (const el of this) {\n                    if (isNode(el) && el !== elem && el.contains(elem)) {\n                        return true;\n                    }\n                }\n                return false;\n            }) as DOMResult<T>;\n        } else if (isTypeWindow(this)) {\n            return $();\n        } else {\n            const elements: Element[] = [];\n            for (const el of this) {\n                if (isNodeQueriable(el)) {\n                    const elems = el.querySelectorAll(selector);\n                    elements.push(...elems);\n                }\n            }\n            return $(elements as Node[]) as DOMResult<T>;\n        }\n    }\n\n    /**\n     * @en Reduce the set of matched elements to those that have a descendant that matches the selector.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦æå®ããã»ã¬ã¯ã¿ã«ä¸è´ããå­è¦ç´ æã¤è¦ç´ ãè¿å´\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public has<T extends SelectorBase = SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        if (isTypeWindow(this)) {\n            return $();\n        }\n\n        const targets: Node[] = [];\n        for (const el of this) {\n            if (isNodeQueriable(el)) {\n                const $target = $(selector, el as Element) as DOM<Element>;\n                targets.push(...$target);\n            }\n        }\n\n        return this.filter((index, elem) => {\n            if (isNode(elem)) {\n                for (const el of new Set(targets)) {\n                    if (elem !== el && elem.contains(el)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }) as DOM<Node> as DOMResult<T>;\n    }\n\n    /**\n     * @en Pass each element in the current matched set through a function, producing a new [[DOM]] instance containing the return values.\n     * @ja ã³ã¼ã«ããã¯ã§å¤æ´ãããè¦ç´ ãç¨ãã¦æ°ãã« [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãæ§ç¯\n     *\n     * @param callback\n     *  - `en` modification function object that will be invoked for each element in the current set.\n     *  - `ja` åè¦ç´ ã«å¯¾ãã¦å¼ã³åºãããå¤æ´é¢æ°\n     */\n    public map<T extends ElementBase>(callback: DOMModificationCallback<TElement, T>): DOM<T> {\n        const elements: T[] = [];\n        for (const [index, el] of this.entries()) {\n            elements.push(callback.call(el, index, el));\n        }\n        return $(elements as Node[]) as DOM<T>;\n    }\n\n    /**\n     * @en Iterate over a [[DOM]] instance, executing a function for each matched element.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦ã³ã¼ã«ããã¯é¢æ°ãå®è¡\n     *\n     * @param callback\n     *  - `en` callback function object that will be invoked for each element in the current set.\n     *  - `ja` åè¦ç´ ã«å¯¾ãã¦å¼ã³åºãããã³ã¼ã«ããã¯é¢æ°\n     */\n    public each(callback: DOMIterateCallback<TElement>): this {\n        for (const [index, el] of this.entries()) {\n            if (false === callback.call(el, index, el)) {\n                return this;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to a subset specified by a range of indices.\n     * @ja ã¤ã³ããã¯ã¹æå®ãããç¯å²ã®è¦ç´ ãå«ã [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãè¿å´\n     *\n     * @param begin\n     *  - `en` An integer indicating the 0-based position at which the elements begin to be selected.\n     *  - `ja` åãåºãã®éå§ä½ç½®ãç¤ºã 0 ããå§ã¾ãã¤ã³ããã¯ã¹\n     * @param end\n     *  - `en` An integer indicating the 0-based position at which the elements stop being selected.\n     *  - `ja` åãåºããçµããç´åã®ä½ç½®ãç¤ºã 0 ããå§ã¾ãã¤ã³ããã¯ã¹\n     */\n    public slice(begin?: number, end?: number): DOM<TElement> {\n        return $([...this].slice(begin, end) as Node[]) as DOM<TElement>;\n    }\n\n    /**\n     * @en Reduce the set of matched elements to the one at the specified index.\n     * @ja ã¤ã³ããã¯ã¹æå®ããè¦ç´ ãå«ã [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãè¿å´\n     *\n     * @param index\n     *  - `en` A zero-based integer indicating which element to retrieve. <br>\n     *         If negative index is counted from the end of the matched set.\n     *  - `ja` 0 base ã®ã¤ã³ããã¯ã¹ãæå® <br>\n     *         è² å¤ãæå®ãããå ´å, æ«å°¾ããã®ã¤ã³ããã¯ã¹ã¨ãã¦è§£éããã\n     */\n    public eq(index: number): DOM<TElement> {\n        if (null == index) {\n            // for fail safe\n            return $() as DOM<TElement>;\n        } else {\n            return $(this.get(index)) as DOM<TElement>;\n        }\n    }\n\n    /**\n     * @en For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n     * @ja éå§è¦ç´ ããæãè¿ãè¦ªè¦ç´ ãé¸æ. ã»ã¬ã¯ã¿ã¼æå®ããå ´å, ãããããæãè¿ãè¦ªè¦ç´ ãè¿å´\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]], test function.\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å, ãã¹ãé¢æ°\n     */\n    public closest<T extends SelectorBase = SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        if (null == selector || !isTypeElement(this)) {\n            return $();\n        } else if (isString(selector)) {\n            const closests = new Set<Node>();\n            for (const el of this) {\n                if (isNodeElement(el)) {\n                    const c = el.closest(selector);\n                    if (c) {\n                        closests.add(c);\n                    }\n                }\n            }\n            return $([...closests]) as DOMResult<T>;\n        } else if (this.is(selector)) {\n            return $(this as unknown as Element) as DOMResult<T>;\n        } else {\n            return this.parents(selector).eq(0) as DOM<Node> as DOMResult<T>;\n        }\n    }\n\n    /**\n     * @en Get the children of each element in the set of matched elements, optionally filtered by a selector.\n     * @ja åè¦ç´ ã®å­è¦ç´ ãåå¾. ã»ã¬ã¯ã¿ãæå®ãããå ´åã¯ãã£ã«ã¿ãªã³ã°ãããçµæãè¿å´\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public children<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (isTypeWindow(this)) {\n            return $() as DOM<T>;\n        }\n\n        const children = new Set<Node>();\n        for (const el of this) {\n            if (isNodeQueriable(el)) {\n                for (const child of el.children) {\n                    if (validRetrieveNode(child, selector)) {\n                        children.add(child);\n                    }\n                }\n            }\n        }\n        return $([...children]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the first parent of each element in the current set of matched elements.\n     * @ja ç®¡è½ãã¦ããåè¦ç´ ã®æåã®è¦ªè¦ç´ ãè¿å´\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     * @returns [[DOM]] instance\n     */\n    public parent<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        const parents = new Set<Node>();\n        for (const el of this) {\n            if (isNode(el)) {\n                const parentNode = el.parentNode;\n                if (validParentNode(parentNode) && validRetrieveNode(parentNode, selector)) {\n                    parents.add(parentNode);\n                }\n            }\n        }\n        return $([...parents]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the ancestors of each element in the current set of matched elements.\n     * @ja ç®¡è½ãã¦ããåè¦ç´ ã®ç¥åã®è¦ªè¦ç´ ãè¿å´\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     * @returns [[DOM]] instance\n     */\n    public parents<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        return this.parentsUntil(undefined, selector);\n    }\n\n    /**\n     * @en Get the ancestors of each element in the current set of matched elements, <br>\n     *     up to but not including the element matched by the selector, DOM node, or [[DOM]] instance\n     * @ja ç®¡è½ãã¦ããåè¦ç´ ã®ç¥åã§, æå®ããã»ã¬ã¯ã¿ã¼ãæ¡ä»¶ã«ä¸è´ããè¦ç´ ãåºã¦ããã¾ã§é¸æãã¦åå¾\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     * @param filter\n     *  - `en` filtered by a string selector.\n     *  - `ja` ãã£ã«ã¿ç¨æå­åã»ã¬ã¯ã¿\n     * @returns [[DOM]] instance\n     */\n    public parentsUntil<\n        T extends Node = HTMLElement,\n        U extends SelectorBase = SelectorBase,\n        V extends SelectorBase = SelectorBase\n    >(selector?: DOMSelector<U>, filter?: DOMSelector<V>): DOM<T> {\n        let parents: Node[] = [];\n\n        for (const el of this) {\n            let parentNode = (el as Node).parentNode;\n            while (validParentNode(parentNode)) {\n                if (null != selector) {\n                    if ($(parentNode).is(selector)) {\n                        break;\n                    }\n                }\n                if (filter) {\n                    if ($(parentNode).is(filter)) {\n                        parents.push(parentNode);\n                    }\n                } else {\n                    parents.push(parentNode);\n                }\n                parentNode = parentNode.parentNode;\n            }\n        }\n\n        // è¤æ°è¦ç´ ãå¯¾è±¡ã«ãªãã¨ãã¯åè»¢\n        if (1 < this.length) {\n            parents = [...new Set(parents.reverse())].reverse();\n        }\n\n        return $(parents) as DOM<T>;\n    }\n\n    /**\n     * @en Get the immediately following sibling of each element in the set of matched elements. <br>\n     *     If a selector is provided, it retrieves the next sibling only if it matches that selector.\n     * @ja è¦ç´ éåã®åè¦ç´ ã®ç´å¾ã«ãããåå¼è¦ç´ ãæ½åº <br>\n     *     æ¡ä»¶å¼ãæå®ããçµæã»ããããæ´ã«çµè¾¼ã¿ãè¡ããã¨ãå¯è½\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public next<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (!isTypeElement(this)) {\n            return $() as DOM<T>;\n        }\n\n        const nextSiblings = new Set<Node>();\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const elem = el.nextElementSibling;\n                if (validRetrieveNode(elem, selector)) {\n                    nextSiblings.add(elem);\n                }\n            }\n        }\n        return $([...nextSiblings]) as DOM<T>;\n    }\n\n    /**\n     * @en Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.\n     * @ja ãããããè¦ç´ éååã®åè¦ç´ ã®æ¬¡ä»¥éã®å¨ã¦ã®åå¼è¦ç´ ãåå¾. ã»ã¬ã¯ã¿ãæå®ãããã¨ã§ãã£ã«ã¿ãªã³ã°ãããã¨ãå¯è½.\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public nextAll<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        return this.nextUntil(undefined, selector);\n    }\n\n    /**\n     * @en Get all following siblings of each element up to but not including the element matched by the selector.\n     * @ja ãããããè¦ç´ ã®æ¬¡ä»¥éã®åå¼è¦ç´ ã§, æå®ããã»ã¬ã¯ã¿ã¼ãæ¡ä»¶ã«ä¸è´ããè¦ç´ ãåºã¦ããã¾ã§é¸æãã¦åå¾\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     * @param filter\n     *  - `en` filtered by a string selector.\n     *  - `ja` ãã£ã«ã¿ç¨æå­åã»ã¬ã¯ã¿\n     */\n    public nextUntil<\n        T extends Node = HTMLElement,\n        U extends SelectorBase = SelectorBase,\n        V extends SelectorBase = SelectorBase\n    >(selector?: DOMSelector<U>, filter?: DOMSelector<V>): DOM<T> {\n        return retrieveSiblings('nextElementSibling', this, selector, filter);\n    }\n\n    /**\n     * @en Get the immediately preceding sibling of each element in the set of matched elements. <br>\n     *     If a selector is provided, it retrieves the previous sibling only if it matches that selector.\n     * @ja ãããããè¦ç´ éåã®åè¦ç´ ã®ç´åã®åå¼è¦ç´ ãæ½åº <br>\n     *     æ¡ä»¶å¼ãæå®ããçµæã»ããããæ´ã«çµè¾¼ã¿ãè¡ããã¨ãå¯è½\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public prev<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (!isTypeElement(this)) {\n            return $() as DOM<T>;\n        }\n\n        const prevSiblings = new Set<Node>();\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const elem = el.previousElementSibling;\n                if (validRetrieveNode(elem, selector)) {\n                    prevSiblings.add(elem);\n                }\n            }\n        }\n        return $([...prevSiblings]) as DOM<T>;\n    }\n\n    /**\n     * @en Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\n     * @ja ãããããè¦ç´ éååã®åè¦ç´ ã®åä»¥éã®å¨ã¦ã®åå¼è¦ç´ ãåå¾. ã»ã¬ã¯ã¿ãæå®ãããã¨ã§ãã£ã«ã¿ãªã³ã°ãããã¨ãå¯è½.\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public prevAll<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        return this.prevUntil(undefined, selector);\n    }\n\n    /**\n     * @en Get all preceding siblings of each element up to but not including the element matched by the selector.\n     * @ja ãããããè¦ç´ ã®åä»¥éã®åå¼è¦ç´ ã§, æå®ããã»ã¬ã¯ã¿ãæ¡ä»¶ã«ä¸è´ããè¦ç´ ãåºã¦ããã¾ã§é¸æãã¦åå¾\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     * @param filter\n     *  - `en` filtered by a string selector.\n     *  - `ja` ãã£ã«ã¿ç¨æå­åã»ã¬ã¯ã¿\n     */\n    public prevUntil<\n        T extends Node = HTMLElement,\n        U extends SelectorBase = SelectorBase,\n        V extends SelectorBase = SelectorBase\n    >(selector?: DOMSelector<U>, filter?: DOMSelector<V>): DOM<T> {\n        return retrieveSiblings('previousElementSibling', this, selector, filter);\n    }\n\n    /**\n     * @en Get the siblings of each element in the set of matched elements, optionally filtered by a selector\n     * @ja ãããããåè¦ç´ ã®åå¼è¦ç´ ãåå¾\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public siblings<T extends Node = HTMLElement, U extends SelectorBase = SelectorBase>(selector?: DOMSelector<U>): DOM<T> {\n        if (!isTypeElement(this)) {\n            return $() as DOM<T>;\n        }\n\n        const siblings = new Set<Node>();\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const parentNode = el.parentNode;\n                if (validParentNode(parentNode)) {\n                    for (const sibling of $(parentNode).children(selector)) {\n                        if (sibling !== el as Element) {\n                            siblings.add(sibling);\n                        }\n                    }\n                }\n            }\n        }\n        return $([...siblings]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the children of each element in the set of matched elements, including text and comment nodes.\n     * @ja ãã­ã¹ããHTMLã³ã¡ã³ããå«ãå­è¦ç´ ãåå¾\n     */\n    public contents<T extends Node = HTMLElement>(): DOM<T> {\n        if (isTypeWindow(this)) {\n            return $() as DOM<T>;\n        }\n\n        const contents = new Set<Node>();\n        for (const el of this) {\n            if (isNode(el)) {\n                if (nodeName(el, 'iframe')) {\n                    contents.add((el as HTMLIFrameElement).contentDocument as Node);\n                } else if (nodeName(el, 'template')) {\n                    contents.add((el as HTMLTemplateElement).content);\n                } else {\n                    for (const node of el.childNodes) {\n                        contents.add(node);\n                    }\n                }\n            }\n        }\n        return $([...contents]) as DOM<T>;\n    }\n\n    /**\n     * @en Get the closest ancestor element that is positioned.\n     * @ja è¦ç´ ã®åç¥è¦ç´ ã§, ã¹ã¿ã¤ã«ã§ãã¸ã·ã§ã³æå®(positiionãrelative, absolute, fixedã®ãããã)ããã¦ãããã®ãåå¾\n     */\n    public offsetParent<T extends Node = HTMLElement>(): DOM<T> {\n        const rootElement = document.documentElement;\n        if (this.length <= 0) {\n            return $() as DOM<T>;\n        } else if (!isTypeElement(this)) {\n            return $(rootElement) as DOM<Node> as DOM<T>;\n        } else {\n            const offsets = new Set<Node>();\n            for (const el of this) {\n                const offset = getOffsetParent(el as Node) || rootElement;\n                offsets.add(offset);\n            }\n            return $([...offsets]) as DOM<T>;\n        }\n    }\n}\n\nsetMixClassAttribute(DOMTraversing, 'protoExtendsOnly');\n","import { isString, setMixClassAttribute } from '@cdp/core-utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    DOMSelector,\n    DOMResult,\n    DOM,\n    dom as $,\n} from './static';\nimport {\n    DOMIterable,\n    isNode,\n    isNodeElement,\n    isTypeElement,\n    isTypeDocument,\n    isTypeWindow,\n} from './base';\nimport { document } from './ssr';\n\n/** @internal check HTML string */\nfunction isHTMLString(src: string): boolean {\n    const subject = src.trim();\n    return ('<' === subject.slice(0, 1)) && ('>' === subject.slice(-1));\n}\n\n/** @internal helper for `append()`, `prepend()`, `before()` and `after()`  */\nfunction toNodeSet<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): Set<Node | string> {\n    const nodes = new Set<Node | string>();\n    for (const content of contents) {\n        if ((isString(content) && !isHTMLString(content)) || isNode(content)) {\n            nodes.add(content);\n        } else {\n            const $dom = $(content as DOM<Element>);\n            for (const node of $dom) {\n                if (isString(node) || (isNode(node) && Node.DOCUMENT_NODE !== node.nodeType)) {\n                    nodes.add(node);\n                }\n            }\n        }\n    }\n    return nodes;\n}\n\n/** @internal helper for `before()` and `after()`  */\nfunction toNode(node: Node | string): Node {\n    if (isString(node)) {\n        return document.createTextNode(node);\n    } else {\n        return node;\n    }\n}\n\n/** @internal helper for `detach()` and `remove()` */\nfunction removeElement<T extends SelectorBase, U extends ElementBase>(\n    selector: DOMSelector<T> | undefined,\n    dom: DOMIterable<U>,\n    keepListener: boolean\n): void {\n    const $dom: DOM<U> = null != selector\n        ? (dom as DOM<U>).filter(selector)\n        : dom as DOM<U>;\n\n    if (!keepListener) {\n        $dom.off();\n    }\n\n    for (const el of $dom) {\n        if (isNodeElement(el)) {\n            el.remove();\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the manipulation methods.\n * @ja ãããã¥ã¬ã¼ã·ã§ã³ã¡ã½ãããéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMManipulation<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Insertion, Inside\n\n    /**\n     * @en Get the HTML contents of the first element in the set of matched elements.\n     * @ja åé ­è¦ç´ ã® HTML ãåå¾\n     */\n    public html(): string;\n\n    /**\n     * @en Set the HTML contents of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã«æå®ãã HTML ãè¨­å®\n     *\n     * @param htmlString\n     *  - `en` A string of HTML to set as the content of each matched element.\n     *  - `ja` è¦ç´ åã«æ¿å¥ãã HTML æå­åãæå®\n     */\n    public html(htmlString: string): this;\n\n    public html(htmlString?: string): string | this {\n        if (undefined === htmlString) {\n            // getter\n            const el = this[0];\n            return isNodeElement(el) ? el.innerHTML : '';\n        } else if (isString(htmlString)) {\n            // setter\n            for (const el of this) {\n                if (isNodeElement(el)) {\n                    el.innerHTML = htmlString;\n                }\n            }\n            return this;\n        } else {\n            // invalid arg\n            console.warn(`invalid arg. htmlString type:${typeof htmlString}`);\n            return this;\n        }\n    }\n\n    /**\n     * @en Get the text contents of the first element in the set of matched elements. <br>\n     *     jQuery returns the combined text of each element, but this method makes only first element's text.\n     * @ja åé ­è¦ç´ ã®ãã­ã¹ããåå¾ <br>\n     *     jQuery ã¯åè¦ç´ ã®é£çµãã­ã¹ããè¿å´ãããæ¬ã¡ã½ããã¯åé ­è¦ç´ ã®ã¿ãå¯¾è±¡ã¨ãã\n     */\n    public text(): string;\n\n    /**\n     * @en Set the content of each element in the set of matched elements to the specified text.\n     * @ja éä¸ã®è¦ç´ ã«æå®ãããã­ã¹ããè¨­å®\n     *\n     * @param text\n     *  - `en` The text to set as the content of each matched element.\n     *  - `ja` è¦ç´ åã«æ¿å¥ãããã­ã¹ããæå®\n     */\n    public text(value: string | number | boolean): this;\n\n    public text(value?: string | number | boolean): string | this {\n        if (undefined === value) {\n            // getter\n            const el = this[0];\n            if (isNode(el)) {\n                const text = el.textContent;\n                return (null != text) ? text.trim() : '';\n            } else {\n                return '';\n            }\n        } else {\n            // setter\n            const text = isString(value) ? value : String(value);\n            for (const el of this) {\n                if (isNode(el)) {\n                    el.textContent = text;\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã«å¼æ°ã§æå®ããã³ã³ãã³ããè¿½å \n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or [[DOM]] instance.\n     *  - `ja` è¿½å ããè¦ç´ (ç¾¤), ãã­ã¹ããã¼ã(ç¾¤), HTML string, ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public append<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...contents);\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.append(...nodes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements to the end of the target.\n     * @ja éä¸è¦ç´ ãä»ã®è¦ç´ ã«è¿½å \n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public appendTo<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).append(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n    /**\n     * @en Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®åé ­ã«å¼æ°ã§æå®ããã³ã³ãã³ããæ¿å¥\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or [[DOM]] instance.\n     *  - `ja` è¿½å ããè¦ç´ (ç¾¤), ãã­ã¹ããã¼ã(ç¾¤), HTML string, ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public prepend<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...contents);\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.prepend(...nodes);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements to the beginning of the target.\n     * @ja éä¸è¦ç´ ãä»ã®è¦ç´ ã®åé ­ã«æ¿å¥\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public prependTo<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).prepend(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Insertion, Outside\n\n    /**\n     * @en Insert content, specified by the parameter, before each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®åã«æå®ãã HTML ãè¦ç´ ãæ¿å¥\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or [[DOM]] instance.\n     *  - `ja` è¿½å ããè¦ç´ (ç¾¤), ãã­ã¹ããã¼ã(ç¾¤), HTML string, ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public before<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...contents);\n        for (const el of this) {\n            if (isNode(el) && el.parentNode) {\n                for (const node of nodes) {\n                    el.parentNode.insertBefore(toNode(node), el);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements before the target.\n     * @ja éä¸ã®è¦ç´ ãæå®ããå¥è¦ç´ ã®åã«æ¿å¥\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public insertBefore<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).before(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n    /**\n     * @en Insert content, specified by the parameter, after each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®å¾ãã«æå®ãã HTML ãè¦ç´ ãæ¿å¥\n     *\n     * @param contents\n     *  - `en` element(s), text node(s), HTML string, or [[DOM]] instance.\n     *  - `ja` è¿½å ããè¦ç´ (ç¾¤), ãã­ã¹ããã¼ã(ç¾¤), HTML string, ã¾ãã¯ [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public after<T extends Element>(...contents: (Node | string | DOM<T> | NodeListOf<T>)[]): this {\n        const nodes = toNodeSet(...[...contents].reverse());\n        for (const el of this) {\n            if (isNode(el) && el.parentNode) {\n                for (const node of nodes) {\n                    el.parentNode.insertBefore(toNode(node), el.nextSibling);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Insert every element in the set of matched elements after the target.\n     * @ja éä¸ã®è¦ç´ ãæå®ããå¥è¦ç´ ã®å¾ãã«æ¿å¥\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public insertAfter<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).after(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Insertion, Around\n\n    /**\n     * @en Wrap an HTML structure around all elements in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ãæå®ããå¥è¦ç´ ã§ããããå²ã\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public wrapAll<T extends SelectorBase>(selector: DOMSelector<T>): this {\n        if (isTypeDocument(this) || isTypeWindow(this)) {\n            return this;\n        }\n\n        const el = this[0] as Node;\n\n        // The elements to wrap the target around\n        const $wrap = $(selector, el.ownerDocument).eq(0).clone(true) as DOM<Element>;\n\n        if (el.parentNode) {\n            $wrap.insertBefore(el);\n        }\n\n        $wrap.map((index: number, elem: Element) => {\n            while (elem.firstElementChild) {\n                elem = elem.firstElementChild;\n            }\n            return elem;\n        }).append(this as DOMIterable<Node> as DOM<Element>);\n\n        return this;\n    }\n\n    /**\n     * @en Wrap an HTML structure around the content of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®åå´ã, æå®ããå¥ã¨ã¬ã¡ã³ãã§ããããå²ã\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public wrapInner<T extends SelectorBase>(selector: DOMSelector<T>): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n\n        for (const el of this) {\n            const $el = $(el) as DOM<Element>;\n            const contents = $el.contents();\n            if (0 < contents.length) {\n                contents.wrapAll(selector);\n            } else {\n                $el.append(selector as Node);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Wrap an HTML structure around each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã, æå®ããå¥è¦ç´ ã§ããããå²ã\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public wrap<T extends SelectorBase>(selector: DOMSelector<T>): this {\n        if (!isTypeElement(this)) {\n            return this;\n        }\n\n        for (const el of this) {\n            const $el = $(el) as DOM<Element>;\n            $el.wrapAll(selector);\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Remove the parents of the set of matched elements from the DOM, leaving the matched elements in their place.\n     * @ja è¦ç´ ã®è¦ªã¨ã¬ã¡ã³ããåé¤\n     *\n     * @param selector\n     *  - `en` filtered by a selector.\n     *  - `ja` ãã£ã«ã¿ç¨ã»ã¬ã¯ã¿\n     */\n    public unwrap<T extends SelectorBase>(selector?: DOMSelector<T>): this {\n        const self = this as DOMIterable<Node> as DOM<Element>;\n        self.parent(selector).not('body').each((index, elem) => {\n            $(elem).replaceWith(elem.childNodes);\n        });\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Removal\n\n    /**\n     * @en Remove all child nodes of the set of matched elements from the DOM.\n     * @ja éä¸ã®è¦ç´ åã®å­è¦ç´ (ãã­ã¹ããå¯¾è±¡)ããã¹ã¦åé¤\n     */\n    public empty(): this {\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                while (el.firstChild) {\n                    el.removeChild(el.firstChild);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Remove the set of matched elements from the DOM. This method keeps event listener information.\n     * @ja è¦ç´ ã DOM ããåé¤. åé¤å¾ãã¤ãã³ããªã¹ãã¯æå¹\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public detach<T extends SelectorBase>(selector?: DOMSelector<T>): this {\n        removeElement(selector, this, true);\n        return this;\n    }\n\n    /**\n     * @en Remove the set of matched elements from the DOM.\n     * @ja è¦ç´ ã DOM ããåé¤\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public remove<T extends SelectorBase>(selector?: DOMSelector<T>): this {\n        removeElement(selector, this, false);\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Replacement\n\n    /**\n     * @en Replace each element in the set of matched elements with the provided new content and return the set of elements that was removed.\n     * @ja éä¸ã®è¦ç´ ãæå®ãããå¥ã®è¦ç´ ã HTML ã¨å·®ãæ¿ã\n     *\n     * @param newContent\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public replaceWith<T extends SelectorBase>(newContent?: DOMSelector<T>): this {\n        const elem = (() => {\n            const $dom = $(newContent);\n            if (1 === $dom.length && isNodeElement($dom[0])) {\n                return $dom[0];\n            } else {\n                const fragment = document.createDocumentFragment();\n                for (const el of $dom) {\n                    if (isNodeElement(el)) {\n                        fragment.appendChild(el);\n                    }\n                }\n                return fragment;\n            }\n        })();\n\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                el.replaceWith(elem);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Replace each target element with the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ãæå®ããå¥ã®è¦ç´ ã¨å·®ãæ¿ã\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public replaceAll<T extends SelectorBase>(selector: DOMSelector<T>): DOMResult<T> {\n        return ($(selector) as DOM).replaceWith(this as DOMIterable<Node> as DOM<Element>) as DOMResult<T>;\n    }\n}\n\nsetMixClassAttribute(DOMManipulation, 'protoExtendsOnly');\n","import {\n    PlainObject,\n    isString,\n    isNumber,\n    isArray,\n    assignValue,\n    classify,\n    dasherize,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    ElementBase,\n    dom as $,\n} from './static';\nimport {\n    DOMIterable,\n    isNodeHTMLOrSVGElement,\n    isTypeHTMLOrSVGElement,\n    isTypeDocument,\n    isTypeWindow,\n    getOffsetParent,\n} from './base';\nimport { window } from './ssr';\n\n/** @internal helper for `css()` */\nfunction ensureChainCaseProperies(props: PlainObject<string | null>): PlainObject<string | null> {\n    const retval = {};\n    for (const key in props) {\n        assignValue(retval, dasherize(key), props[key]);\n    }\n    return retval;\n}\n\n/** @internal helper for `css()` get props */\nfunction getDefaultView(el: Element): Window {\n    return (el.ownerDocument && el.ownerDocument.defaultView) || window;\n}\n\n/** @internal helper for `css()` get props */\nfunction getComputedStyleFrom(el: Element): CSSStyleDeclaration {\n    const view = getDefaultView(el);\n    return view.getComputedStyle(el);\n}\n\n/** @internal helper for css value to number */\nfunction toNumber(val: string): number {\n    return parseFloat(val) || 0;\n}\n\n/** @internal */\nconst _resolver = {\n    width: ['left', 'right'],\n    height: ['top', 'bottom'],\n};\n\n/** @internal helper for size calcution */\nfunction getPadding(style: CSSStyleDeclaration, type: 'width' | 'height'): number {\n    return toNumber(style.getPropertyValue(`padding-${_resolver[type][0]}`))\n         + toNumber(style.getPropertyValue(`padding-${_resolver[type][1]}`));\n}\n\n/** @internal helper for size calcution */\nfunction getBorder(style: CSSStyleDeclaration, type: 'width' | 'height'): number {\n    return toNumber(style.getPropertyValue(`border-${_resolver[type][0]}-width`))\n         + toNumber(style.getPropertyValue(`border-${_resolver[type][1]}-width`));\n}\n\n/** @internal helper for size calcution */\nfunction getMargin(style: CSSStyleDeclaration, type: 'width' | 'height'): number {\n    return toNumber(style.getPropertyValue(`margin-${_resolver[type][0]}`))\n         + toNumber(style.getPropertyValue(`margin-${_resolver[type][1]}`));\n}\n\n/** @internal helper for `width()` and `heigth()` */\nfunction manageSizeFor<T extends ElementBase>(dom: DOMStyles<T>, type: 'width' | 'height', value?: number | string): number | DOMStyles<T> {\n    if (null == value) {\n        // getter\n        if (isTypeWindow(dom)) {\n            // ã¹ã¯ã­ã¼ã«ãã¼ãé¤ããå¹ (clientWidth / clientHeight)\n            return dom[0].document.documentElement[`client${classify(type)}`];\n        } else if (isTypeDocument(dom)) {\n            // (scrollWidth / scrollHeight)\n            return dom[0].documentElement[`scroll${classify(type)}`];\n        } else {\n            const el = dom[0];\n            if (isNodeHTMLOrSVGElement(el)) {\n                const style = getComputedStyleFrom(el);\n                const size = toNumber(style.getPropertyValue(type));\n                if ('border-box' === style.getPropertyValue('box-sizing')) {\n                    return size - (getBorder(style, type) + getPadding(style, type));\n                } else {\n                    return size;\n                }\n            } else {\n                return 0;\n            }\n        }\n    } else {\n        // setter\n        return dom.css(type, isString(value) ? value : `${value}px`);\n    }\n}\n\n/** @internal helper for `innerWidth()` and `innerHeigth()` */\nfunction manageInnerSizeFor<T extends ElementBase>(dom: DOMStyles<T>, type: 'width' | 'height', value?: number | string): number | DOMStyles<T> {\n    if (null == value) {\n        // getter\n        if (isTypeWindow(dom) || isTypeDocument(dom)) {\n            return manageSizeFor(dom as DOMStyles<T>, type);\n        } else {\n            const el = dom[0];\n            if (isNodeHTMLOrSVGElement(el)) {\n                // (clientWidth / clientHeight)\n                return el[`client${classify(type)}`];\n            } else {\n                return 0;\n            }\n        }\n    } else if (isTypeWindow(dom) || isTypeDocument(dom)) {\n        // setter (no reaction)\n        return dom;\n    } else {\n        // setter\n        const isTextProp = isString(value);\n        for (const el of dom) {\n            if (isNodeHTMLOrSVGElement(el)) {\n                const { style, newVal } = (() => {\n                    if (isTextProp) {\n                        el.style.setProperty(type, value);\n                    }\n                    const style = getComputedStyleFrom(el);\n                    const newVal = isTextProp ? toNumber(style.getPropertyValue(type)) : value;\n                    return { style, newVal };\n                })();\n                if ('border-box' === style.getPropertyValue('box-sizing')) {\n                    el.style.setProperty(type, `${newVal + getBorder(style, type)}px`);\n                } else {\n                    el.style.setProperty(type, `${newVal - getPadding(style, type)}px`);\n                }\n            }\n        }\n        return dom;\n    }\n}\n\n/** @internal */ type ParseOuterSizeArgsResult = { includeMargin: boolean; value: number | string; };\n\n/** @internal helper for `outerWidth()` and `outerHeigth()` */\nfunction parseOuterSizeArgs(...args: unknown[]): ParseOuterSizeArgsResult {\n    let [value, includeMargin] = args;\n    if (!isNumber(value) && !isString(value)) {\n        includeMargin = !!value;\n        value = undefined;\n    }\n    return { includeMargin, value } as ParseOuterSizeArgsResult;\n}\n\n/** @internal helper for `outerWidth()` and `outerHeigth()` */\nfunction manageOuterSizeFor<T extends ElementBase>(dom: DOMStyles<T>, type: 'width' | 'height', includeMargin: boolean, value?: number | string): number | DOMStyles<T> {\n    if (null == value) {\n        // getter\n        if (isTypeWindow(dom)) {\n            // ã¹ã¯ã­ã¼ã«ãã¼ãå«ããå¹ (innerWidth / innerHeight)\n            return dom[0][`inner${classify(type)}`];\n        } else if (isTypeDocument(dom)) {\n            return manageSizeFor(dom as DOMStyles<T>, type);\n        } else {\n            const el = dom[0];\n            if (isNodeHTMLOrSVGElement(el)) {\n                // (offsetWidth / offsetHeight)\n                const offset = getOffsetSize(el, type);\n                if (includeMargin) {\n                    const style = getComputedStyleFrom(el);\n                    return offset + getMargin(style, type);\n                } else {\n                    return offset;\n                }\n            } else {\n                return 0;\n            }\n        }\n    } else if (isTypeWindow(dom) || isTypeDocument(dom)) {\n        // setter (no reaction)\n        return dom;\n    } else {\n        // setter\n        const isTextProp = isString(value);\n        for (const el of dom) {\n            if (isNodeHTMLOrSVGElement(el)) {\n                const { style, newVal } = (() => {\n                    if (isTextProp) {\n                        el.style.setProperty(type, value);\n                    }\n                    const style = getComputedStyleFrom(el);\n                    const margin = includeMargin ? getMargin(style, type) : 0;\n                    const newVal = (isTextProp ? toNumber(style.getPropertyValue(type)) : value) - margin;\n                    return { style, newVal };\n                })();\n                if ('content-box' === style.getPropertyValue('box-sizing')) {\n                    el.style.setProperty(type, `${newVal - getBorder(style, type) - getPadding(style, type)}px`);\n                } else {\n                    el.style.setProperty(type, `${newVal}px`);\n                }\n            }\n        }\n        return dom;\n    }\n}\n\n/** @internal helper for `position()` and `offset()` */\nfunction getOffsetPosition(el: Element): { top: number; left: number; } {\n    // for display none\n    if (el.getClientRects().length <= 0) {\n        return { top: 0, left: 0 };\n    }\n\n    const rect = el.getBoundingClientRect();\n    const view = getDefaultView(el);\n    return {\n        top: rect.top + view.scrollY,\n        left: rect.left + view.scrollX,\n    };\n}\n\n/**\n * @en Get offset[Width | Height]. This function will work SVGElement, too.\n * @ja offse[Width | Height] ã®åå¾. SVGElement ã«ãé©ç¨å¯è½\n */\nexport function getOffsetSize(el: HTMLOrSVGElement, type: 'width' | 'height'): number {\n    if (null != (el as HTMLElement).offsetWidth) {\n        // (offsetWidth / offsetHeight)\n        return el[`offset${classify(type)}`];\n    } else {\n        /*\n         * [NOTE] SVGElement ã¯ offsetWidth ããµãã¼ããããªã\n         *        getBoundingClientRect() ã¯ transform ã«å½±é¿ãåãããã,\n         *        å®ç¾©éã border, paddin ãå«ããå¤ãç®åºãã\n         */\n        const style = getComputedStyleFrom(el as SVGElement);\n        const size = toNumber(style.getPropertyValue(type));\n        if ('content-box' === style.getPropertyValue('box-sizing')) {\n            return size + getBorder(style, type) + getPadding(style, type);\n        } else {\n            return size;\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the style management methods.\n * @ja ã¹ã¿ã¤ã«é¢é£ã¡ã½ãããéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMStyles<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Styles\n\n    /**\n     * @en Get the computed style properties for the first element in the set of matched elements.\n     * @ja åé ­è¦ç´ ã® CSS ã«è¨­å®ããã¦ãããã­ããã£å¤ãåå¾\n     *\n     * @param name\n     *  - `en` CSS property name as chain-cace.\n     *  - `ja` CSS ãã­ããã£åããã§ã¤ã³ã±ã¼ã¹ã§æå®\n     * @returns\n     *  - `en` CSS property value string.\n     *  - `ja` CSS ãã­ããã£å¤ãæå­åã§è¿å´\n     */\n    public css(name: string): string;\n\n    /**\n     * @en Get the multiple computed style properties for the first element in the set of matched elements.\n     * @ja åé ­è¦ç´ ã® CSS ã«è¨­å®ããã¦ãããã­ããã£å¤ãè¤æ°åå¾\n     *\n     * @param names\n     *  - `en` CSS property name array as chain-cace.\n     *  - `ja` CSS ãã­ããã£åéåããã§ã¤ã³ã±ã¼ã¹ã§æå®\n     * @returns\n     *  - `en` CSS property-value object.\n     *  - `ja` CSS ãã­ããã£ãæ ¼ç´ãããªãã¸ã§ã¯ã\n     */\n    public css(names: string[]): PlainObject<string>;\n\n    /**\n     * @en Set CSS propertiy for the set of matched elements.\n     * @ja è¦ç´ ã® CSS ãã­ããã£ã«å¤ãè¨­å®\n     *\n     * @param name\n     *  - `en` CSS property name as chain-cace.\n     *  - `ja` CSS ãã­ããã£åããã§ã¤ã³ã±ã¼ã¹ã§æå®\n     * @param value\n     *  - `en` string value to set for the property. if null passed, remove property.\n     *  - `ja` è¨­å®ããå¤ãæå­åã§æå®. null æå®ã§åé¤.\n     */\n    public css(name: string, value: string | null): this;\n\n    /**\n     * @en Set one or more CSS properties for the set of matched elements.\n     * @ja è¦ç´ ã® CSS è¤æ°ã®ãã­ããã£ã«å¤ãè¨­å®\n     *\n     * @param properties\n     *  - `en` An object of property-value pairs to set.\n     *  - `ja` CSS ãã­ããã£ãæ ¼ç´ãããªãã¸ã§ã¯ã\n     */\n    public css(properties: PlainObject<string | null>): this;\n\n    public css(name: string | string[] | PlainObject<string | null>, value?: string | null): string | PlainObject<string> | this {\n        // valid elements\n        if (!isTypeHTMLOrSVGElement(this)) {\n            if (isString(name)) {\n                return null == value ? '' : this;\n            } else if (isArray(name)) {\n                return {} as PlainObject<string>;\n            } else {\n                return this;\n            }\n        }\n\n        if (isString(name)) {\n            if (undefined === value) {\n                // get property single\n                const el = this[0] as Element;\n                return getComputedStyleFrom(el).getPropertyValue(dasherize(name));\n            } else {\n                // set property single\n                const propName = dasherize(name);\n                const remove = (null === value);\n                for (const el of this) {\n                    if (isNodeHTMLOrSVGElement(el)) {\n                        if (remove) {\n                            el.style.removeProperty(propName);\n                        } else {\n                            el.style.setProperty(propName, value);\n                        }\n                    }\n                }\n                return this;\n            }\n        } else if (isArray(name)) {\n            // get multiple properties\n            const el = this[0] as Element;\n            const view = getDefaultView(el);\n            const props = {} as PlainObject<string>;\n            for (const key of name) {\n                const propName = dasherize(key);\n                props[key] = view.getComputedStyle(el).getPropertyValue(propName);\n            }\n            return props;\n        } else {\n            // set multiple properties\n            const props = ensureChainCaseProperies(name);\n            for (const el of this) {\n                if (isNodeHTMLOrSVGElement(el)) {\n                    const { style } = el;\n                    for (const propName in props) {\n                        if (null === props[propName]) {\n                            style.removeProperty(propName);\n                        } else {\n                            style.setProperty(propName, props[propName]);\n                        }\n                    }\n                }\n            }\n            return this;\n        }\n    }\n\n    /**\n     * @en Get the current computed width for the first element in the set of matched elements or set the width of every matched element.\n     * @ja æåã®è¦ç´ ã®è¨ç®æ¸ã¿æ¨ªå¹ããã¯ã»ã«åä½ã§åå¾\n     */\n    public width(): number;\n\n    /**\n     * @en Set the CSS width of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®æ¨ªå¹ãæå®\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` å¼æ°ã®å¤ãæ°å¤ã®ã¨ãã¯ `px` ã¨ãã¦æ±ã, æå­åã¯ CSS ã®ã«ã¼ã«ã«å¾ã\n     */\n    public width(value: number | string): this;\n\n    public width(value?: number | string): number | this {\n        return manageSizeFor(this, 'width', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed height for the first element in the set of matched elements or set the width of every matched element.\n     * @ja æåã®è¦ç´ ã®è¨ç®æ¸ã¿ç«å¹ããã¯ã»ã«åä½ã§åå¾\n     */\n    public height(): number;\n\n    /**\n     * @en Set the CSS height of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®ç¸¦å¹ãæå®\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` å¼æ°ã®å¤ãæ°å¤ã®ã¨ãã¯ `px` ã¨ãã¦æ±ã, æå­åã¯ CSS ã®ã«ã¼ã«ã«å¾ã\n     */\n    public height(value: number | string): this;\n\n    public height(value?: number | string): number | this {\n        return manageSizeFor(this, 'height', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed inner width for the first element in the set of matched elements, including padding but not border.\n     * @ja æåã®è¦ç´ ã®åé¨æ¨ªå¹(borderã¯é¤ããpaddingã¯å«ã)ãåå¾\n     */\n    public innerWidth(): number;\n\n    /**\n     * @en Set the CSS inner width of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®åé¨æ¨ªå¹(borderã¯é¤ããpaddingã¯å«ã)ãè¨­å®\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` å¼æ°ã®å¤ãæ°å¤ã®ã¨ãã¯ `px` ã¨ãã¦æ±ã, æå­åã¯ CSS ã®ã«ã¼ã«ã«å¾ã\n     */\n    public innerWidth(value: number | string): this;\n\n    public innerWidth(value?: number | string): number | this {\n        return manageInnerSizeFor(this, 'width', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed inner height for the first element in the set of matched elements, including padding but not border.\n     * @ja æåã®è¦ç´ ã®åé¨ç¸¦å¹(borderã¯é¤ããpaddingã¯å«ã)ãåå¾\n     */\n    public innerHeight(): number;\n\n    /**\n     * @en Set the CSS inner height of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®åé¨ç¸¦å¹(borderã¯é¤ããpaddingã¯å«ã)ãè¨­å®\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` å¼æ°ã®å¤ãæ°å¤ã®ã¨ãã¯ `px` ã¨ãã¦æ±ã, æå­åã¯ CSS ã®ã«ã¼ã«ã«å¾ã\n     */\n    public innerHeight(value: number | string): this;\n\n    public innerHeight(value?: number | string): number | this {\n        return manageInnerSizeFor(this, 'height', value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed outer width (including padding, border, and optionally margin) for the first element in the set of matched elements.\n     * @ja æåã®è¦ç´ ã®å¤é¨æ¨ªå¹(borderãpaddingãå«ã)ãåå¾. ãªãã·ã§ã³æå®ã«ãããã¼ã¸ã³é åãå«ãããã®ãåå¾å¯\n     *\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` ãã¼ã¸ã³é åãå«ããå ´åã¯ true ãæå®\n     */\n    public outerWidth(includeMargin?: boolean): number;\n\n    /**\n     * @en Set the CSS outer width of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®å¤é¨æ¨ªå¹(borderãpaddingãå«ã)ãè¨­å®\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` å¼æ°ã®å¤ãæ°å¤ã®ã¨ãã¯ `px` ã¨ãã¦æ±ã, æå­åã¯ CSS ã®ã«ã¼ã«ã«å¾ã\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` ãã¼ã¸ã³é åãå«ããå ´åã¯ true ãæå®\n     */\n    public outerWidth(value: number | string, includeMargin?: boolean): this;\n\n    public outerWidth(...args: unknown[]): number | this {\n        const { includeMargin, value } = parseOuterSizeArgs(...args);\n        return manageOuterSizeFor(this, 'width', includeMargin, value) as (number | this);\n    }\n\n    /**\n     * @en Get the current computed outer height (including padding, border, and optionally margin) for the first element in the set of matched elements.\n     * @ja æåã®è¦ç´ ã®å¤é¨ç¸¦å¹(borderãpaddingãå«ã)ãåå¾. ãªãã·ã§ã³æå®ã«ãããã¼ã¸ã³é åãå«ãããã®ãåå¾å¯\n     *\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` ãã¼ã¸ã³é åãå«ããå ´åã¯ true ãæå®\n     */\n    public outerHeight(includeMargin?: boolean): number;\n\n    /**\n     * @en Set the CSS outer height of each element in the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®å¤é¨ç¸¦å¹(borderãpaddingãå«ã)ãè¨­å®\n     *\n     * @param value\n     *  - `en` An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).\n     *  - `ja` å¼æ°ã®å¤ãæ°å¤ã®ã¨ãã¯ `px` ã¨ãã¦æ±ã, æå­åã¯ CSS ã®ã«ã¼ã«ã«å¾ã\n     * @param includeMargin\n     *  - `en` A Boolean indicating whether to include the element's margin in the calculation.\n     *  - `ja` ãã¼ã¸ã³é åãå«ããå ´åã¯ true ãæå®\n     */\n    public outerHeight(value: number | string, includeMargin?: boolean): this;\n\n    public outerHeight(...args: unknown[]): number | this {\n        const { includeMargin, value } = parseOuterSizeArgs(...args);\n        return manageOuterSizeFor(this, 'height', includeMargin, value) as (number | this);\n    }\n\n    /**\n     * @en Get the current coordinates of the first element in the set of matched elements, relative to the offset parent.\n     * @ja æåã®è¦ç´ ã®è¦ªè¦ç´ ããã®ç¸å¯¾çãªè¡¨ç¤ºä½ç½®ãè¿å´\n     */\n    public position(): { top: number; left: number; } {\n        // valid elements\n        if (!isTypeHTMLOrSVGElement(this)) {\n            return { top: 0, left: 0 };\n        }\n\n        let offset: { top: number; left: number; };\n        let parentOffset = { top: 0, left: 0 };\n        const el = this[0];\n        const { position, marginTop: mt, marginLeft: ml } = $(el).css(['position', 'marginTop', 'marginLeft']);\n        const marginTop = toNumber(mt);\n        const marginLeft = toNumber(ml);\n\n        // position:fixed elements are offset from the viewport, which itself always has zero offset\n        if ('fixed' === position) {\n            // Assume position:fixed implies availability of getBoundingClientRect\n            offset = el.getBoundingClientRect();\n        } else {\n            offset = getOffsetPosition(el);\n\n            // Account for the *real* offset parent, which can be the document or its root element\n            // when a statically positioned element is identified\n            const doc = el.ownerDocument;\n            let offsetParent = getOffsetParent(el) || doc.documentElement;\n            let $offsetParent = $(offsetParent);\n            while (offsetParent &&\n                (offsetParent === doc.body || offsetParent === doc.documentElement) &&\n                'static' === $offsetParent.css('position')\n            ) {\n                offsetParent = offsetParent.parentNode as Element;\n                $offsetParent = $(offsetParent);\n            }\n            if (offsetParent && offsetParent !== el && Node.ELEMENT_NODE === offsetParent.nodeType) {\n                // Incorporate borders into its offset, since they are outside its content origin\n                parentOffset = getOffsetPosition(offsetParent);\n                const { borderTopWidth, borderLeftWidth } = $offsetParent.css(['borderTopWidth', 'borderLeftWidth']);\n                parentOffset.top += toNumber(borderTopWidth);\n                parentOffset.left += toNumber(borderLeftWidth);\n            }\n        }\n\n        // Subtract parent offsets and element margins\n        return {\n            top: offset.top - parentOffset.top - marginTop,\n            left: offset.left - parentOffset.left - marginLeft,\n        };\n    }\n\n    /**\n     * @en Get the current coordinates of the first element in the set of matched elements, relative to the document.\n     * @ja document ãåºæºã¨ãã¦, ããããã¦ããè¦ç´ éåã®1ã¤ç®ã®è¦ç´ ã®ç¾å¨ã®åº§æ¨ãåå¾\n     */\n    public offset(): { top: number; left: number; };\n\n    /**\n     * @en Set the current coordinates of every element in the set of matched elements, relative to the document.\n     * @ja éä¸ã®è¦ç´ ã« document ãåºæºã«ããç¾å¨åº§æ¨ãè¨­å®\n     *\n     * @param coordinates\n     *  - `en` An object containing the properties `top` and `left`.\n     *  - `ja` `top`, `left` ãã­ããã£ãå«ããªãã¸ã§ã¯ããæå®\n     */\n    public offset(coordinates: { top?: number; left?: number; }): this;\n\n    public offset(coordinates?: { top?: number; left?: number; }): { top: number; left: number; } | this {\n        // valid elements\n        if (!isTypeHTMLOrSVGElement(this)) {\n            return null == coordinates ? { top: 0, left: 0 } : this;\n        } else if (null == coordinates) {\n            // get\n            return getOffsetPosition(this[0]);\n        } else {\n            // set\n            for (const el of this) {\n                const $el = $(el);\n                const props: { top?: string; left?: string; } = {};\n                const { position, top: cssTop, left: cssLeft } = $el.css(['position', 'top', 'left']);\n\n                // Set position first, in-case top/left are set even on static elem\n                if ('static' === position) {\n                    (el as HTMLElement).style.position = 'relative';\n                }\n\n                const curOffset = $el.offset();\n                const curPosition = (() => {\n                    const needCalculatePosition\n                        = ('absolute' === position || 'fixed' === position) && (cssTop + cssLeft).includes('auto');\n                    if (needCalculatePosition) {\n                        return $el.position();\n                    } else {\n                        return { top: toNumber(cssTop), left: toNumber(cssLeft) };\n                    }\n                })();\n\n                if (null != coordinates.top) {\n                    props.top = `${(coordinates.top - curOffset.top) + curPosition.top}px`;\n                }\n                if (null != coordinates.left) {\n                    props.left = `${(coordinates.left - curOffset.left) + curPosition.left}px`;\n                }\n\n                $el.css(props as PlainObject<string>);\n            }\n            return this;\n        }\n    }\n}\n\nsetMixClassAttribute(DOMStyles, 'protoExtendsOnly');\n","/* eslint-disable\n    no-invalid-this,\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    isFunction,\n    isString,\n    isArray,\n    combination,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport { CustomEvent } from './ssr';\nimport {\n    ElementBase,\n    DOM,\n    dom as $,\n} from './static';\nimport { DOMIterable, isTypeElement } from './base';\n\n/** @internal */\ninterface InternalEventListener extends EventListener {\n    origin?: EventListener;\n}\n\n/** @internal */\ninterface EventListenerHandler {\n    listener: InternalEventListener;\n    proxy: EventListener;\n}\n\n/** @internal */\ninterface BindInfo {\n    registered: Set<EventListener>;\n    handlers: EventListenerHandler[];\n}\n\n/** @internal */\ninterface BindEventContext {\n    [cookie: string]: BindInfo;\n}\n\n/** @internal */\nconst enum Const {\n    COOKIE_SEPARATOR  = '|',\n    ADDRESS_EVENT     = 0,\n    ADDRESS_NAMESPACE = 1,\n    ADDRESS_OPTIONS   = 2,\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */\nconst _eventContextMap = {\n    eventData: new WeakMap<ElementBase, unknown[]>(),\n    eventListeners: new WeakMap<ElementBase, BindEventContext>(),\n    liveEventListeners: new WeakMap<ElementBase, BindEventContext>(),\n};\n\n/** @internal query event-data from element */\nfunction queryEventData(event: Event): unknown[] {\n    const data = _eventContextMap.eventData.get(event.target as Element) || [];\n    data.unshift(event);\n    return data;\n}\n\n/** @internal register event-data with element */\nfunction registerEventData(elem: ElementBase, eventData: unknown[]): void {\n    _eventContextMap.eventData.set(elem, eventData);\n}\n\n/** @internal delete event-data by element */\nfunction deleteEventData(elem: ElementBase): void {\n    _eventContextMap.eventData.delete(elem);\n}\n\n/** @internal normalize event namespace */\nfunction normalizeEventNamespaces(event: string): string {\n    const namespaces = event.split('.');\n    const main = namespaces.shift() as string;\n    if (!namespaces.length) {\n        return main;\n    } else {\n        namespaces.sort();\n        return `${main}.${namespaces.join('.')}`;\n    }\n}\n\n/** @internal split event namespaces */\nfunction splitEventNamespaces(event: string): { type: string; namespace: string; }[] {\n    const retval: { type: string; namespace: string; }[] = [];\n\n    const namespaces = event.split('.');\n    const main = namespaces.shift() as string;\n\n    if (!namespaces.length) {\n        retval.push({ type: main, namespace: '' });\n    } else {\n        namespaces.sort();\n\n        const combos: string[][] = [];\n        for (let i = namespaces.length; i >= 1; i--) {\n            combos.push(...combination(namespaces, i));\n        }\n\n        const signature = `.${namespaces.join('.')}.`;\n        retval.push({ type: main, namespace: signature });\n        for (const ns of combos) {\n            retval.push({ type: `${main}.${ns.join('.')}`, namespace: signature });\n        }\n    }\n\n    return retval;\n}\n\n/** @internal reverse resolution event namespaces */\nfunction resolveEventNamespaces(elem: ElementBase, event: string): { type: string; namespace: string; }[] {\n    const retval: { type: string; namespace: string; }[] = [];\n\n    const namespaces = event.split('.');\n    const main = namespaces.shift() as string;\n    const type = normalizeEventNamespaces(event);\n\n    if (!namespaces.length) {\n        retval.push({ type: main, namespace: '' });\n    } else {\n        const query = (context: BindEventContext | undefined): void => {\n            if (context) {\n                const cookies = Object.keys(context);\n\n                const signatures = cookies.filter(cookie => {\n                    return type === cookie.split(Const.COOKIE_SEPARATOR)[Const.ADDRESS_EVENT];\n                }).map(cookie => {\n                    return cookie.split(Const.COOKIE_SEPARATOR)[Const.ADDRESS_NAMESPACE];\n                });\n\n                const siblings = cookies.filter(cookie => {\n                    for (const signature of signatures) {\n                        if (signature === cookie.split(Const.COOKIE_SEPARATOR)[Const.ADDRESS_NAMESPACE]) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }).map(cookie => {\n                    const seed = cookie.split(Const.COOKIE_SEPARATOR);\n                    return { type: seed[Const.ADDRESS_EVENT], namespace: seed[Const.ADDRESS_NAMESPACE] };\n                });\n\n                retval.push(...siblings);\n            }\n        };\n\n        const { eventListeners, liveEventListeners } = _eventContextMap;\n        query(eventListeners.get(elem));\n        query(liveEventListeners.get(elem));\n    }\n\n    return retval;\n}\n\n/** @internal convert event cookie from event name, selector, options */\nfunction toCookie(event: string, namespace: string, selector: string, options: AddEventListenerOptions): string {\n    const opts = { ...options };\n    delete opts.once;\n    return `${event}${Const.COOKIE_SEPARATOR}${namespace}${Const.COOKIE_SEPARATOR}${JSON.stringify(opts)}${Const.COOKIE_SEPARATOR}${selector}`;\n}\n\n/** @internal get listener handlers context by element and event */\nfunction getEventListenersHandlers(elem: ElementBase, event: string, namespace: string, selector: string, options: AddEventListenerOptions, ensure: boolean): BindInfo {\n    const eventListeners = selector ? _eventContextMap.liveEventListeners : _eventContextMap.eventListeners;\n    if (!eventListeners.has(elem)) {\n        if (ensure) {\n            eventListeners.set(elem, {});\n        } else {\n            return {\n                registered: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                handlers: [],\n            };\n        }\n    }\n\n    const context = eventListeners.get(elem) as BindEventContext;\n    const cookie = toCookie(event, namespace, selector, options);\n    if (!context[cookie]) {\n        context[cookie] = {\n            registered: new Set<EventListener>(),\n            handlers: [],\n        };\n    }\n\n    return context[cookie];\n}\n\n/** @internal query all event and handler by element, for all `off()` and `clone(true)` */\nfunction extractAllHandlers(elem: ElementBase, remove = true): { event: string; handler: EventListener; options: object; }[] {\n    const handlers: { event: string; handler: EventListener; options: object; }[] = [];\n\n    const query = (context: BindEventContext | undefined): boolean => {\n        if (context) {\n            for (const cookie of Object.keys(context)) {\n                const seed = cookie.split(Const.COOKIE_SEPARATOR);\n                const event = seed[Const.ADDRESS_EVENT];\n                const options = JSON.parse(seed[Const.ADDRESS_OPTIONS]);\n                for (const handler of context[cookie].handlers) {\n                    handlers.push({ event, handler: handler.proxy, options });\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const { eventListeners, liveEventListeners } = _eventContextMap;\n    query(eventListeners.get(elem)) && remove && eventListeners.delete(elem);\n    query(liveEventListeners.get(elem)) && remove && liveEventListeners.delete(elem);\n\n    return handlers;\n}\n\n/** @internal query namespace event and handler by element, for `off(`.${namespace}`)` */\nfunction extractNamespaceHandlers(elem: ElementBase, namespaces: string): { event: string; handler: EventListener; options: object; }[] {\n    const handlers: { event: string; handler: EventListener; options: object; }[] = [];\n\n    const names = namespaces.split('.').filter(n => !!n);\n    const namespaceFilter = (cookie: string): boolean => {\n        for (const namespace of names) {\n            if (cookie.includes(`.${namespace}.`)) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    const query = (context: BindEventContext | undefined): void => {\n        if (context) {\n            const cookies = Object.keys(context).filter(namespaceFilter);\n            for (const cookie of cookies) {\n                const seed = cookie.split(Const.COOKIE_SEPARATOR);\n                const event = seed[Const.ADDRESS_EVENT];\n                const options = JSON.parse(seed[Const.ADDRESS_OPTIONS]);\n                const { registered, handlers: _handlers } = context[cookie];\n                for (const handler of _handlers) {\n                    handlers.push({ event, handler: handler.proxy, options });\n                    registered.delete(handler.listener);\n                }\n            }\n        }\n    };\n\n    const { eventListeners, liveEventListeners } = _eventContextMap;\n    query(eventListeners.get(elem));\n    query(liveEventListeners.get(elem));\n\n    return handlers;\n}\n\n/** @internal */\ntype ParseEventArgsResult = {\n    type: string[];\n    selector: string;\n    listener: InternalEventListener;\n    options: AddEventListenerOptions;\n};\n\n/** @internal parse event args */\nfunction parseEventArgs(...args: unknown[]): ParseEventArgsResult {\n    let [type, selector, listener, options] = args;\n    if (isFunction(selector)) {\n        [type, listener, options] = args;\n        selector = undefined;\n    }\n\n    type = !type ? [] : (isArray(type) ? type : [type]);\n    selector = selector || '';\n    if (!options) {\n        options = {};\n    } else if (true === options) {\n        options = { capture: true };\n    }\n\n    return { type, selector, listener, options } as ParseEventArgsResult;\n}\n\n/** @internal */ const _noTrigger = ['resize', 'scroll'];\n\n/** @internal event-shortcut impl */\nfunction eventShortcut<T extends ElementBase>(this: DOMEvents<T>, name: string, handler?: EventListener, options?: boolean | AddEventListenerOptions): DOMEvents<T> {\n    if (null == handler) {\n        for (const el of this) {\n            if (!_noTrigger.includes(name)) {\n                if (isFunction(el[name])) {\n                    el[name]();\n                } else {\n                    $(el as any).trigger(name as any);\n                }\n            }\n        }\n        return this;\n    } else {\n        return this.on(name as any, handler as any, options);\n    }\n}\n\n/** @internal helper for `clone()` */\nfunction cloneEvent(src: Element, dst: Element): void {\n    const contexts = extractAllHandlers(src, false);\n    for (const context of contexts) {\n        dst.addEventListener(context.event, context.handler, context.options);\n    }\n}\n\n/** @internal helper for `clone()` */\nfunction cloneElement(elem: Element, withEvents: boolean, deep: boolean): Element {\n    const clone = elem.cloneNode(true) as Element;\n\n    if (withEvents) {\n        if (deep) {\n            const srcElements = elem.querySelectorAll('*');\n            const dstElements = clone.querySelectorAll('*');\n            for (const [index] of srcElements.entries()) {\n                cloneEvent(srcElements[index], dstElements[index]);\n            }\n        } else {\n            cloneEvent(elem, clone);\n        }\n    }\n\n    return clone;\n}\n\n//__________________________________________________________________________________________________//\n\n/* eslint-disable @typescript-eslint/indent */\nexport type DOMEventMap<T>\n    = T extends Window ? WindowEventMap\n    : T extends Document ? DocumentEventMap\n    : T extends HTMLBodyElement ? HTMLBodyElementEventMap\n    : T extends HTMLMediaElement ? HTMLMediaElementEventMap\n    : T extends HTMLElement ? HTMLElementEventMap\n    : T extends Element ? ElementEventMap\n    : GlobalEventHandlersEventMap;\n/* eslint-enable @typescript-eslint/indent */\n\nexport type DOMEventListener<T = HTMLElement, M extends DOMEventMap<T> = DOMEventMap<T>> = (event: M[keyof M], ...args: unknown[]) => unknown\n\nexport type EventWithNamespace<T extends DOMEventMap<unknown>> = keyof T | `${string & keyof T}.${string}`;\nexport type MakeEventType<T, M> = T extends keyof M ? keyof M : (T extends `${string & keyof M}.${infer C}` ? `${string & keyof M}.${C}` : never);\nexport type EventType<T extends DOMEventMap<unknown>> = MakeEventType<EventWithNamespace<T>, T>;\nexport type EventTypeOrNamespace<T extends DOMEventMap<unknown>> = EventType<T> | `.${string}`;\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the event managements.\n * @ja ã¤ãã³ãç®¡çãéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMEvents<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Events basic\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja è¦ç´ ã«å¯¾ãã¦, 1ã¤ã¾ãã¯è¤æ°ã®ã¤ãã³ããã³ãã©ãè¨­å® (åçè¦ç´ ã«ãæå¹)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` ã¤ãã³ãçºè¡åããã£ã«ã¿ãªã³ã°ããã»ã¬ã¯ã¿æå­å\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public on<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        selector: string,\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja è¦ç´ ã«å¯¾ãã¦, 1ã¤ã¾ãã¯è¤æ°ã®ã¤ãã³ããã³ãã©ãè¨­å® (åçè¦ç´ ã«ãæå¹)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public on<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public on(...args: unknown[]): this {\n        const { type: events, selector, listener, options } = parseEventArgs(...args);\n\n        function handleLiveEvent(e: Event): void {\n            const eventData = queryEventData(e);\n            const $target = $(e.target as Element | null) as DOM<Element>;\n            if ($target.is(selector)) {\n                listener.apply($target[0], eventData);\n            } else {\n                for (const parent of $target.parents()) {\n                    if ($(parent).is(selector)) {\n                        listener.apply(parent, eventData);\n                    }\n                }\n            }\n        }\n\n        function handleEvent(this: DOMEvents<TElement>, e: Event): void {\n            listener.apply(this, queryEventData(e));\n        }\n\n        const proxy = selector ? handleLiveEvent : handleEvent;\n\n        for (const el of this) {\n            for (const event of events) {\n                const combos = splitEventNamespaces(event);\n                for (const combo of combos) {\n                    const { type, namespace } = combo;\n                    const { registered, handlers } = getEventListenersHandlers(el, type, namespace, selector, options, true);\n                    if (registered && !registered.has(listener)) {\n                        registered.add(listener);\n                        handlers.push({\n                            listener,\n                            proxy,\n                        });\n                        el.addEventListener(type, proxy, options);\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Remove event handler. The handler designated at [[on]] or [[once]] and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja è¨­å®ããã¦ããã¤ãã³ããã³ãã©ã®è§£é¤. [[on]] ã¾ãã¯ [[once]] ã¨åæ¡ä»¶ã§æå®ãããã®ãè§£é¤ããã <br>\n     *     å¼æ°ãç¡ãå ´åã¯ãã¹ã¦ã®ãã³ãã©ãè§£é¤ããã.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` ã¤ãã³ãçºè¡åããã£ã«ã¿ãªã³ã°ããã»ã¬ã¯ã¿æå­å\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public off<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        selector: string,\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Remove event handler. The handler designated at [[on]] or [[once]] and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja è¨­å®ããã¦ããã¤ãã³ããã³ãã©ã®è§£é¤. [[on]] ã¾ãã¯ [[once]] ã¨åæ¡ä»¶ã§æå®ãããã®ãè§£é¤ããã <br>\n     *     å¼æ°ãç¡ãå ´åã¯ãã¹ã¦ã®ãã³ãã©ãè§£é¤ããã.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public off<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Remove all event handler.\n     * @ja è¨­å®ããã¦ãããã¹ã¦ã®ã¤ãã³ããã³ãã©ã®è§£é¤\n     */\n    public off(): this;\n\n    public off(...args: unknown[]): this {\n        const { type: events, selector, listener, options } = parseEventArgs(...args);\n\n        if (events.length <= 0) {\n            for (const el of this) {\n                const contexts = extractAllHandlers(el);\n                for (const context of contexts) {\n                    el.removeEventListener(context.event, context.handler, context.options);\n                }\n            }\n        } else {\n            for (const el of this) {\n                for (const event of events) {\n                    if (event.startsWith('.')) {\n                        const contexts = extractNamespaceHandlers(el, event);\n                        for (const context of contexts) {\n                            el.removeEventListener(context.event, context.handler, context.options);\n                        }\n                    } else {\n                        const combos = resolveEventNamespaces(el, event);\n                        for (const combo of combos) {\n                            const { type, namespace } = combo;\n                            const { registered, handlers } = getEventListenersHandlers(el, type, namespace, selector, options, false);\n                            if (0 < handlers.length) {\n                                for (let i = handlers.length - 1; i >= 0; i--) { // backward operation\n                                    const handler = handlers[i];\n                                    if (\n                                        (listener && handler.listener === listener) ||\n                                        (listener && handler.listener && handler.listener.origin && handler.listener.origin === listener) ||\n                                        (!listener)\n                                    ) {\n                                        el.removeEventListener(type, handler.proxy, options);\n                                        handlers.splice(i, 1);\n                                        registered.delete(handler.listener);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Add event handler function to one or more events to the elements that will be executed only once. (live event available)\n     * @ja è¦ç´ ã«å¯¾ãã¦, ä¸åº¦ã ãå¼ã³åºãããã¤ãã³ããã³ãã©ãè¨­å® (åçè¦ç´ ã«å¯¾ãã¦ãæå¹)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` ã¤ãã³ãçºè¡åããã£ã«ã¿ãªã³ã°ããã»ã¬ã¯ã¿æå­å\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public once<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        selector: string,\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Add event handler function to one or more events to the elements that will be executed only once. (live event available)\n     * @ja è¦ç´ ã«å¯¾ãã¦, ä¸åº¦ã ãå¼ã³åºãããã¤ãã³ããã³ãã©ãè¨­å® (åçè¦ç´ ã«å¯¾ãã¦ãæå¹)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public once<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public once(...args: unknown[]): this {\n        const { type, selector, listener, options } = parseEventArgs(...args);\n        const opts = { ...options, ...{ once: true } };\n\n        const self = this;\n        function onceHandler(this: DOMEvents<TElement>, ...eventArgs: unknown[]): void {\n            listener.apply(this, eventArgs);\n            self.off(type as any, selector, onceHandler, opts);\n            delete onceHandler.origin;\n        }\n        onceHandler.origin = listener as InternalEventListener | undefined;\n        return this.on(type as any, selector, onceHandler, opts);\n    }\n\n    /**\n     * @en Execute all handlers added to the matched elements for the specified event.\n     * @ja è¨­å®ããã¦ããã¤ãã³ããã³ãã©ã«å¯¾ãã¦ã¤ãã³ããçºè¡\n     *\n     * @example <br>\n     *\n     * ```ts\n     * // w/ event-namespace behaviour\n     * $('.link').on('click.hoge.piyo', (e) => { ... });\n     * $('.link').on('click.hoge',  (e) => { ... });\n     *\n     * $('.link').trigger('.hoge');           // compile error. (not fire)\n     * $('.link').trigger('click.hoge');      // fire both.\n     * $('.link').trigger('click.hoge.piyo'); // fire only first one\n     * ```\n     * @param seed\n     *  - `en` event name or event name array. / `Event` instance or `Event` instance array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå / `Event` ã¤ã³ã¹ã¿ã³ã¹ã¾ãã¯ `Event` ã¤ã³ã¹ã¿ã³ã¹éå\n     * @param eventData\n     *  - `en` optional sending data.\n     *  - `ja` éä¿¡ããä»»æã®ãã¼ã¿\n     */\n    public trigger<TEventMap extends DOMEventMap<TElement>>(\n        seed: EventType<TEventMap> | (EventType<TEventMap>)[] | Event | Event[] | (EventType<TEventMap> | Event)[],\n        ...eventData: unknown[]\n    ): this {\n        const convert = (arg: EventType<TEventMap> | Event): Event => {\n            if (isString(arg)) {\n                return new CustomEvent(normalizeEventNamespaces(arg), {\n                    detail: eventData,\n                    bubbles: true,\n                    cancelable: true,\n                });\n            } else {\n                return arg as Event;\n            }\n        };\n\n        const events = isArray(seed) ? seed : [seed];\n\n        for (const event of events) {\n            const e = convert(event);\n            for (const el of this) {\n                registerEventData(el, eventData);\n                el.dispatchEvent(e);\n                deleteEventData(el);\n            }\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Events utility\n\n    /**\n     * @en Shortcut for [[once]]('transitionend').\n     * @ja [[once]]('transitionend') ã®ã¦ã¼ãã£ãªãã£\n     *\n     * @param callback\n     *  - `en` `transitionend` handler.\n     *  - `ja` `transitionend` ãã³ãã©\n     * @param permanent\n     *  - `en` if set `true`, callback keep living until elements removed.\n     *  - `ja` `true` ãè¨­å®ããå ´å, è¦ç´ ãåé¤ãããã¾ã§ã³ã¼ã«ããã¯ãæå¹\n     */\n    public transitionEnd(callback: (event: TransitionEvent, ...args: unknown[]) => void, permanent = false): this {\n        const self = this as DOMEvents<Node> as DOMEvents<HTMLElement>;\n        function fireCallBack(this: Element, e: TransitionEvent): void {\n            if (e.target !== this) {\n                return;\n            }\n            callback.call(this, e);\n            if (!permanent) {\n                self.off('transitionend', fireCallBack);\n            }\n        }\n        isFunction(callback) && self.on('transitionend', fireCallBack);\n        return this;\n    }\n\n    /**\n     * @en Shortcut for [[once]]('animationend').\n     * @ja [[once]]('animationend') ã®ã¦ã¼ãã£ãªãã£\n     *\n     * @param callback\n     *  - `en` `animationend` handler.\n     *  - `ja` `animationend` ãã³ãã©\n     * @param permanent\n     *  - `en` if set `true`, callback keep living until elements removed.\n     *  - `ja` `true` ãè¨­å®ããå ´å, è¦ç´ ãåé¤ãããã¾ã§ã³ã¼ã«ããã¯ãæå¹\n     */\n    public animationEnd(callback: (event: AnimationEvent, ...args: unknown[]) => void, permanent = false): this {\n        const self = this as DOMEvents<Node> as DOMEvents<HTMLElement>;\n        function fireCallBack(this: Element, e: AnimationEvent): void {\n            if (e.target !== this) {\n                return;\n            }\n            callback.call(this, e);\n            if (!permanent) {\n                self.off('animationend', fireCallBack);\n            }\n        }\n        isFunction(callback) && self.on('animationend', fireCallBack);\n        return this;\n    }\n\n    /**\n     * @en Bind one or two handlers to the matched elements, to be executed when the `mouseenter` and `mouseleave` the elements.\n     * @ja 1ã¤ã¾ãã¯2ã¤ã®ãã³ãã©ãæå®ã, ä¸è´ããè¦ç´ ã® `mouseenter`, `mouseleave` ãæ¤ç¥\n     *\n     * @param handlerIn(Out)\n     *  - `en` A function to execute when the `mouseenter` the element. <br>\n     *        If handler set only one, a function to execute when the `mouseleave` the element, too.\n     *  - `ja` `mouseenter` ã¤ãã³ããã³ãã©ãæå®. <br>\n     *          å¼æ°ã1ã¤ã§ããå ´å, `mouseleave` ãã³ãã©ãå¼ã­ã\n     * @param handlerOut\n     *  - `en` A function to execute when the `mouseleave` the element.\n     *  - `ja` `mouseleave` ãã³ãã©ãæå®\n     */\n    public hover(handlerIn: DOMEventListener, handlerOut?: DOMEventListener): this {\n        handlerOut = handlerOut || handlerIn;\n        return this.mouseenter(handlerIn).mouseleave(handlerOut);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Events shortcut\n\n    /**\n     * @en Trigger or handle `click` event.\n     * @ja `click` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public click(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('click', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `dblclick` event.\n     * @ja `dblclick` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public dblclick(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('dblclick', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `blur` event.\n     * @ja `blur` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public blur(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('blur', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `focus` event.\n     * @ja `focus` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public focus(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('focus', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `focusin` event.\n     * @ja `focusin` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public focusin(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('focusin', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `focusout` event.\n     * @ja `focusout` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public focusout(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('focusout', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `keyup` event.\n     * @ja `keyup` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public keyup(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('keyup', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `keydown` event.\n     * @ja `keydown` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public keydown(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('keydown', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `keypress` event.\n     * @ja `keypress` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public keypress(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('keypress', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `submit` event.\n     * @ja `submit` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public submit(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('submit', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `contextmenu` event.\n     * @ja `contextmenu` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public contextmenu(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('contextmenu', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `change` event.\n     * @ja `change` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public change(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('change', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mousedown` event.\n     * @ja `mousedown` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mousedown(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mousedown', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mousemove` event.\n     * @ja `mousemove` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mousemove(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mousemove', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseup` event.\n     * @ja `mouseup` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mouseup(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseup', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseenter` event.\n     * @ja `mouseenter` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mouseenter(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseenter', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseleave` event.\n     * @ja `mouseleave` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mouseleave(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseleave', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseout` event.\n     * @ja `mouseout` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mouseout(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseout', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `mouseover` event.\n     * @ja `mouseover` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public mouseover(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('mouseover', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchstart` event.\n     * @ja `touchstart` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public touchstart(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchstart', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchend` event.\n     * @ja `touchend` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public touchend(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchend', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchmove` event.\n     * @ja `touchmove` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public touchmove(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchmove', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `touchcancel` event.\n     * @ja `touchcancel` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public touchcancel(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('touchcancel', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `resize` event.\n     * @ja `resize` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public resize(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('resize', handler, options);\n    }\n\n    /**\n     * @en Trigger or handle `scroll` event.\n     * @ja `scroll` ã¤ãã³ãã®çºè¡ã¾ãã¯ææ\n     *\n     * @param handler\n     *  - `en` event handler is designated. when omitting, the event is triggered.\n     *  - `ja` ã¤ãã³ããã³ãã©ãæå®. çç¥ããå ´åã¯ã¤ãã³ããçºè¡\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public scroll(handler?: DOMEventListener, options?: boolean | AddEventListenerOptions): this {\n        return eventShortcut.bind(this)('scroll', handler, options);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public: Copying\n\n    /**\n     * @en Create a deep copy of the set of matched elements.\n     * @ja éä¸ã®è¦ç´ ã®ãã£ã¼ãã³ãã¼ãä½æ\n     *\n     * @param withEvents\n     *  - `en` A Boolean indicating whether event handlers should be copied along with the elements.\n     *  - `ja` ã¤ãã³ããã³ãã©ãã³ãã¼ãããã©ãããæ±ºå®\n     * @param deep\n     *  - `en` A Boolean indicating whether event handlers for all children of the cloned element should be copied.\n     *  - `ja` booleanå¤ã§ãéä¸ã®è¦ç´ ã®ãã¹ã¦ã®å­è¦ç´ ã«å¯¾ãã¦ããä»éãã¦ããã¤ãã³ããã³ãã©ãã³ãã¼ãããã©ãããæ±ºå®\n     */\n    public clone(withEvents = false, deep = false): DOM<TElement> {\n        const self = this as DOMIterable<TElement> as DOM<TElement>;\n        if (!isTypeElement(self)) {\n            return self;\n        }\n        return self.map((index: number, el: TElement) => {\n            return cloneElement(el as Node as Element, withEvents, deep) as Node as TElement;\n        });\n    }\n}\n\nsetMixClassAttribute(DOMEvents, 'protoExtendsOnly');\n","import {\n    Nil,\n    isNumber,\n    isFunction,\n    classify,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    isWindowContext,\n    ensurePositiveNumber,\n    swing,\n} from './utils';\nimport { ElementBase } from './static';\nimport {\n    DOMIterable,\n    isNodeElement,\n    isNodeHTMLOrSVGElement,\n    isNodeDocument,\n} from './base';\nimport { getOffsetSize } from './styles';\nimport { requestAnimationFrame } from './ssr';\n\n/**\n * @en [[DOM]]`.scrollTo()` options definition.\n * @ja [[DOM]]`.scrollTo()` ã«æå®ãããªãã·ã§ã³å®ç¾©\n */\nexport interface DOMScrollOptions {\n    /**\n     * @en the vertical scroll value by pixcels.\n     * @ja ç¸¦ã¹ã¯ã­ã¼ã«éããã¯ã»ã«ã§æå®\n     */\n    top?: number;\n\n    /**\n     * @en the horizontal scroll value by pixcels.\n     * @ja æ¨ªã¹ã¯ã­ã¼ã«éããã¯ã»ã«ã§æå®\n     */\n    left?: number;\n\n    /**\n     * @en the time to spend on scroll. [msec]\n     * @ja ã¹ã¯ã­ã¼ã«ã«è²»ããæé [msec]\n     */\n    duration?: number;\n\n    /**\n     * @en timing function default: 'swing'\n     * @ja ã¿ã¤ãã³ã°é¢æ° æ¢å®å¤: 'swing'\n     */\n    easing?: 'linear' | 'swing' | ((progress: number) => number);\n\n    /**\n     * @en scroll completion callback.\n     * @ja ã¹ã¯ã­ã¼ã«å®äºã³ã¼ã«ããã¯\n     */\n    callback?: () => void;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal query scroll target element */\nfunction queryTargetElement(el: ElementBase | Nil): Element | null {\n    if (isNodeElement(el)) {\n        return el;\n    } else if (isNodeDocument(el)) {\n        return el.documentElement;\n    } else if (isWindowContext(el)) {\n        return el.document.documentElement;\n    } else {\n        return null;\n    }\n}\n\n/** @internal helper for `scrollTo()` */\nfunction parseArgs(...args: unknown[]): DOMScrollOptions {\n    const options: DOMScrollOptions = { easing: 'swing' };\n    if (1 === args.length) {\n        Object.assign(options, args[0]);\n    } else {\n        const [left, top, duration, easing, callback] = args;\n        Object.assign(options, {\n            top,\n            left,\n            duration,\n            easing,\n            callback,\n        });\n    }\n\n    options.top      = ensurePositiveNumber(options.top);\n    options.left     = ensurePositiveNumber(options.left);\n    options.duration = ensurePositiveNumber(options.duration);\n\n    return options;\n}\n\n/** @internal helper for `scrollTo()` */\nfunction execScroll(el: HTMLElement | SVGElement, options: DOMScrollOptions): void {\n    const { top, left, duration, easing, callback } = options;\n\n    const initialTop = el.scrollTop;\n    const initialLeft = el.scrollLeft;\n    let enableTop = isNumber(top);\n    let enableLeft = isNumber(left);\n\n    // non animation case\n    if (!duration) {\n        let notify = false;\n        if (enableTop && top !== initialTop) {\n            el.scrollTop = top as number;\n            notify = true;\n        }\n        if (enableLeft && left !== initialLeft) {\n            el.scrollLeft = left as number;\n            notify = true;\n        }\n        if (notify && isFunction(callback)) {\n            callback();\n        }\n        return;\n    }\n\n    const calcMetrics = (enable: boolean, base: number, initialValue: number, type: 'width' | 'height'): { max: number; new: number; initial: number; } => {\n        if (!enable) {\n            return { max: 0, new: 0, initial: 0 };\n        }\n        const maxValue = el[`scroll${classify(type)}`] - getOffsetSize(el, type);\n        const newValue = Math.max(Math.min(base, maxValue), 0);\n        return { max: maxValue, new: newValue, initial: initialValue };\n    };\n\n    const metricsTop = calcMetrics(enableTop, top as number, initialTop, 'height');\n    const metricsLeft = calcMetrics(enableLeft, left as number, initialLeft, 'width');\n\n    if (enableTop && metricsTop.new === metricsTop.initial) {\n        enableTop = false;\n    }\n    if (enableLeft && metricsLeft.new === metricsLeft.initial) {\n        enableLeft = false;\n    }\n    if (!enableTop && !enableLeft) {\n        // need not to scroll\n        return;\n    }\n\n    const calcProgress = (value: number): number => {\n        if (isFunction(easing)) {\n            return easing(value);\n        } else {\n            return 'linear' === easing ? value : swing(value);\n        }\n    };\n\n    const delta = { top: 0, left: 0 };\n    const startTime = Date.now();\n\n    const animate = (): void => {\n        const elapse = Date.now() - startTime;\n        const progress = Math.max(Math.min(elapse / duration, 1), 0);\n        const progressCoeff = calcProgress(progress);\n\n        // update delta\n        if (enableTop) {\n            delta.top = metricsTop.initial + (progressCoeff * (metricsTop.new - metricsTop.initial));\n        }\n        if (enableLeft) {\n            delta.left = metricsLeft.initial + (progressCoeff * (metricsLeft.new - metricsLeft.initial));\n        }\n\n        // check done\n        if ((enableTop && metricsTop.new > metricsTop.initial && delta.top >= metricsTop.new)       || // scroll down\n            (enableTop && metricsTop.new < metricsTop.initial && delta.top <= metricsTop.new)       || // scroll up\n            (enableLeft && metricsLeft.new > metricsLeft.initial && delta.left >= metricsLeft.new)  || // scroll right\n            (enableLeft && metricsLeft.new < metricsLeft.initial && delta.left <= metricsLeft.new)     // scroll left\n        ) {\n            // ensure destination\n            enableTop && (el.scrollTop = metricsTop.new);\n            enableLeft && (el.scrollLeft = metricsLeft.new);\n            if (isFunction(callback)) {\n                callback();\n            }\n            // release reference immediately.\n            el = null!; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            return;\n        }\n\n        // update scroll position\n        enableTop && (el.scrollTop = delta.top);\n        enableLeft && (el.scrollLeft = delta.left);\n\n        requestAnimationFrame(animate);\n    };\n\n    requestAnimationFrame(animate);\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the manipulation methods.\n * @ja ã¹ã¯ã­ã¼ã«ã¡ã½ãããéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMScroll<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Scroll\n\n    /**\n     * @en Get the number of pixels vertical scrolled.\n     * @ja ç¸¦æ¹åã¹ã¯ã­ã¼ã«ããããã¯ã»ã«æ°ãåå¾\n     */\n    public scrollTop(): number;\n\n    /**\n     * @en Set the number of pixels vertical scrolled.\n     * @ja ç¸¦æ¹åã¹ã¯ã­ã¼ã«ãããã¯ã»ã«æ°ãæå®\n     *\n     * @param position\n     *  - `en` the scroll value by pixcels.\n     *  - `ja` ã¹ã¯ã­ã¼ã«éããã¯ã»ã«ã§æå®\n     * @param duration\n     *  - `en` the time to spend on scroll. [msec]\n     *  - `ja` ã¹ã¯ã­ã¼ã«ã«è²»ããæé [msec]\n     * @param easing\n     *  - `en` timing function default: 'swing'\n     *  - `ja` ã¿ã¤ãã³ã°é¢æ° æ¢å®å¤: 'swing'\n     * @param callback\n     *  - `en` scroll completion callback.\n     *  - `ja` ã¹ã¯ã­ã¼ã«å®äºã³ã¼ã«ããã¯\n     */\n    public scrollTop(\n        position: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): this;\n\n    public scrollTop(\n        position?: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): number | this {\n        if (null == position) {\n            // getter\n            const el = queryTargetElement(this[0]);\n            return el ? el.scrollTop : 0;\n        } else {\n            // setter\n            return this.scrollTo({\n                top: position,\n                duration,\n                easing,\n                callback,\n            });\n        }\n    }\n\n    /**\n     * @en Get the number of pixels horizontal scrolled.\n     * @ja æ¨ªæ¹åã¹ã¯ã­ã¼ã«ããããã¯ã»ã«æ°ãåå¾\n     */\n    public scrollLeft(): number;\n\n    /**\n     * @en Set the number of pixels horizontal scrolled.\n     * @ja æ¨ªæ¹åã¹ã¯ã­ã¼ã«ãããã¯ã»ã«æ°ãæå®\n     *\n     * @param position\n     *  - `en` the scroll value by pixcels.\n     *  - `ja` ã¹ã¯ã­ã¼ã«éããã¯ã»ã«ã§æå®\n     * @param duration\n     *  - `en` the time to spend on scroll. [msec]\n     *  - `ja` ã¹ã¯ã­ã¼ã«ã«è²»ããæé [msec]\n     * @param easing\n     *  - `en` timing function default: 'swing'\n     *  - `ja` ã¿ã¤ãã³ã°é¢æ° æ¢å®å¤: 'swing'\n     * @param callback\n     *  - `en` scroll completion callback.\n     *  - `ja` ã¹ã¯ã­ã¼ã«å®äºã³ã¼ã«ããã¯\n     */\n    public scrollLeft(\n        position: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): this;\n\n    public scrollLeft(\n        position?: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): number | this {\n        if (null == position) {\n            // getter\n            const el = queryTargetElement(this[0]);\n            return el ? el.scrollLeft : 0;\n        } else {\n            // setter\n            return this.scrollTo({\n                left: position,\n                duration,\n                easing,\n                callback,\n            });\n        }\n    }\n\n    /**\n     * @en Set the number of pixels vertical and horizontal scrolled.\n     * @ja ç¸¦æ¨ªæ¹åã¹ã¯ã­ã¼ã«ãããã¯ã»ã«æ°ãæå®\n     *\n     * @param x\n     *  - `en` the horizontal scroll value by pixcels.\n     *  - `ja` æ¨ªã¹ã¯ã­ã¼ã«éããã¯ã»ã«ã§æå®\n     * @param y\n     *  - `en` the vertical scroll value by pixcels.\n     *  - `ja` ç¸¦ã¹ã¯ã­ã¼ã«éããã¯ã»ã«ã§æå®\n     * @param duration\n     *  - `en` the time to spend on scroll. [msec]\n     *  - `ja` ã¹ã¯ã­ã¼ã«ã«è²»ããæé [msec]\n     * @param easing\n     *  - `en` timing function default: 'swing'\n     *  - `ja` ã¿ã¤ãã³ã°é¢æ° æ¢å®å¤: 'swing'\n     * @param callback\n     *  - `en` scroll completion callback.\n     *  - `ja` ã¹ã¯ã­ã¼ã«å®äºã³ã¼ã«ããã¯\n     */\n    public scrollTo(\n        x: number,\n        y: number,\n        duration?: number,\n        easing?: 'linear' | 'swing' | ((progress: number) => number),\n        callback?: () => void\n    ): this;\n\n    /**\n     * @en Set the scroll values by optoins.\n     * @ja ãªãã·ã§ã³ãç¨ãã¦ã¹ã¯ã­ã¼ã«æå®\n     */\n    public scrollTo(options: DOMScrollOptions): this;\n\n    public scrollTo(...args: unknown[]): this {\n        const options = parseArgs(...args);\n        for (const el of this) {\n            const elem = queryTargetElement(el);\n            if (isNodeHTMLOrSVGElement(elem)) {\n                execScroll(elem, options);\n            }\n        }\n        return this;\n    }\n}\n\nsetMixClassAttribute(DOMScroll, 'protoExtendsOnly');\n","import { setMixClassAttribute, Writable } from '@cdp/core-utils';\nimport { ElementBase, DOM } from './static';\nimport {\n    DOMIterable,\n    isNodeElement,\n    isTypeElement,\n} from './base';\n\n/**\n * @en [[DOM]] effect parameter.\n * @ja [[DOM]] ã¨ãã§ã¯ãå¹æã®ãã©ã¡ã¼ã¿\n */\nexport type DOMEffectParameters = Keyframe[] | PropertyIndexedKeyframes | null;\n\n/**\n * @en [[DOM]] effect options.\n * @ja [[DOM]] ã¨ãã§ã¯ãå¹æã®ãªãã·ã§ã³\n */\nexport type DOMEffectOptions = number | KeyframeAnimationOptions;\n\n/**\n * @en [[DOM]] effect context object.\n * @ja [[DOM]] ã®ã¨ãã§ã¯ãå¹æã®ã³ã³ãã­ã¹ããªãã¸ã§ã¯ã\n */\nexport interface DOMEffectContext<TElement extends ElementBase> {\n    /**\n     * @en [[DOM]] instance that called [[animate]]() method.\n     * @ja [[animate]]() ã¡ã½ãããå®è¡ãã [[DOM]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    readonly dom: DOM<TElement>;\n\n    /**\n     * @en `Element` and `Animation` instance map by execution [[animate]]() method at this time.\n     * @ja ä»åå®è¡ãã `Element` ã¨ `Animation` ã¤ã³ã¹ã¿ã³ã¹ã®ããã\n     */\n    readonly animations: Map<TElement, Animation>;\n\n    /**\n     * @en The current finished Promise for this animation.\n     * @ja å¯¾è±¡ã¢ãã¡ã¼ã·ã§ã³ã®çµäºæã«çºç«ãã `Promise` ãªãã¸ã§ã¯ã\n     */\n    readonly finished: Promise<DOMEffectContext<TElement>>;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */ const _animContextMap = new WeakMap<Element, Set<Animation>>();\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Mixin base class which concentrated the animation/effect methods.\n * @ja ã¢ãã¡ã¼ã·ã§ã³/ã¨ãã§ã¯ãæä½ã¡ã½ãããéç´ãã Mixin Base ã¯ã©ã¹\n */\nexport class DOMEffects<TElement extends ElementBase> implements DOMIterable<TElement> {\n\n///////////////////////////////////////////////////////////////////////\n// imprements: DOMIterable<T>\n\n    readonly [n: number]: TElement;\n    readonly length!: number;\n    [Symbol.iterator]!: () => Iterator<TElement>;\n    entries!: () => IterableIterator<[number, TElement]>;\n\n///////////////////////////////////////////////////////////////////////\n// public: Effects\n\n    /**\n     * @en Start animation by `Web Animation API`.\n     * @ja `Web Animation API` ãç¨ãã¦ã¢ãã¡ã¼ã·ã§ã³ãå®è¡\n     */\n    public animate(params: DOMEffectParameters, options: DOMEffectOptions): DOMEffectContext<TElement> {\n        const result = {\n            dom: this as DOMIterable<TElement> as DOM<TElement>,\n            animations: new Map<TElement, Animation>(),\n        } as Writable<DOMEffectContext<TElement>>;\n\n        if (!isTypeElement(this)) {\n            result.finished = Promise.resolve(result);\n            return result;\n        }\n\n        for (const el of this) {\n            if (isNodeElement(el)) {\n                const anim = el.animate(params, options);\n                const context = _animContextMap.get(el) || new Set();\n                context.add(anim);\n                _animContextMap.set(el, context);\n                result.animations.set(el as Node as TElement, anim);\n            }\n        }\n\n        result.finished = Promise.all([...result.animations.values()].map(anim => anim.finished)).then(() => result);\n\n        return result;\n    }\n\n    /**\n     * @en Cancel current running animation.\n     * @ja ç¾å¨å®è¡ãã¦ããã¢ãã¡ã¼ã·ã§ã³ãä¸­æ­¢\n     */\n    public cancel(): this {\n        if (isTypeElement(this)) {\n            for (const el of this) {\n                const context = _animContextMap.get(el as Element);\n                if (context) {\n                    for (const animation of context) {\n                        animation.cancel();\n                    }\n                    _animContextMap.delete(el as Element);\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Finish current running animation.\n     * @ja ç¾å¨å®è¡ãã¦ããã¢ãã¡ã¼ã·ã§ã³ãçµäº\n     */\n    public finish(): this {\n        if (isTypeElement(this)) {\n            for (const el of this) {\n                const context = _animContextMap.get(el as Element);\n                if (context) {\n                    for (const animation of context) {\n                        animation.finish();\n                    }\n                    // finish ã§ã¯ç ´æ£ããªã\n                }\n            }\n        }\n        return this;\n    }\n}\n\nsetMixClassAttribute(DOMEffects, 'protoExtendsOnly');\n","import {\n    Class,\n    mixins,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    ElementBase,\n    SelectorBase,\n    ElementifySeed,\n    QueryContext,\n    elementify,\n} from './utils';\nimport { DOMBase } from './base';\nimport { DOMAttributes } from './attributes';\nimport { DOMTraversing } from './traversing';\nimport { DOMManipulation } from './manipulation';\nimport { DOMStyles } from './styles';\nimport { DOMEvents } from './events';\nimport { DOMScroll } from './scroll';\nimport { DOMEffects } from './effects';\n\ntype DOMFeatures<T extends ElementBase>\n    = DOMBase<T>\n    & DOMAttributes<T>\n    & DOMTraversing<T>\n    & DOMManipulation<T>\n    & DOMStyles<T>\n    & DOMEvents<T>\n    & DOMScroll<T>\n    & DOMEffects<T>;\n\n/**\n * @en [[DOM]] plugin method definition.\n * @ja [[DOM]] ãã©ã°ã¤ã³ã¡ã½ããå®ç¾©\n *\n * @note\n *  - ãã©ã°ã¤ã³æ¡å¼µå®ç¾©ã¯ãã®ã¤ã³ã¿ã¼ãã§ã¤ã¹ãã¼ã¸ãã.\n *  - TypeScript 3.7 æç¹ã§, module interface ã®ãã¼ã¸ã¯ module ã®å®å¨ãªãã¹ãå¿è¦ã¨ãããã,\n *    æ¬ã¬ãã¸ããªã§ã¯ bundle ãã `dist/dom.d.ts` ãæä¾ãã.\n *\n * @see\n *  - https://github.com/microsoft/TypeScript/issues/33326\n *  - https://stackoverflow.com/questions/57848134/trouble-updating-an-interface-using-declaration-merging\n */\nexport interface DOMPlugin { } // eslint-disable-line @typescript-eslint/no-empty-interface\n\n/**\n * @en This interface provides DOM operations like `jQuery` library.\n * @ja `jQuery` ã®ãããªDOM æä½ãæä¾ããã¤ã³ã¿ã¼ãã§ã¤ã¹\n */\nexport interface DOM<T extends ElementBase = HTMLElement> extends DOMFeatures<T>, DOMPlugin { }\n\nexport type DOMSelector<T extends SelectorBase = HTMLElement> = ElementifySeed<T> | DOM<T extends ElementBase ? T : never>;\nexport type DOMResult<T extends SelectorBase> = T extends DOM<ElementBase> ? T : (T extends ElementBase ? DOM<T> : DOM<HTMLElement>);\nexport type DOMIterateCallback<T extends ElementBase> = (index: number, element: T) => boolean | void;\n\n/**\n * @en This class provides DOM operations like `jQuery` library.\n * @ja `jQuery` ã®ãããªDOM æä½ãæä¾\n *\n * UNSUPPORTED METHOD LIST\n *\n * [Traversing]\n *  .addBack()\n *  .end()\n *\n * [Effects]\n * .show()\n * .hide()\n * .toggle()\n * .stop()\n * .clearQueue()\n * .delay()\n * .dequeue()\n * .fadeIn()\n * .fadeOut()\n * .fadeTo()\n * .fadeToggle()\n * .queue()\n * .slideDown()\n * .slideToggle()\n * .slideUp()\n */\nexport class DOMClass extends mixins(\n    DOMBase,\n    DOMAttributes,\n    DOMTraversing,\n    DOMManipulation,\n    DOMStyles,\n    DOMEvents,\n    DOMScroll,\n    DOMEffects,\n) {\n    /**\n     * private constructor\n     *\n     * @param elements\n     *  - `en` operation targets `Element` array.\n     *  - `ja` æä½å¯¾è±¡ã® `Element` éå\n     */\n    private constructor(elements: ElementBase[]) {\n        super(elements);\n        // all source classes have no constructor.\n    }\n\n    /**\n     * @en Create [[DOM]] instance from `selector` arg.\n     * @ja æå®ããã `selector` [[DOM]] ã¤ã³ã¹ã¿ã³ã¹ãä½æ\n     *\n     * @internal\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n     *  - `ja` [[DOM]] ã®ãã¨ã«ãªããªãã¸ã§ã¯ã(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     * @param context\n     *  - `en` Set using `Document` context. When being un-designating, a fixed value of the environment is used.\n     *  - `ja` ä½¿ç¨ãã `Document` ã³ã³ãã­ã¹ããæå®. æªæå®ã®å ´åã¯ç°å¢ã®æ¢å®å¤ãä½¿ç¨ããã.\n     * @returns [[DOM]] instance.\n     */\n    public static create<T extends SelectorBase>(selector?: DOMSelector<T>, context?: QueryContext | null): DOMResult<T> {\n        if (selector && !context) {\n            if (isDOMClass(selector)) {\n                return selector as DOMResult<T>;\n            }\n        }\n        return new DOMClass((elementify(selector as ElementifySeed<T>, context))) as unknown as DOMResult<T>;\n    }\n}\n\n// mixin ã«ãã `instanceof` ã¯ç¡å¹ã«è¨­å®\nsetMixClassAttribute(DOMClass as unknown as Class, 'instanceOf', null);\n\n/**\n * @en Check the value-type is [[DOM]].\n * @ja [[DOM]] åã§ãããå¤å®\n *\n * @param x\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isDOMClass(x: unknown): x is DOM {\n    return x instanceof DOMClass;\n}\n","import { setup } from './static';\nimport { DOMClass } from './class';\n\n// init for static\nsetup(DOMClass.prototype, DOMClass.create);\n\nexport * from './exports';\nexport { default as default } from './exports';\n","import { safe } from '@cdp/core-utils';\n\n/* ts4.7+ patch: non internal */\n/** !internal */  const navigator        = safe(globalThis.navigator);\n/** !internal */  const screen           = safe(globalThis.screen);\n/** !internal */  const devicePixelRatio = safe(globalThis.devicePixelRatio);\n\n/** @internal */ export const context = { navigator, screen, devicePixelRatio };\n","import { Writable, getGlobal } from '@cdp/core-utils';\nimport { context as globalContext } from './ssr';\n\n/** @internal ts4.7+ patch */\nconst { navigator, screen, devicePixelRatio } = globalContext;\n\n/** @internal */\nconst enum Threshold {\n    TABLET_MIN_WIDTH = 600, // fallback detection value\n}\n\n/**\n * @en Platform information.\n * @ja ãã©ãããã©ã¼ã æå ±\n *\n * @see other framework implementation <br>\n *  - Framework7\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-device.js\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-device.d.ts\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-support.js\n *    - https://github.com/framework7io/framework7/blob/master/src/core/shared/get-support.d.ts\n *    - https://github.com/framework7io/framework7/blob/v4/src/core/utils/device.js    // check legacy device: iPhoneX etc\n *    - https://github.com/framework7io/framework7/blob/v4/src/core/utils/device.d.ts\n *  - OnsenUI\n *    - https://github.com/OnsenUI/OnsenUI/blob/master/core/src/ons/platform.js\n *  - Web\n *    - https://www.bit-hive.com/articles/20190820\n */\nexport interface Platform {\n    /** true for iOS info */\n    readonly ios: boolean;\n    /** true for Android info */\n    readonly android: boolean;\n    /** true for Android Chrome */\n    readonly androidChrome: boolean;\n    /** true for desktop browser */\n    readonly desktop: boolean;\n    /** true for mobile info */\n    readonly mobile: boolean;\n    /** true for smart phone (including iPod) info */\n    readonly phone: boolean;\n    /** true for tablet info */\n    readonly tablet: boolean;\n    /** true for iPhone */\n    readonly iphone: boolean;\n    /** true for iPhoneX */\n    readonly iphoneX: boolean;\n    /** true for iPod */\n    readonly ipod: boolean;\n    /** true for iPad */\n    readonly ipad: boolean;\n    /** true for MS Edge browser */\n    readonly edge: boolean;\n    /** true for Internet Explorer browser*/\n    readonly ie: boolean;\n    /** true for FireFox browser*/\n    readonly firefox: boolean;\n    /** true for desktop MacOS */\n    readonly macos: boolean;\n    /** true for desktop Windows */\n    readonly windows: boolean;\n    /** true when app running in cordova environment */\n    readonly cordova: boolean;\n    /** true when app running in electron environment */\n    readonly electron: boolean;\n    /** Contains OS can be ios, android or windows (for Windows Phone) */\n    readonly os: string;\n    /** Contains OS version, e.g. 11.2.0 */\n    readonly osVersion: string | null | undefined;\n    /** Device pixel ratio */\n    readonly pixelRatio: number;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal */\nconst maybeTablet = (width: number, height: number): boolean => {\n    return (Threshold.TABLET_MIN_WIDTH <= Math.min(width, height));\n};\n\n/** @internal */\nconst supportTouch = (): boolean => {\n    return !!((navigator.maxTouchPoints > 0) || ('ontouchstart' in globalThis));\n};\n\n/**\n * @internal\n * @see Screen.orientation <br>\n *  - https://developer.mozilla.org/ja/docs/Web/API/Screen/orientation\n */\nconst supportOrientation = (ua: string): boolean => {\n    return ('orientation' in globalThis) || (0 <= ua.indexOf('Windows Phone'));\n};\n\n/**\n * @en Query platform information.\n * @ja ãã©ãããã©ã¼ã æå ±ã®åå¾\n *\n * @param context\n *  - `en` given `Navigator`, `Screen`, `devicePixelRatio` information.\n *  - `ja` ç°å¢ã® `Navigator`, `Screen`, `devicePixelRatio` ãæå®\n */\nexport const queryPlatform = (\n    context?: {\n        navigator?: { userAgent: string; platform: string; standalone?: boolean; };\n        screen?: { width: number; height: number; };\n        devicePixelRatio?: number;\n    }\n): Platform => {\n    context = context || { navigator, screen, devicePixelRatio };\n    const info = {\n        ios: false,\n        android: false,\n        androidChrome: false,\n        desktop: false,\n        mobile: false,\n        phone: false,\n        tablet: false,\n        iphone: false,\n        iphoneX: false,\n        ipod: false,\n        ipad: false,\n        edge: false,\n        ie: false,\n        firefox: false,\n        macos: false,\n        windows: false,\n        cordova: !!(getGlobal()['cordova']),\n        electron: false,\n    } as unknown as Writable<Platform>;\n\n    const { userAgent: ua, platform: os, standalone } = context.navigator || navigator as { userAgent: string; platform: string; standalone?: boolean; };\n    const { width: screenWidth, height: screenHeight } = context.screen || screen;\n    const pixelRatio = context.devicePixelRatio;\n\n    const android  = /(Android);?[\\s/]+([\\d.]+)?/.exec(ua);\n    let   ipad     = /(iPad).*OS\\s([\\d_]+)/.exec(ua);\n    const ipod     = /(iPod)(.*OS\\s([\\d_]+))?/.exec(ua);\n    let   iphone   = !ipad && /(iPhone\\sOS|iOS)\\s([\\d_]+)/.exec(ua);\n    const ie       = 0 <= ua.indexOf('MSIE ') || 0 <= ua.indexOf('Trident/');\n    const edge     = 0 <= ua.indexOf('Edge/');\n    const firefox  = 0 <= ua.indexOf('Gecko/') && 0 <= ua.indexOf('Firefox/');\n    const windows  = 'Win32' === os;\n    let   macos    = 'MacIntel' === os;\n    const electron = ua.toLowerCase().startsWith('electron');\n\n    // iPhone(X) / iPad(Pro)Desktop Mode\n    if (!iphone && !ipad\n        && macos\n        && supportTouch()\n        && (undefined !== standalone\n//            (1024 === screenWidth && 1366 === screenHeight) // Pro 12.9 portrait\n//         || (1366 === screenWidth && 1024 === screenHeight) // Pro 12.9 landscape\n//         || ( 834 === screenWidth && 1194 === screenHeight) // Pro 11 portrait\n//         || (1194 === screenWidth &&  834 === screenHeight) // Pro 11 landscape\n//         || ( 834 === screenWidth && 1112 === screenHeight) // Pro 10.5 portrait\n//         || (1112 === screenWidth &&  834 === screenHeight) // Pro 10.5 landscape\n//         || ( 768 === screenWidth && 1024 === screenHeight) // other portrait\n//         || (1024 === screenWidth &&  768 === screenHeight) // other landscape\n        )\n    ) {\n        const regex = /(Version)\\/([\\d.]+)/.exec(ua);\n        if (maybeTablet(screenWidth, screenHeight)) {\n            ipad = regex;\n        } else {\n            iphone = regex;\n        }\n        macos = false;\n    }\n\n    info.ie = ie;\n    info.edge = edge;\n    info.firefox = firefox;\n\n    // Android\n    if (android && !windows) {\n        info.os = 'android';\n        info.osVersion = android[2];\n        info.android = true;\n        info.androidChrome = 0 <= ua.toLowerCase().indexOf('chrome');\n        if (0 <= ua.indexOf('Mobile')) {\n            info.phone = true;\n        } else {\n            info.tablet = true;\n        }\n    }\n    if (ipad || iphone || ipod) {\n        info.os = 'ios';\n        info.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n        info.osVersion = iphone[2].replace(/_/g, '.');\n        info.phone = true;\n        info.iphone = true;\n        // iPhone X\n        if (\n            (375 === screenWidth && 812 === screenHeight) // X, XS portrait\n         || (812 === screenWidth && 375 === screenHeight) // X, XS landscape\n         || (414 === screenWidth && 896 === screenHeight) // XS Max, XR portrait\n         || (896 === screenWidth && 414 === screenHeight) // XS Max, XR landscape\n        ) {\n            info.iphoneX = true;\n        }\n    }\n    if (ipad) {\n        info.osVersion = ipad[2].replace(/_/g, '.');\n        info.tablet = true;\n        info.ipad = true;\n    }\n    if (ipod) {\n        info.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        info.phone = true;\n        info.ipod = true;\n    }\n\n    // Desktop\n    info.desktop = !supportOrientation(ua);\n    if (info.desktop) {\n        info.electron = electron;\n        info.macos    = macos;\n        info.windows  = windows;\n        info.macos && (info.os = 'macos');\n        info.windows && (info.os = 'windows');\n    }\n\n    // Mobile\n    info.mobile = !info.desktop;\n    if (info.mobile && !info.phone && !info.tablet) {\n        if (maybeTablet(screenWidth, screenHeight)) {\n            info.tablet = true;\n        } else {\n            info.phone = true;\n        }\n    }\n\n    // Pixel Ratio\n    info.pixelRatio = pixelRatio || 1;\n\n    return info;\n};\n\n/**\n * @en Platform information on runtime.\n * @ja ã©ã³ã¿ã¤ã ã®ãã©ãããã©ã¼ã æå ±\n */\nexport const platform = queryPlatform();\n","const consoleLogger = {\n  type: 'logger',\n\n  log(args) {\n    this.output('log', args);\n  },\n\n  warn(args) {\n    this.output('warn', args);\n  },\n\n  error(args) {\n    this.output('error', args);\n  },\n\n  output(type, args) {\n    /* eslint no-console: 0 */\n    if (console && console[type]) console[type].apply(console, args);\n  },\n};\n\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n\n  setDebug(bool) {\n    this.debug = bool;\n  }\n\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{ prefix: `${this.prefix}:${moduleName}:` },\n      ...this.options,\n    });\n  }\n\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\n\nexport default new Logger();\n","class EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n\n  on(events, listener) {\n    events.split(' ').forEach((event) => {\n      this.observers[event] = this.observers[event] || [];\n      this.observers[event].push(listener);\n    });\n    return this;\n  }\n\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n\n    this.observers[event] = this.observers[event].filter((l) => l !== listener);\n  }\n\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = [].concat(this.observers[event]);\n      cloned.forEach((observer) => {\n        observer(...args);\n      });\n    }\n\n    if (this.observers['*']) {\n      const cloned = [].concat(this.observers['*']);\n      cloned.forEach((observer) => {\n        observer.apply(observer, [event, ...args]);\n      });\n    }\n  }\n}\n\nexport default EventEmitter;\n","// http://lea.verou.me/2016/12/resolve-promises-externally-with-this-one-weird-trick/\nexport function defer() {\n  let res;\n  let rej;\n\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n\n  promise.resolve = res;\n  promise.reject = rej;\n\n  return promise;\n}\n\nexport function makeString(object) {\n  if (object == null) return '';\n  /* eslint prefer-template: 0 */\n  return '' + object;\n}\n\nexport function copy(a, s, t) {\n  a.forEach((m) => {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  const stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n\n    const key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    // prevent prototype pollution\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift()),\n  };\n}\n\nexport function setPath(object, path, newValue) {\n  const { obj, k } = getLastOfPath(object, path, Object);\n\n  obj[k] = newValue;\n}\n\nexport function pushPath(object, path, newValue, concat) {\n  const { obj, k } = getLastOfPath(object, path, Object);\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\n\nexport function getPath(object, path) {\n  const { obj, k } = getLastOfPath(object, path);\n\n  if (!obj) return undefined;\n  return obj[k];\n}\n\nexport function getPathWithDefaults(data, defaultData, key) {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  // Fallback to default values\n  return getPath(defaultData, key);\n}\n\nexport function deepExtend(target, source, overwrite) {\n  /* eslint no-restricted-syntax: 0 */\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        // If we reached a leaf string in target or source then replace with source or skip depending on the 'overwrite' switch\n        if (\n          typeof target[prop] === 'string' ||\n          target[prop] instanceof String ||\n          typeof source[prop] === 'string' ||\n          source[prop] instanceof String\n        ) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\n\nexport function regexEscape(str) {\n  /* eslint no-useless-escape: 0 */\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n\n/* eslint-disable */\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n};\n/* eslint-enable */\n\nexport function escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, (s) => _entityMap[s]);\n  }\n\n  return data;\n}\n\nexport const isIE10 =\n  typeof window !== 'undefined' &&\n  window.navigator && // https://github.com/i18next/i18next/issues/1778\n  typeof window.navigator.userAgentData === 'undefined' &&\n  window.navigator.userAgent &&\n  window.navigator.userAgent.indexOf('MSIE') > -1;\n\nconst chars = [' ', ',', '?', '!', ';'];\nexport function looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(\n    (c) => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0,\n  );\n  if (possibleChars.length === 0) return true;\n  const r = new RegExp(`(${possibleChars.map((c) => (c === '?' ? '\\\\?' : c)).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\n","import EventEmitter from './EventEmitter.js';\nimport * as utils from './utils.js';\n\nfunction deepFind(obj, path, keySeparator = '.') {\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const paths = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < paths.length; ++i) {\n    if (!current) return undefined;\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n    if (current[paths[i]] === undefined) {\n      let j = 2;\n      let p = paths.slice(i, i + j).join(keySeparator);\n      let mix = current[p];\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n      if (mix === undefined) return undefined;\n      if (mix === null) return null;\n      if (path.endsWith(p)) {\n        if (typeof mix === 'string') return mix;\n        if (p && typeof mix[p] === 'string') return mix[p];\n      }\n      const joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n    current = current[paths[i]];\n  }\n  return current;\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = { ns: ['translation'], defaultNS: 'translation' }) {\n    super();\n    if (utils.isIE10) {\n      EventEmitter.call(this); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    const ignoreJSONStructure =\n      options.ignoreJSONStructure !== undefined\n        ? options.ignoreJSONStructure\n        : this.options.ignoreJSONStructure;\n\n    let path = [lng, ns];\n    if (key && typeof key !== 'string') path = path.concat(key);\n    if (key && typeof key === 'string')\n      path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    }\n\n    const result = utils.getPath(this.data, path);\n    if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n\n  addResource(lng, ns, key, value, options = { silent: false }) {\n    let keySeparator = this.options.keySeparator;\n    if (keySeparator === undefined) keySeparator = '.';\n\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n\n    utils.setPath(this.data, path, value);\n\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n\n  addResources(lng, ns, resources, options = { silent: false }) {\n    /* eslint no-restricted-syntax: 0 */\n    for (const m in resources) {\n      if (\n        typeof resources[m] === 'string' ||\n        Object.prototype.toString.apply(resources[m]) === '[object Array]'\n      )\n        this.addResource(lng, ns, m, resources[m], { silent: true });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = { silent: false }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n\n    this.addNamespaces(ns);\n\n    let pack = utils.getPath(this.data, path) || {};\n\n    if (deep) {\n      utils.deepExtend(pack, resources, overwrite);\n    } else {\n      pack = { ...pack, ...resources };\n    }\n\n    utils.setPath(this.data, path, pack);\n\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n\n    this.emit('removed', lng, ns);\n  }\n\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n\n    // COMPATIBILITY: remove extend in v2.1.0\n    if (this.options.compatibilityAPI === 'v1') return { ...{}, ...this.getResource(lng, ns) };\n\n    return this.getResource(lng, ns);\n  }\n\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = (data && Object.keys(data)) || [];\n    return !!n.find((v) => data[v] && Object.keys(data[v]).length > 0);\n  }\n\n  toJSON() {\n    return this.data;\n  }\n}\n\nexport default ResourceStore;\n","export default {\n  processors: {},\n\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n\n  handle(processors, value, key, options, translator) {\n    processors.forEach((processor) => {\n      if (this.processors[processor])\n        value = this.processors[processor].process(value, key, options, translator);\n    });\n\n    return value;\n  },\n};\n","import baseLogger from './logger.js';\nimport EventEmitter from './EventEmitter.js';\nimport postProcessor from './postProcessor.js';\nimport * as utils from './utils.js';\n\nconst checkedLoadedFor = {};\n\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    if (utils.isIE10) {\n      EventEmitter.call(this); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    utils.copy(\n      [\n        'resourceStore',\n        'languageUtils',\n        'pluralResolver',\n        'interpolator',\n        'backendConnector',\n        'i18nFormat',\n        'utils',\n      ],\n      services,\n      this,\n    );\n\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n\n    this.logger = baseLogger.create('translator');\n  }\n\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n\n  exists(key, options = { interpolation: {} }) {\n    if (key === undefined || key === null) {\n      return false;\n    }\n\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n\n  extractFromKey(key, options) {\n    let nsSeparator =\n      options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage =\n      !this.options.userDefinedKeySeparator &&\n      !options.keySeparator &&\n      !this.options.userDefinedNsSeparator &&\n      !options.nsSeparator &&\n      !utils.looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces,\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (\n        nsSeparator !== keySeparator ||\n        (nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1)\n      )\n        namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    return {\n      key,\n      namespaces,\n    };\n  }\n\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      /* eslint prefer-rest-params: 0 */\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (!options) options = {};\n\n    // non valid keys handling\n    if (keys === undefined || keys === null /* || keys === ''*/) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n\n    const returnDetails =\n      options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n\n    // separators\n    const keySeparator =\n      options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n    // get namespace(s)\n    const { key, namespaces } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n\n    // return key on CIMode\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode =\n      options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          resolved.res = `${namespace}${nsSeparator}${key}`;\n          return resolved;\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n\n      if (returnDetails) {\n        resolved.res = key;\n        return resolved;\n      }\n      return key;\n    }\n\n    // resolve from store\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = (resolved && resolved.usedKey) || key;\n    const resExactUsedKey = (resolved && resolved.exactUsedKey) || key;\n\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays =\n      options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n\n    // object\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject =\n      typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n    if (\n      handleAsObjectInI18nFormat &&\n      res &&\n      handleAsObject &&\n      noObject.indexOf(resType) < 0 &&\n      !(typeof joinArrays === 'string' && resType === '[object Array]')\n    ) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler\n          ? this.options.returnedObjectHandler(resUsedKey, res, { ...options, ns: namespaces })\n          : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          return resolved;\n        }\n        return r;\n      }\n\n      // if we got a separator we loop over children - else we just return object as is\n      // as having it set to false means no hierarchy so no lookup for nested values\n      if (keySeparator) {\n        const resTypeIsArray = resType === '[object Array]';\n        const copy = resTypeIsArray ? [] : {}; // apply child translation on a copy\n\n        /* eslint no-restricted-syntax: 0 */\n        let newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{ joinArrays: false, ns: namespaces },\n            });\n            if (copy[m] === deepKey) copy[m] = res[m]; // if nothing found use orginal value as fallback\n          }\n        }\n        res = copy;\n      }\n    } else if (\n      handleAsObjectInI18nFormat &&\n      typeof joinArrays === 'string' &&\n      resType === '[object Array]'\n    ) {\n      // array special treatment\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      // string, empty or null\n      let usedDefault = false;\n      let usedKey = false;\n\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling\n        ? this.pluralResolver.getSuffix(lng, options.count, options)\n        : '';\n      const defaultValue = options[`defaultValue${defaultValueSuffix}`] || options.defaultValue;\n\n      // fallback value\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n\n      const missingKeyNoValueFallbackToKey =\n        options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n\n      // save missing\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(\n          updateMissing ? 'updateKey' : 'missingKey',\n          lng,\n          namespace,\n          key,\n          updateMissing ? defaultValue : res,\n        );\n        if (keySeparator) {\n          const fk = this.resolve(key, { ...options, keySeparator: false });\n          if (fk && fk.res)\n            this.logger.warn(\n              'Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.',\n            );\n        }\n\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(\n          this.options.fallbackLng,\n          options.lng || this.language,\n        );\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing =\n            hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(\n              l,\n              namespace,\n              k,\n              defaultForMissing,\n              updateMissing,\n              options,\n            );\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(\n              l,\n              namespace,\n              k,\n              defaultForMissing,\n              updateMissing,\n              options,\n            );\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach((language) => {\n              this.pluralResolver.getSuffixes(language, options).forEach((suffix) => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n\n      // extend\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n\n      // append namespace if still key\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey)\n        res = `${namespace}:${key}`;\n\n      // parseMissingKeyHandler\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(\n            this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key,\n            usedDefault ? res : undefined,\n          );\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n\n    // return\n    if (returnDetails) {\n      resolved.res = res;\n      return resolved;\n    }\n    return res;\n  }\n\n  extendTranslation(res, key, options, resolved, lastKey) {\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(\n        res,\n        { ...this.options.interpolation.defaultVariables, ...options },\n        resolved.usedLng,\n        resolved.usedNS,\n        resolved.usedKey,\n        { resolved },\n      );\n    } else if (!options.skipInterpolation) {\n      // i18next.parsing\n      if (options.interpolation)\n        this.interpolator.init({\n          ...options,\n          ...{ interpolation: { ...this.options.interpolation, ...options.interpolation } },\n        });\n      const skipOnVariables =\n        typeof res === 'string' &&\n        (options && options.interpolation && options.interpolation.skipOnVariables !== undefined\n          ? options.interpolation.skipOnVariables\n          : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        // has nesting aftbeforeer interpolation\n        nestBef = nb && nb.length;\n      }\n\n      // interpolate\n      let data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n      if (this.options.interpolation.defaultVariables)\n        data = { ...this.options.interpolation.defaultVariables, ...data };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n\n      // nesting\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        // has nesting after interpolation\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (options.nest !== false)\n        res = this.interpolator.nest(\n          res,\n          (...args) => {\n            if (lastKey && lastKey[0] === args[0] && !options.context) {\n              this.logger.warn(\n                `It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`,\n              );\n              return null;\n            }\n            return this.translate(...args, key);\n          },\n          options,\n        );\n\n      if (options.interpolation) this.interpolator.reset();\n    }\n\n    // post process\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n    if (\n      res !== undefined &&\n      res !== null &&\n      postProcessorNames &&\n      postProcessorNames.length &&\n      options.applyPostProcessor !== false\n    ) {\n      res = postProcessor.handle(\n        postProcessorNames,\n        res,\n        key,\n        this.options && this.options.postProcessPassResolved\n          ? { i18nResolved: resolved, ...options }\n          : options,\n        this,\n      );\n    }\n\n    return res;\n  }\n\n  resolve(keys, options = {}) {\n    let found;\n    let usedKey; // plain key\n    let exactUsedKey; // key with context / plural\n    let usedLng;\n    let usedNS;\n\n    if (typeof keys === 'string') keys = [keys];\n\n    // forEach possible key\n    keys.forEach((k) => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const needsZeroSuffixLookup =\n        needsPluralHandling &&\n        !options.ordinal &&\n        options.count === 0 &&\n        this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling =\n        options.context !== undefined &&\n        (typeof options.context === 'string' || typeof options.context === 'number') &&\n        options.context !== '';\n\n      const codes = options.lngs\n        ? options.lngs\n        : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n\n      namespaces.forEach((ns) => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n\n        if (\n          !checkedLoadedFor[`${codes[0]}-${ns}`] &&\n          this.utils &&\n          this.utils.hasLoadedNamespace &&\n          !this.utils.hasLoadedNamespace(usedNS)\n        ) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(\n            `key \"${usedKey}\" for languages \"${codes.join(\n              ', ',\n            )}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`,\n            'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!',\n          );\n        }\n\n        codes.forEach((code) => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n\n          const finalKeys = [key];\n\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling)\n              pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n\n            // get key for plural if needed\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n\n            // get key for context if needed\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n\n              // get key for context + plural if needed\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n\n          // iterate over finalKeys starting with most specific pluralkey (-> contextkey only) -> singularkey only\n          let possibleKey;\n          /* eslint no-cond-assign: 0 */\n          while ((possibleKey = finalKeys.pop())) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n\n    return { res: found, usedKey, exactUsedKey, usedLng, usedNS };\n  }\n\n  isValidLookup(res) {\n    return (\n      res !== undefined &&\n      !(!this.options.returnNull && res === null) &&\n      !(!this.options.returnEmptyString && res === '')\n    );\n  }\n\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat && this.i18nFormat.getResource)\n      return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n\n    for (const option in options) {\n      if (\n        Object.prototype.hasOwnProperty.call(options, option) &&\n        prefix === option.substring(0, prefix.length) &&\n        undefined !== options[option]\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nexport default Translator;\n","import baseLogger from './logger.js';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  getScriptPartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return null;\n\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n\n  getLanguagePartFromCode(code) {\n    if (!code || code.indexOf('-') < 0) return code;\n\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n\n  formatLanguageCode(code) {\n    // http://www.iana.org/assignments/language-tags/language-tags.xhtml\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n\n      if (this.options.lowerCaseLng) {\n        p = p.map((part) => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n\n        // if lenght 2 guess it's a country\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n\n      return p.join('-');\n    }\n\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return (\n      !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1\n    );\n  }\n\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n\n    let found;\n\n    // pick first supported code or if no restriction pick the first one (highest prio)\n    codes.forEach((code) => {\n      if (found) return;\n      let cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n\n    // if we got no match in supportedLngs yet - check for similar locales\n    // first  de-CH --> de\n    // second de-CH --> de-DE\n    if (!found && this.options.supportedLngs) {\n      codes.forEach((code) => {\n        if (found) return;\n\n        let lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return (found = lngOnly);\n\n        found = this.options.supportedLngs.find((supportedLng) => {\n          if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n        });\n      });\n    }\n\n    // if nothing found, use fallbackLng\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n\n    return found;\n  }\n\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n\n    if (!code) return fallbacks.default || [];\n\n    // asume we have an object defining fallbacks\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n\n    return found || [];\n  }\n\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(\n      fallbackCode || this.options.fallbackLng || [],\n      code,\n    );\n\n    const codes = [];\n    const addCode = (c) => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly')\n        addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n\n    fallbackCodes.forEach((fc) => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n\n    return codes;\n  }\n}\n\nexport default LanguageUtil;\n","import baseLogger from './logger.js';\n\n// definition http://translate.sourceforge.net/wiki/l10n/pluralforms\n/* eslint-disable */\nlet sets = [\n  { lngs: ['ach','ak','am','arn','br','fil','gun','ln','mfe','mg','mi','oc', 'pt', 'pt-BR',\n    'tg', 'tl', 'ti','tr','uz','wa'], nr: [1,2], fc: 1 },\n\n  { lngs: ['af','an','ast','az','bg','bn','ca','da','de','dev','el','en',\n    'eo','es','et','eu','fi','fo','fur','fy','gl','gu','ha','hi',\n    'hu','hy','ia','it','kk','kn','ku','lb','mai','ml','mn','mr','nah','nap','nb',\n    'ne','nl','nn','no','nso','pa','pap','pms','ps','pt-PT','rm','sco',\n    'se','si','so','son','sq','sv','sw','ta','te','tk','ur','yo'], nr: [1,2], fc: 2 },\n\n  { lngs: ['ay','bo','cgg','fa','ht','id','ja','jbo','ka','km','ko','ky','lo',\n    'ms','sah','su','th','tt','ug','vi','wo','zh'], nr: [1], fc: 3 },\n\n  { lngs: ['be','bs', 'cnr', 'dz','hr','ru','sr','uk'], nr: [1,2,5], fc: 4 },\n\n  { lngs: ['ar'], nr: [0,1,2,3,11,100], fc: 5 },\n  { lngs: ['cs','sk'], nr: [1,2,5], fc: 6 },\n  { lngs: ['csb','pl'], nr: [1,2,5], fc: 7 },\n  { lngs: ['cy'], nr: [1,2,3,8], fc: 8 },\n  { lngs: ['fr'], nr: [1,2], fc: 9 },\n  { lngs: ['ga'], nr: [1,2,3,7,11], fc: 10 },\n  { lngs: ['gd'], nr: [1,2,3,20], fc: 11 },\n  { lngs: ['is'], nr: [1,2], fc: 12 },\n  { lngs: ['jv'], nr: [0,1], fc: 13 },\n  { lngs: ['kw'], nr: [1,2,3,4], fc: 14 },\n  { lngs: ['lt'], nr: [1,2,10], fc: 15 },\n  { lngs: ['lv'], nr: [1,2,0], fc: 16 },\n  { lngs: ['mk'], nr: [1,2], fc: 17 },\n  { lngs: ['mnk'], nr: [0,1,2], fc: 18 },\n  { lngs: ['mt'], nr: [1,2,11,20], fc: 19 },\n  { lngs: ['or'], nr: [2,1], fc: 2 },\n  { lngs: ['ro'], nr: [1,2,20], fc: 20 },\n  { lngs: ['sl'], nr: [5,1,2,3], fc: 21 },\n  { lngs: ['he','iw'], nr: [1,2,20,21], fc: 22 }\n]\n\nlet _rulesPluralsTypes = {\n  1: function(n) {return Number(n > 1);},\n  2: function(n) {return Number(n != 1);},\n  3: function(n) {return 0;},\n  4: function(n) {return Number(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);},\n  5: function(n) {return Number(n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5);},\n  6: function(n) {return Number((n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2);},\n  7: function(n) {return Number(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);},\n  8: function(n) {return Number((n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3);},\n  9: function(n) {return Number(n >= 2);},\n  10: function(n) {return Number(n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : 4) ;},\n  11: function(n) {return Number((n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3);},\n  12: function(n) {return Number(n%10!=1 || n%100==11);},\n  13: function(n) {return Number(n !== 0);},\n  14: function(n) {return Number((n==1) ? 0 : (n==2) ? 1 : (n == 3) ? 2 : 3);},\n  15: function(n) {return Number(n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2);},\n  16: function(n) {return Number(n%10==1 && n%100!=11 ? 0 : n !== 0 ? 1 : 2);},\n  17: function(n) {return Number(n==1 || n%10==1 && n%100!=11 ? 0 : 1);},\n  18: function(n) {return Number(n==0 ? 0 : n==1 ? 1 : 2);},\n  19: function(n) {return Number(n==1 ? 0 : n==0 || ( n%100>1 && n%100<11) ? 1 : (n%100>10 && n%100<20 ) ? 2 : 3);},\n  20: function(n) {return Number(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2);},\n  21: function(n) {return Number(n%100==1 ? 1 : n%100==2 ? 2 : n%100==3 || n%100==4 ? 3 : 0); },\n  22: function(n) {return Number(n==1 ? 0 : n==2 ? 1 : (n<0 || n>10) && n%10==0 ? 2 : 3); }\n};\n/* eslint-enable */\n\nconst deprecatedJsonVersions = ['v1', 'v2', 'v3'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5,\n};\n\nfunction createRules() {\n  const rules = {};\n  sets.forEach((set) => {\n    set.lngs.forEach((l) => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n\n    this.logger = baseLogger.create('pluralResolver');\n\n    if ((!this.options.compatibilityJSON || this.options.compatibilityJSON === 'v4') && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n\n    this.rules = createRules();\n  }\n\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n\n  getRule(code, options = {}) {\n    if (this.shouldUseIntlApi()) {\n      try {\n        return new Intl.PluralRules(code, { type: options.ordinal ? 'ordinal' : 'cardinal' });\n      } catch {\n        return;\n      }\n    }\n\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n\n  needsPlural(code, options = {}) {\n    const rule = this.getRule(code, options);\n\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n\n    return rule && rule.numbers.length > 1;\n  }\n\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map((suffix) => `${key}${suffix}`);\n  }\n\n  getSuffixes(code, options = {}) {\n    const rule = this.getRule(code, options);\n\n    if (!rule) {\n      return [];\n    }\n\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories\n        .sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2])\n        .map(pluralCategory => `${this.options.prepend}${pluralCategory}`);\n    }\n\n    return rule.numbers.map((number) => this.getSuffix(code, number, options));\n  }\n\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${rule.select(count)}`;\n      }\n\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n\n    // special treatment for lngs only having singular and plural\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n\n    const returnSuffix = () => (\n      this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString()\n    );\n\n    // COMPATIBILITY JSON\n    // v1\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (/* v2 */ this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (/* v3 - gettext index */ this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n\n  shouldUseIntlApi() {\n    return !deprecatedJsonVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nexport default PluralResolver;\n","import * as utils from './utils.js';\nimport baseLogger from './logger.js';\n\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n\n    this.options = options;\n    this.format = (options.interpolation && options.interpolation.format) || ((value) => value);\n    this.init(options);\n  }\n\n  /* eslint no-param-reassign: 0 */\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = { escapeValue: true };\n\n    const iOpts = options.interpolation;\n\n    this.escape = iOpts.escape !== undefined ? iOpts.escape : utils.escape;\n    this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n    this.useRawValueToEscape =\n      iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n\n    this.prefix = iOpts.prefix ? utils.regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n    this.suffix = iOpts.suffix ? utils.regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n\n    this.formatSeparator = iOpts.formatSeparator\n      ? iOpts.formatSeparator\n      : iOpts.formatSeparator || ',';\n\n    this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n\n    this.nestingPrefix = iOpts.nestingPrefix\n      ? utils.regexEscape(iOpts.nestingPrefix)\n      : iOpts.nestingPrefixEscaped || utils.regexEscape('$t(');\n    this.nestingSuffix = iOpts.nestingSuffix\n      ? utils.regexEscape(iOpts.nestingSuffix)\n      : iOpts.nestingSuffixEscaped || utils.regexEscape(')');\n\n    this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator\n      ? iOpts.nestingOptionsSeparator\n      : iOpts.nestingOptionsSeparator || ',';\n\n    this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n\n    this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n\n    // the regexp\n    this.resetRegExp();\n  }\n\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n\n  resetRegExp() {\n    // the regexp\n    const regexpStr = `${this.prefix}(.+?)${this.suffix}`;\n    this.regexp = new RegExp(regexpStr, 'g');\n\n    const regexpUnescapeStr = `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;\n    this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n\n    const nestingRegexpStr = `${this.nestingPrefix}(.+?)${this.nestingSuffix}`;\n    this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n  }\n\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n\n    const defaultData =\n      (this.options && this.options.interpolation && this.options.interpolation.defaultVariables) ||\n      {};\n\n    function regexSafe(val) {\n      return val.replace(/\\$/g, '$$$$');\n    }\n\n    const handleFormat = (key) => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = utils.getPathWithDefaults(data, defaultData, key);\n        return this.alwaysFormat\n          ? this.format(path, undefined, lng, { ...options, ...data, interpolationkey: key })\n          : path;\n      }\n\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n\n      return this.format(utils.getPathWithDefaults(data, defaultData, k), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k,\n      });\n    };\n\n    this.resetRegExp();\n\n    const missingInterpolationHandler =\n      (options && options.missingInterpolationHandler) || this.options.missingInterpolationHandler;\n\n    const skipOnVariables =\n      options && options.interpolation && options.interpolation.skipOnVariables !== undefined\n        ? options.interpolation.skipOnVariables\n        : this.options.interpolation.skipOnVariables;\n\n    const todos = [\n      {\n        // unescape if has unescapePrefix/Suffix\n        regex: this.regexpUnescape,\n        safeValue: (val) => regexSafe(val),\n      },\n      {\n        // regular escape on demand\n        regex: this.regexp,\n        safeValue: (val) => (this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)),\n      },\n    ];\n    todos.forEach((todo) => {\n      replaces = 0;\n      /* eslint no-cond-assign: 0 */\n      while ((match = todo.regex.exec(str))) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else if (options && options.hasOwnProperty(matchedVar)) {\n            value = ''; // undefined becomes empty string\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue; // this makes sure it continues to detect others\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = utils.makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n\n    let clonedOptions = { ...options };\n    clonedOptions.applyPostProcessor = false; // avoid post processing on nested lookup\n    delete clonedOptions.defaultValue; // assert we do not get a endless loop on interpolating defaultValue again and again\n\n    // if value is something like \"myKey\": \"lorem $(anotherKey, { \"count\": {{aValueInOptions}} })\"\n    function handleHasOptions(key, inheritedOptions) {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (\n        (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes) ||\n        matchedDoubleQuotes.length % 2 !== 0\n      ) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n\n      try {\n        clonedOptions = JSON.parse(optionsString);\n\n        if (inheritedOptions) clonedOptions = { ...inheritedOptions, ...clonedOptions };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n\n      // assert we do not get a endless loop on interpolating defaultValue again and again\n      delete clonedOptions.defaultValue;\n      return key;\n    }\n\n    // regular escape on demand\n    while ((match = this.nestingRegexp.exec(str))) {\n      let formatters = [];\n\n      /**\n       * If there is more than one parameter (contains the format separator). E.g.:\n       *   - t(a, b)\n       *   - t(a, b, c)\n       *\n       * And those parameters are not dynamic values (parameters do not include curly braces). E.g.:\n       *   - Not t(a, { \"key\": \"{{variable}}\" })\n       *   - Not t(a, b, {\"keyA\": \"valueA\", \"keyB\": \"valueB\"})\n       */\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map((elem) => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n\n      // is only the nesting key (key1 = '$(key2)') return the value without stringify\n      if (value && match[0] === str && typeof value !== 'string') return value;\n\n      // no string to include or empty\n      if (typeof value !== 'string') value = utils.makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n\n      if (doReduce) {\n        value = formatters.reduce(\n          /* eslint-disable-line no-loop-func:0 */\n          (v, f) =>\n            this.format(v, f, options.lng, { ...options, interpolationkey: match[1].trim() }),\n          value.trim(),\n        );\n      }\n\n      // Nested keys should not be escaped by default #854\n      // value = this.escapeValue ? regexSafe(utils.escape(value)) : regexSafe(value);\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nexport default Interpolator;\n","import baseLogger from './logger.js';\n\nfunction parseFormatStr(formatStr) {\n  let formatName = formatStr.toLowerCase().trim();\n  let formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n\n    const optStr = p[1].substring(0, p[1].length - 1);\n\n    // extra for currency\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n\n      opts.forEach((opt) => {\n        if (!opt) return;\n        const [key, ...rest] = opt.split(':');\n        const val = rest\n          .join(':')\n          .trim()\n          .replace(/^'+|'+$/g, ''); // trim and replace ''\n\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n\n  return {\n    formatName,\n    formatOptions,\n  };\n}\n\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n\n    this.options = options;\n    this.formats = {\n      number: (val, lng, options) => {\n        return new Intl.NumberFormat(lng, options).format(val);\n      },\n      currency: (val, lng, options) => {\n        return new Intl.NumberFormat(lng, { ...options, style: 'currency' }).format(val);\n      },\n      datetime: (val, lng, options) => {\n        return new Intl.DateTimeFormat(lng, { ...options }).format(val);\n      },\n      relativetime: (val, lng, options) => {\n        return new Intl.RelativeTimeFormat(lng, { ...options }).format(val, options.range || 'day');\n      },\n      list: (val, lng, options) => {\n        return new Intl.ListFormat(lng, { ...options }).format(val);\n      },\n    };\n    this.init(options);\n  }\n\n  /* eslint no-param-reassign: 0 */\n  init(services, options = { interpolation: {} }) {\n    const iOpts = options.interpolation;\n\n    this.formatSeparator = iOpts.formatSeparator\n      ? iOpts.formatSeparator\n      : iOpts.formatSeparator || ',';\n  }\n\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n\n  format(value, format, lng, options) {\n    const formats = format.split(this.formatSeparator);\n\n    const result = formats.reduce((mem, f) => {\n      const { formatName, formatOptions } = parseFormatStr(f);\n\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          // options passed explicit for that formatted value\n          const valOptions =\n            (options && options.formatParams && options.formatParams[options.interpolationkey]) ||\n            {};\n\n          // language\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions,\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n\n    return result;\n  }\n}\n\nexport default Formatter;\n","import * as utils from './utils.js';\nimport baseLogger from './logger.js';\nimport EventEmitter from './EventEmitter.js';\n\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\n\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    if (utils.isIE10) {\n      EventEmitter.call(this); // <=IE10 fix (unable to call parent constructor)\n    }\n\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n\n    this.state = {};\n    this.queue = [];\n\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n\n  queueLoad(languages, namespaces, options, callback) {\n    // find what needs to be loaded\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n\n    languages.forEach((lng) => {\n      let hasAllNamespaces = true;\n\n      namespaces.forEach((ns) => {\n        const name = `${lng}|${ns}`;\n\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2; // loaded\n        } else if (this.state[name] < 0) {\n          // nothing to do for err\n        } else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1; // pending\n\n          hasAllNamespaces = false;\n\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback,\n      });\n    }\n\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces),\n    };\n  }\n\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n\n    if (err) this.emit('failedLoading', lng, ns, err);\n\n    if (data) {\n      this.store.addResourceBundle(lng, ns, data);\n    }\n\n    // set loaded\n    this.state[name] = err ? -1 : 2;\n\n    // consolidated loading done in this run - only emit once for a loaded namespace\n    const loaded = {};\n\n    // callback if ready\n    this.queue.forEach((q) => {\n      utils.pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n\n      if (err) q.errors.push(err);\n\n      if (q.pendingCount === 0 && !q.done) {\n        // only do once per loaded -> this.emit('loaded', q.loaded);\n        Object.keys(q.loaded).forEach((l) => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach((ns) => {\n              if (loaded[l][ns] === undefined) loaded[l][ns] = true;\n            });\n          }\n        });\n\n        /* eslint no-param-reassign: 0 */\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n\n    // emit consolidated loaded event\n    this.emit('loaded', loaded);\n\n    // remove done load requests\n    this.queue = this.queue.filter((q) => !q.done);\n  }\n\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {}); // noting to load\n\n    // Limit parallelism of calls to backend\n    // This is needed to prevent trying to open thousands of\n    // sockets or file descriptors, which can cause failures\n    // and actually make the entire process take longer.\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({ lng, ns, fcName, tried, wait, callback });\n      return;\n    }\n    this.readingCalls++;\n\n    return this.backend[fcName](lng, ns, (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data /* = retryFlag */ && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    });\n  }\n\n  /* eslint consistent-return: 0 */\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback(); // nothing to load and no pendings...callback now\n      return null; // pendings will trigger callback\n    }\n\n    toLoad.toLoad.forEach((name) => {\n      this.loadOne(name);\n    });\n  }\n\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, { reload: true }, callback);\n  }\n\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data)\n        this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n\n      this.loaded(name, err, data);\n    });\n  }\n\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}) {\n    if (\n      this.services.utils &&\n      this.services.utils.hasLoadedNamespace &&\n      !this.services.utils.hasLoadedNamespace(namespace)\n    ) {\n      this.logger.warn(\n        `did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`,\n        'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!',\n      );\n      return;\n    }\n\n    // ignore non valid keys\n    if (key === undefined || key === null || key === '') return;\n\n    if (this.backend && this.backend.create) {\n      this.backend.create(languages, namespace, key, fallbackValue, null /* unused callback */, {\n        ...options,\n        isUpdate,\n      });\n    }\n\n    // write to store to avoid resending\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nexport default Connector;\n","export function get() {\n  return {\n    debug: false,\n    initImmediate: true,\n\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false, // string or array of namespaces\n\n    supportedLngs: false, // array with supported languages\n    nonExplicitSupportedLngs: false,\n    load: 'all', // | currentOnly | languageOnly\n    preload: false, // array with preload languages\n\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n\n    partialBundledLanguages: false, // allow bundling certain languages that are not remotely fetched\n    saveMissing: false, // enable to send missing values\n    updateMissing: false, // enable to update default values if different from translated value (only useful on initial development, or when keeping code as source of truth)\n    saveMissingTo: 'fallback', // 'current' || 'all'\n    saveMissingPlurals: true, // will save all forms not only singular key\n    missingKeyHandler: false, // function(lng, ns, key, fallbackValue) -> override if prefer on handling\n    missingInterpolationHandler: false, // function(str, match)\n\n    postProcess: false, // string or array of postProcessor names\n    postProcessPassResolved: false, // pass resolved object into 'options.i18nResolved' for postprocessor\n    returnNull: true, // allows null value as valid translation\n    returnEmptyString: true, // allows empty string value as valid translation\n    returnObjects: false,\n    joinArrays: false, // or string to join array\n    returnedObjectHandler: false, // function(key, value, options) triggered if key returns object but returnObjects is set to false\n    parseMissingKeyHandler: false, // function(key) parsed a key that was not found in t() before returning\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: (value, format, lng, options) => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      // prefixEscaped: '{{',\n      // suffixEscaped: '}}',\n      // unescapeSuffix: '',\n      unescapePrefix: '-',\n\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      // nestingPrefixEscaped: '$t(',\n      // nestingSuffixEscaped: ')',\n      // defaultVariables: undefined // object that can have values to interpolate on - extends passed in interpolation data\n      maxReplaces: 1000, // max replaces to prevent endless loop\n      skipOnVariables: true,\n    },\n  };\n}\n\n/* eslint no-param-reassign: 0 */\nexport function transformOptions(options) {\n  // create namespace object if namespace is passed in as string\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n\n  // extend supportedLngs with cimode\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n\n  return options;\n}\n","import baseLogger from './logger.js';\nimport EventEmitter from './EventEmitter.js';\nimport ResourceStore from './ResourceStore.js';\nimport Translator from './Translator.js';\nimport LanguageUtils from './LanguageUtils.js';\nimport PluralResolver from './PluralResolver.js';\nimport Interpolator from './Interpolator.js';\nimport Formatter from './Formatter.js';\nimport BackendConnector from './BackendConnector.js';\nimport { get as getDefaults, transformOptions } from './defaults.js';\nimport postProcessor from './postProcessor.js';\nimport { defer, isIE10 } from './utils.js';\n\nfunction noop() { }\n\n// Binds the member functions of the given class instance so that they can be\n// destructured or used as callbacks.\nfunction bindMemberFunctions(inst) {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst))\n  mems.forEach((mem) => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst)\n    }\n  })\n}\n\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    if (isIE10) {\n      EventEmitter.call(this) // <=IE10 fix (unable to call parent constructor)\n    }\n\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = { external: [] };\n\n    bindMemberFunctions(this);\n\n    if (callback && !this.isInitialized && !options.isClone) {\n      // https://github.com/i18next/i18next/issues/879\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n\n  init(options = {}, callback) {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (typeof options.ns === 'string') {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n\n    const defOpts = getDefaults();\n    this.options = { ...defOpts, ...this.options, ...transformOptions(options) };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = { ...defOpts.interpolation, ...this.options.interpolation }; // do not use reference\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n\n    function createClassOnDemand(ClassOrObject) {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n\n    // init services\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n  \n\n      const lu = new LanguageUtils(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix,\n      });\n\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      }\n\n      s.backendConnector = new BackendConnector(\n        createClassOnDemand(this.modules.backend),\n        s.resourceStore,\n        s,\n        this.options,\n      );\n      // pipe events from backendConnector\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        s.languageDetector.init(s, this.options.detection, this.options);\n      }\n\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n\n      this.translator = new Translator(this.services, this.options);\n      // pipe events from translator\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng)\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0]\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n\n    // append api\n    const storeApi = [\n      'getResource',\n      'hasResourceBundle',\n      'getResourceBundle',\n      'getDataByLanguage',\n    ];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = [\n      'addResource',\n      'addResources',\n      'addResourceBundle',\n      'removeResourceBundle',\n    ];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n\n    const deferred = defer();\n\n    const load = () => {\n      const finish = (err, t) => {\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n\n        deferred.resolve(t); // not rejecting on err (as err is only a loading translation failed warning)\n        callback(err, t);\n      };\n      // fix for use cases when calling changeLanguage before finished to initialized (i.e. https://github.com/i18next/i18next/issues/1552)\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n\n    return deferred;\n  }\n\n  /* eslint consistent-return: 0 */\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    let usedLng = typeof language === 'string' ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback(); // avoid loading resources for cimode\n\n      const toLoad = [];\n\n      const append = lng => {\n        if (!lng) return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n\n      if (!usedLng) {\n        // at least load fallbacks in this case\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n\n      this.services.backendConnector.load(toLoad, this.options.ns, (e) => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve(); // not rejecting on err (as err is only a loading translation failed warning)\n      callback(err);\n    });\n    return deferred;\n  }\n\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()')\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()')\n\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n\n    if (module.type === 'logger' || (module.log && module.warn && module.error)) {\n      this.modules.logger = module;\n    }\n\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n\n    return this;\n  }\n\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n\n    const setLngProps = (l) => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      // find the first language resolved languaged\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n\n    const setLng = lngs => {\n      // if detected lng is falsy, set it to empty array, to make sure at least the fallbackLng will be used\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      // depending on API in detector lng can be a string (old) or an array of languages ordered in priority\n      const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n\n        if (this.services.languageDetector) this.services.languageDetector.cacheUserLanguage(l);\n      }\n\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      this.services.languageDetector.detect(setLng);\n    } else {\n      setLng(lng);\n    }\n\n    return deferred;\n  }\n\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let options;\n      if (typeof opts !== 'object') {\n        options = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = { ...opts };\n      }\n\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n\n      const keySeparator = this.options.keySeparator || '.';\n      const resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      return this.t(resultKey, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n\n  t(...args) {\n    return this.translator && this.translator.translate(...args);\n  }\n\n  exists(...args) {\n    return this.translator && this.translator.exists(...args);\n  }\n\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n\n    const lng = this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n\n    // we're in cimode so this shall pass\n    if (lng.toLowerCase() === 'cimode') return true;\n\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 2;\n    };\n\n    // optional injected check\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n\n    // loaded -> SUCCESS\n    if (this.hasResourceBundle(lng, ns)) return true;\n\n    // were not loading at all -> SEMI SUCCESS\n    if (!this.services.backendConnector.backend || (this.options.resources && !this.options.partialBundledLanguages)) return true;\n\n    // failed loading ns - but at least fallback is not pending -> SEMI SUCCESS\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n\n    return false;\n  }\n\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n\n    if (!this.options.ns) {\n      callback && callback();\n      return Promise.resolve();\n    }\n    if (typeof ns === 'string') ns = [ns];\n\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n\n    return deferred;\n  }\n\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n\n    if (typeof lngs === 'string') lngs = [lngs];\n    const preloaded = this.options.preload || [];\n\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0);\n    // Exit early if all given languages are already preloaded\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n\n    return deferred;\n  }\n\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n\n    const rtlLngs = [\n      'ar',\n      'shu',\n      'sqr',\n      'ssh',\n      'xaa',\n      'yhd',\n      'yud',\n      'aao',\n      'abh',\n      'abv',\n      'acm',\n      'acq',\n      'acw',\n      'acx',\n      'acy',\n      'adf',\n      'ads',\n      'aeb',\n      'aec',\n      'afb',\n      'ajp',\n      'apc',\n      'apd',\n      'arb',\n      'arq',\n      'ars',\n      'ary',\n      'arz',\n      'auz',\n      'avl',\n      'ayh',\n      'ayl',\n      'ayn',\n      'ayp',\n      'bbz',\n      'pga',\n      'he',\n      'iw',\n      'ps',\n      'pbt',\n      'pbu',\n      'pst',\n      'prp',\n      'prd',\n      'ug',\n      'ur',\n      'ydd',\n      'yds',\n      'yih',\n      'ji',\n      'yi',\n      'hbo',\n      'men',\n      'xmn',\n      'fa',\n      'jpr',\n      'peo',\n      'pes',\n      'prs',\n      'dv',\n      'sam',\n      'ckb'\n    ];\n\n    return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1\n      ? 'rtl'\n      : 'ltr';\n  }\n\n  static createInstance = (options = {}, callback) => new I18n(options, callback)\n\n  cloneInstance(options = {}, callback = noop) {\n    const mergedOptions = { ...this.options, ...options, ...{ isClone: true } };\n    const clone = new I18n(mergedOptions);\n    if ((options.debug !== undefined || options.prefix !== undefined)) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = { ...this.services };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    clone.translator = new Translator(clone.services, clone.options);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = clone.options; // sync options\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n\n    return clone;\n  }\n\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\n\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nexport default instance;\n","import i18next from './i18next.js';\n\nexport default i18next;\n\nexport const createInstance = i18next.createInstance;\n\nexport const init = i18next.init;\nexport const loadResources = i18next.loadResources;\nexport const reloadResources = i18next.reloadResources;\nexport const use = i18next.use;\nexport const changeLanguage = i18next.changeLanguage;\nexport const getFixedT = i18next.getFixedT;\nexport const t = i18next.t;\nexport const exists = i18next.exists;\nexport const setDefaultNamespace = i18next.setDefaultNamespace;\nexport const hasLoadedNamespace = i18next.hasLoadedNamespace;\nexport const loadNamespaces = i18next.loadNamespaces;\nexport const loadLanguages = i18next.loadLanguages;\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n */\n\nimport {\n    default as i18next,\n    i18n as i18nextInstance,\n    FallbackLngObjList as i18nextFallbackLngObjList,\n    FallbackLng as i18nextFallbackLng,\n    FormatFunction as i18nextFormatFunction,\n    InterpolationOptions as i18nextInterpolationOptions,\n    ReactOptions as i18nextReactOptions,\n    InitOptions as i18nextInitOptions,\n    TOptionsBase as i18nextTOptionsBase,\n    StringMap as i18nextStringMap,\n    TOptions as i18nextTOptions,\n    Callback as i18nextCallback,\n    ExistsFunction as i18nextExistsFunction,\n    WithT as i18nextWithT,\n    TFunctionResult as i18nextTFunctionResult,\n    TFunctionKeys as i18nextTFunctionKeys,\n    TFunction as i18nextTFunction,\n    Resource as i18nextResource,\n    ResourceLanguage as i18nextResourceLanguage,\n    ResourceKey as i18nextResourceKey,\n    Interpolator as i18nextInterpolator,\n    ResourceStore as i18nextResourceStore,\n    Services as i18nextServices,\n    Module as i18nextModule,\n    CallbackError as i18nextCallbackError,\n    ReadCallback as i18nextReadCallback,\n    MultiReadCallback as i18nextMultiReadCallback,\n    BackendModule as i18nextBackendModule,\n    LanguageDetectorModule as i18nextLanguageDetectorModule,\n    LanguageDetectorAsyncModule as i18nextLanguageDetectorAsyncModule,\n    PostProcessorModule as i18nextPostProcessorModule,\n    LoggerModule as i18nextLoggerModule,\n    I18nFormatModule as i18nextI18nFormatModule,\n    ThirdPartyModule as i18nextThirdPartyModule,\n    Modules as i18nextModules,\n    Newable as i18nextNewable,\n} from 'i18next';\n\nconst i18n: i18n.i18n = i18next;\n\ndeclare namespace i18n {\n    export type i18n = i18nextInstance;\n    export type FallbackLngObjList = i18nextFallbackLngObjList;\n    export type FallbackLng = i18nextFallbackLng;\n    export type FormatFunction = i18nextFormatFunction;\n    export type InterpolationOptions = i18nextInterpolationOptions;\n    export type ReactOptions = i18nextReactOptions;\n    export type InitOptions = i18nextInitOptions;\n    export type TOptionsBase = i18nextTOptionsBase;\n    export type StringMap = i18nextStringMap;\n    export type TOptions<T extends Record<string, unknown> = StringMap> = i18nextTOptions<T>;\n    export type Callback = i18nextCallback;\n    export type ExistsFunction<K extends string = string, T extends Record<string, unknown> = StringMap> = i18nextExistsFunction<K, T>;\n    export type WithT = i18nextWithT;\n    export type TFunctionResult = i18nextTFunctionResult;\n    export type TFunctionKeys = i18nextTFunctionKeys;\n    export type TFunction = i18nextTFunction;\n    export type Resource = i18nextResource;\n    export type ResourceLanguage = i18nextResourceLanguage;\n    export type ResourceKey = i18nextResourceKey;\n    export type Interpolator = i18nextInterpolator;\n    export type ResourceStore = i18nextResourceStore;\n    export type Services = i18nextServices;\n    export type Module = i18nextModule;\n    export type CallbackError = i18nextCallbackError;\n    export type ReadCallback = i18nextReadCallback;\n    export type MultiReadCallback = i18nextMultiReadCallback;\n    export type BackendModule<T = Record<string, unknown>> = i18nextBackendModule<T>;\n    export type LanguageDetectorModule = i18nextLanguageDetectorModule;\n    export type LanguageDetectorAsyncModule = i18nextLanguageDetectorAsyncModule;\n    export type PostProcessorModule = i18nextPostProcessorModule;\n    export type LoggerModule = i18nextLoggerModule;\n    export type I18nFormatModule = i18nextI18nFormatModule;\n    export type ThirdPartyModule = i18nextThirdPartyModule;\n    export type Modules = i18nextModules;\n    export type Newable<T> = i18nextNewable<T>;\n}\n\nexport { i18n };\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/restrict-plus-operands,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        I18N = CDP_KNOWN_MODULE.I18N * LOCAL_CODE_RANGE_GUIDE.FUNCTION,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja æ¡å¼µã¨ã©ã¼ã³ã¼ãå®ç¾©\n     */\n    export enum RESULT_CODE {\n        I18N_DECLARE    = RESULT_CODE_BASE.DECLARE,\n        ERROR_I18N_CORE_LAYER = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.I18N + 1, 'i18next error'),\n    }\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const navigator = safe(globalThis.navigator);\n","/* eslint-disable\n    @typescript-eslint/no-non-null-assertion,\n */\n\nimport { i18n } from '@cdp/extension-i18n';\nimport { isFunction } from '@cdp/core-utils';\nimport { RESULT_CODE, toResult } from '@cdp/result';\nimport { request } from '@cdp/ajax';\nimport { toUrl } from '@cdp/web-utils';\nimport { I18NOptions } from '../interfaces';\n\n/** @internal */\nconst enum Default {\n    LOAD_PATH = 'res/locales/{{ns}}.{{lng}}.json',\n}\n\n/** @internal */ type FallbackResourceMap = { [lng: string]: string; };\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en The class a simple `i18next` backend built-in plugin. It will load resources from a backend server using the `fetch` API.\n * @ja `fetch` API ãç¨ãã `i18next` backend ãã«ãã¤ã³ãã©ã°ã¤ã³ã¯ã©ã¹\n *\n * @internal\n */\nexport class AjaxBackend implements i18n.BackendModule<i18n.AjaxBackendOptions> {\n    readonly type = 'backend';\n    static type = 'backend';\n    private _services!: i18n.Services;\n    private _options: i18n.AjaxBackendOptions = {};\n    private _fallbackMap: FallbackResourceMap = {};\n\n///////////////////////////////////////////////////////////////////////\n// implements: i18n.BackendModule<AjaxBackendOptions>\n\n    init(services: i18n.Services, options: i18n.AjaxBackendOptions, initOptions: I18NOptions): void {\n        this._services = services;\n        this._options = Object.assign({ loadPath: Default.LOAD_PATH }, this._options, options);\n        this._fallbackMap = Object.assign(this._fallbackMap, initOptions.fallbackResources);\n    }\n\n    read(language: string, namespace: string, callback: i18n.ReadCallback): void {\n        const lng = this._fallbackMap[language] || language;\n        const loadPath = isFunction(this._options.loadPath) ? this._options.loadPath([lng], [namespace]) : this._options.loadPath;\n        const url = this.resolveUrl(loadPath as string, { lng, ns: namespace });\n        this.loadUrl(url, callback);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    private resolveUrl(loadPath: string, data: { lng: string; ns: string; }): string {\n        return toUrl(this._services.interpolator.interpolate(loadPath, data, undefined!, undefined!));\n    }\n\n    private loadUrl(url: string, callback: (err: i18n.CallbackError | string, data: i18n.ResourceKey | boolean) => void): void {\n        void (async () => {\n            try {\n                const json = await request.json(url, this._options);\n                callback(null, json);\n            } catch (e) {\n                const result = toResult(e);\n                const msg = `failed loading: ${url}, ${result.message}`;\n                if (RESULT_CODE.ERROR_AJAX_RESPONSE === result.code && result.cause) {\n                    const status: number = result.cause.status;\n                    if (500 <= status && status < 600) {\n                        return callback(msg, true);  // retry\n                    } else if (400 <= status && status < 500) {\n                        return callback(msg, false); // no retry\n                    }\n                }\n                callback(msg, false);\n            }\n        })();\n    }\n}\n","import { i18n } from '@cdp/extension-i18n';\nimport { PlainObject } from '@cdp/core-utils';\nimport {\n    dom as $,\n    DOM,\n} from '@cdp/dom';\nimport './module-extends';\n\n/** @internal extends [[DOM]] instance method */\nfunction extend(domOptions: Required<i18n.DomLocalizerOptions>, i18next: i18n.i18n): void {\n    const {\n        selectorAttr,\n        targetAttr,\n        optionsAttr,\n        useOptionsAttr,\n        parseDefaultValueFromContent,\n        customTagName,\n    } = domOptions;\n\n    const extendDefault = (o: PlainObject, val: string): PlainObject => {\n        if (!parseDefaultValueFromContent) {\n            return o;\n        }\n        return { ...o, ...{ defaultValue: val } };\n    };\n\n    // [prepend]/[append] helper\n    const insert = (method: 'prepend' | 'append', $el: DOM, key: string, opts: i18n.TOptions): void => {\n        const translated = i18next.t(key, extendDefault(opts, $el.html()));\n        if (false === customTagName) {\n            $el[method](translated);\n        } else {\n            const translatedWithWrap = `<${customTagName}>${translated}</${customTagName}>`;\n            const $firstChild = $($el[0].firstElementChild) as DOM;\n            if ($firstChild.is(customTagName)) {\n                $firstChild.replaceWith(translatedWithWrap);\n            } else {\n                $el[method](translatedWithWrap);\n            }\n        }\n    };\n\n    const parse = ($el: DOM, key: string, opts: i18n.TOptions): void => {\n        let attr = 'text';\n\n        if (key.startsWith('[')) {\n            const parts = key.split(']');\n            key  = parts[1].trim();\n            attr = parts[0].substr(1, parts[0].length - 1).trim();\n        }\n\n        if ('html' === attr) {\n            $el.html(i18next.t(key, extendDefault(opts, $el.html())));\n        } else if ('text' === attr) {\n            $el.text(i18next.t<string>(key, extendDefault(opts, $el.text())));\n        } else if ('prepend' === attr) {\n            insert('prepend', $el, key, opts);\n        } else if ('append' === attr) {\n            insert('append', $el, key, opts);\n        } else if (attr.startsWith('data-')) {\n            const dataAttr = attr.substr(('data-').length);\n            const translated = i18next.t(key, extendDefault(opts, $el.data(dataAttr) as string));\n            $el.data(dataAttr, translated);\n            $el.attr(attr, translated);\n        } else {\n            $el.attr(attr, i18next.t<string>(key, extendDefault(opts, $el.attr(attr) as string)));\n        }\n    };\n\n    const localize = ($el: DOM, opts: i18n.TOptions): void => {\n        const key = $el.attr(selectorAttr);\n        if (!key) {\n            return;\n        }\n\n        let $target = $el;\n        const targetSelector = $el.data(targetAttr) as string;\n\n        if (targetSelector) {\n            $target = $el.find(targetSelector);\n        }\n\n        if (!opts && true === useOptionsAttr) {\n            opts = $el.data(optionsAttr) as i18n.TOptions;\n        }\n\n        opts = opts || {};\n\n        for (const part of key.split(';')) {\n            const k = part.trim();\n            if ('' !== k) {\n                parse($target, k, opts);\n            }\n        }\n\n        if (true === useOptionsAttr) {\n            const clone = { ...opts };\n            delete clone.lng;\n            $el.data(optionsAttr, clone);\n        }\n    };\n\n    function handle(this: DOM, opts: i18n.TOptions): DOM {\n        // eslint-disable-next-line no-invalid-this\n        return this.each((index: number, el: HTMLElement) => {\n            const $el = $(el);\n            // localize element itself\n            localize($el, opts);\n            // localize children\n            const $children = $el.find(`[${selectorAttr}]`);\n            $children.each((index: number, el: HTMLElement) => {\n                localize($(el), opts);\n            });\n        });\n    }\n\n    // selector function $(mySelector).localize(opts);\n    $.fn['localize'] = handle;\n}\n\n/**\n * @en `i18next` DOM localizer built-in plugin factory.\n * @ja `i18next` DOM ã­ã¼ã«ã©ã¤ãºãã«ãã¤ã³ãã©ã°ã¤ã³ãã¡ã¯ããªã¼ã¡ã½ãã\n *\n * @internal\n */\nexport function DomLocalizer(domOptions?: i18n.DomLocalizerOptions): i18n.ThirdPartyModule {\n    return {\n        type: '3rdParty',\n        init: extend.bind(\n            null,\n            Object.assign({\n                selectorAttr: 'data-i18n',\n                targetAttr: 'i18n-target',\n                optionsAttr: 'i18n-options',\n                useOptionsAttr: false,\n                parseDefaultValueFromContent: true,\n                customTagName: 'cdp-i18n',\n            }, domOptions)\n        ),\n    };\n}\n","export * from '@cdp/extension-i18n';\nimport { i18n } from '@cdp/extension-i18n';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport {\n    dom as $,\n    DOMSelector,\n    DOMResult,\n} from '@cdp/dom';\nimport { I18NOptions, I18NDetectErrorBehaviour } from './interfaces';\nimport { navigator } from './ssr';\nimport { AjaxBackend, DomLocalizer } from './plugin';\n\n/**\n * @en Translate funcion.\n * @ja ç¿»è¨³é¢æ°\n */\nexport const t: i18n.TFunction = i18n.t.bind(i18n);\n\n/**\n * @en Initialize `i18next` instance.\n * @ja `i18next` ã¤ã³ã¹ã¿ã³ã¹ã®åæå\n *\n * @param options\n *  - `en` init options\n *  - `ja` åæåãªãã·ã§ã³ãæå®\n */\nexport const initializeI18N = (options?: I18NOptions): Promise<i18n.TFunction> => {\n    const opts = Object.assign({ noThrow: true }, options);\n\n    const { namespace, resourcePath: loadPath, dom, noThrow } = opts;\n\n    if (!opts.lng) {\n        opts.lng = navigator.language;\n    }\n\n    if (namespace) {\n        !opts.ns && (opts.ns = namespace);\n        !opts.defaultNS && (opts.defaultNS = namespace);\n    }\n\n    if (loadPath) {\n        opts.backend = Object.assign({ loadPath }, opts.backend);\n    }\n\n    if (opts.backend) {\n        i18n.use(AjaxBackend);\n    }\n\n    i18n.use(DomLocalizer(dom));\n\n    return new Promise((resolve, reject) => {\n        void i18n.init(opts, (error, translator) => {\n            if (error) {\n                const result = makeResult(RESULT_CODE.ERROR_I18N_CORE_LAYER, 'i18n#init() failed.', error);\n                if (noThrow) {\n                    console.warn(result.message, result);\n                } else {\n                    return reject(result);\n                }\n            }\n            resolve(translator);\n        });\n    });\n};\n\n/**\n * @en Get the current detected or set language.\n * @ja ç¾å¨è¨­å®ããã¦ããè¨èªãåå¾\n *\n * @returns `ja-JP`, `ja`\n */\nexport const getLanguage = (): string => {\n    return i18n.language || navigator.language;\n};\n\n/**\n * @en Get an array of `language-codes` that will be used it order to lookup the translation value.\n * @ja ç¿»è¨³ã®æ¤ç´¢ã«ä½¿ç¨ããã `language-codes` ãªã¹ããåå¾\n *\n * @see\n *  - https://www.i18next.com/overview/api#languages\n */\nexport const getLanguageList = (): readonly string[] => {\n    return i18n.languages || [navigator.language];\n};\n\n/**\n * @en Changes the language.\n * @ja è¨èªã®åãæ¿ã\n */\nexport const changeLanguage = (lng: string, options?: I18NDetectErrorBehaviour): Promise<i18n.TFunction> => {\n    const opts = Object.assign({ noThrow: true }, options);\n    return new Promise((resolve, reject) => {\n        void i18n.changeLanguage(lng, (error, translator) => {\n            if (error) {\n                const result = makeResult(RESULT_CODE.ERROR_I18N_CORE_LAYER, 'i18n#changeLanguate() failed.', error);\n                if (opts.noThrow) {\n                    console.warn(result.message, result);\n                } else {\n                    return reject(result);\n                }\n            }\n            resolve(translator);\n        });\n    });\n};\n\n/**\n * @en DOM localizer method.\n * @ja DOM ã­ã¼ã«ã©ã¤ãº\n *\n * @param selector\n *  - `en` Object(s) or the selector string which becomes origin of [[DOM]].\n *  - `ja` [[DOM]] ã®ãã¨ã«ãªããªãã¸ã§ã¯ã(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n * @param options\n *  - `en` translation options.\n *  - `ja` ç¿»è¨³ãªãã·ã§ã³\n */\nexport const localize = <T extends string | Node>(selector: DOMSelector<T>, options?: i18n.TOptions): DOMResult<T> => {\n    return $(selector).localize(options) as DOMResult<T>;\n};\n","import {\n    Keys,\n    Types,\n    KeyToType,\n    verify,\n    deepEqual,\n    dropUndefined,\n} from '@cdp/core-utils';\nimport { Subscription, EventBroker } from '@cdp/events';\nimport {\n    Cancelable,\n    checkCanceled as cc,\n} from '@cdp/promise';\nimport {\n    StorageDataTypeList,\n    StorageInputDataTypeList,\n    IStorageOptions,\n    IStorageDataOptions,\n    IStorageDataReturnType,\n    IStorageEventCallback,\n    IStorage,\n} from '@cdp/core-storage';\nimport {\n    Serializable,\n    serialize,\n    deserialize,\n} from '@cdp/binary';\n\n/**\n * @en Web storage data type set interface.\n * @ja Web storage ã«æ ¼ç´å¯è½ãªåã®éå\n */\nexport type WebStorageDataTypeList = StorageDataTypeList & Serializable;\n/** WebStorage I/O options */\nexport type WebStorageOptions<K extends Keys<WebStorageDataTypeList> = Keys<WebStorageDataTypeList>> = IStorageDataOptions<WebStorageDataTypeList, K>;\n/** WebStorage return value */\nexport type WebStorageResult<K extends Keys<WebStorageDataTypeList>> = KeyToType<WebStorageDataTypeList, K>;\n/** WebStorage data type */\nexport type WebStorageDataTypes = Types<WebStorageDataTypeList>;\n/** MemoryStorage return type */\nexport type WebStorageReturnType<D extends WebStorageDataTypes> = IStorageDataReturnType<StorageDataTypeList, D>;\n/** WebStorage input data type */\nexport type WebStorageInputDataTypes = StorageInputDataTypeList<WebStorageDataTypeList>;\n/** WebStorage event callback */\nexport type WebStorageEventCallback = IStorageEventCallback<WebStorageDataTypeList>;\n\n/** @internal */\ninterface WebStorageEvent {\n    '@': [string | null, WebStorageDataTypes | null, WebStorageDataTypes | null];\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Web storage class. This class implements `IStorage` interface by using `window.localStorage`.\n * @ja ã¦ã§ãã¹ãã¬ã¼ã¸ã¯ã©ã¹. æ¬ã¯ã©ã¹ã¯ `window.localStorage` ãç¨ãã¦ `IStorage` ãå®è£\n */\nexport class WebStorage implements IStorage<WebStorageDataTypeList> {\n\n    /** @internal */\n    private readonly _broker = new EventBroker<WebStorageEvent>();\n    /** @internal */\n    private readonly _storage: Storage;\n\n    /**\n     * constructor\n     *\n     * @param storage\n     *  - `en` Web [[Storage]] instance\n     *  - `ja` Web [[Storage]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    constructor(storage: Storage) {\n        verify('instanceOf', Storage, storage);\n        this._storage = storage;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IStorage\n    /**\n     * @en [[IStorage]] kind signature.\n     * @ja [[IStorage]] ã®ç¨®å¥ãè¡¨ãè­å¥å­\n     */\n    get kind(): string {\n        const signature = localStorage === this._storage ? 'local-storage' : 'session-storage';\n        return `web:${signature}`;\n    }\n\n    /**\n     * @en Returns the current value associated with the given key, or null if the given key does not exist in the list associated with the object.\n     * @ja ã­ã¼ã«å¯¾å¿ããå¤ãåå¾. å­å¨ããªãå ´åã¯ null ãè¿å´\n     *\n     * @param key\n     *  - `en` access key\n     *  - `ja` ã¢ã¯ã»ã¹ã­ã¼\n     * @param options\n     *  - `en` I/O options\n     *  - `ja` I/O ãªãã·ã§ã³\n     * @returns\n     *  - `en` Returns the value which corresponds to a key with type change designated in `dataType`.\n     *  - `ja` `dataType` ã§æå®ãããåå¤æãè¡ã£ã¦, ã­ã¼ã«å¯¾å¿ããå¤ãè¿å´\n     */\n    getItem<D extends WebStorageDataTypes = WebStorageDataTypes>(\n        key: string,\n        options?: WebStorageOptions<never>\n    ): Promise<WebStorageReturnType<D>>;\n\n    /**\n     * @en Returns the current value associated with the given key, or null if the given key does not exist in the list associated with the object.\n     * @ja ã­ã¼ã«å¯¾å¿ããå¤ãåå¾. å­å¨ããªãå ´åã¯ null ãè¿å´\n     *\n     * @param key\n     *  - `en` access key\n     *  - `ja` ã¢ã¯ã»ã¹ã­ã¼\n     * @param options\n     *  - `en` I/O options\n     *  - `ja` I/O ãªãã·ã§ã³\n     * @returns\n     *  - `en` Returns the value which corresponds to a key with type change designated in `dataType`.\n     *  - `ja` `dataType` ã§æå®ãããåå¤æãè¡ã£ã¦, ã­ã¼ã«å¯¾å¿ããå¤ãè¿å´\n     */\n    getItem<K extends Keys<WebStorageDataTypeList>>(\n        key: string,\n        options?: WebStorageOptions<K>\n    ): Promise<WebStorageResult<K> | null>;\n\n    async getItem(key: string, options?: WebStorageOptions): Promise<WebStorageDataTypes | null> {\n        return dropUndefined(await deserialize(this._storage[key], options!)); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    }\n\n    /**\n     * @en Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n     * @ja ã­ã¼ãæå®ãã¦å¤ãè¨­å®. å­å¨ããªãå ´åã¯æ°è¦ã«ä½æ\n     *\n     * @param key\n     *  - `en` access key\n     *  - `ja` ã¢ã¯ã»ã¹ã­ã¼\n     * @param options\n     *  - `en` I/O options\n     *  - `ja` I/O ãªãã·ã§ã³\n     */\n    async setItem<V extends WebStorageInputDataTypes>(key: string, value: V, options?: WebStorageOptions<never>): Promise<void> {\n        options = options || {};\n        const newVal = dropUndefined(value, true);                                      // `null` or `undefined` â 'null' or 'undefined'\n        const oldVal = dropUndefined(await deserialize(this._storage[key], options));   // `undefined` â `null`\n        if (!deepEqual(oldVal, newVal)) {\n            this._storage.setItem(key, await serialize(newVal, options));\n            !options.silent && this._broker.trigger('@', key, newVal, oldVal);\n        }\n    }\n\n    /**\n     * @en Removes the key/value pair with the given key from the list associated with the object, if a key/value pair with the given key exists.\n     * @ja æå®ãããã­ã¼ã«å¯¾å¿ããå¤ãå­å¨ããã°åé¤\n     *\n     * @param options\n     *  - `en` storage options\n     *  - `ja` ã¹ãã¬ã¼ã¸ãªãã·ã§ã³\n     */\n    async removeItem(key: string, options?: IStorageOptions): Promise<void> {\n        options = options || {};\n        await cc(options.cancel);\n        const value = this._storage[key];\n        if (undefined !== value) {\n            this._storage.removeItem(key);\n            !options.silent && this._broker.trigger('@', key, null, await deserialize(value, options));\n        }\n    }\n\n    /**\n     * @en Empties the list associated with the object of all key/value pairs, if there are any.\n     * @ja ãã¹ã¦ã®ã­ã¼ã«å¯¾å¿ããå¤ãåé¤\n     *\n     * @param options\n     *  - `en` storage options\n     *  - `ja` ã¹ãã¬ã¼ã¸ãªãã·ã§ã³\n     */\n    async clear(options?: IStorageOptions): Promise<void> {\n        options = options || {};\n        await cc(options.cancel);\n        if (0 < this._storage.length) {\n            this._storage.clear();\n            !options.silent && this._broker.trigger('@', null, null, null);\n        }\n    }\n\n    /**\n     * @en Returns all entry keys.\n     * @ja ãã¹ã¦ã®ã­ã¼ä¸è¦§ãè¿å´\n     *\n     * @param options\n     *  - `en` cancel options\n     *  - `ja` ã­ã£ã³ã»ã«ãªãã·ã§ã³\n     */\n    async keys(options?: Cancelable): Promise<string[]> {\n        await cc(options && options.cancel);\n        return Object.keys(this._storage);\n    }\n\n    /**\n     * @en Subscrive event(s).\n     * @ja ã¤ãã³ãè³¼èª­è¨­å®\n     *\n     * @param listener\n     *  - `en` callback function.\n     *  - `ja` ãã³ã¼ã«ããã¯é¢æ°\n     */\n    on(listener: WebStorageEventCallback): Subscription {\n        return this._broker.on('@', listener);\n    }\n\n    /**\n     * @en Unsubscribe event(s).\n     * @ja ã¤ãã³ãè³¼èª­è§£é¤\n     *\n     * @param listener\n     *  - `en` callback function.\n     *         When not set this parameter, listeners are released.\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     *         æå®ããªãå ´åã¯ãã¹ã¦ãè§£é¤\n     */\n    off(listener?: WebStorageEventCallback): void {\n        this._broker.off('@', listener);\n    }\n}\n\n// default storage\nexport const webStorage = new WebStorage(localStorage);\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/restrict-plus-operands,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        SYNC = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 0,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja æ¡å¼µã¨ã©ã¼ã³ã¼ãå®ç¾©\n     */\n    export enum RESULT_CODE {\n        MVC_SYNC_DECLARE                              = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_INVALID_SYNC_PARAMS                 = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.SYNC + 1, 'invalid sync params.'),\n        ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY          = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.SYNC + 2, 'invalid sync storage entires.'),\n        ERROR_MVC_INVALID_SYNC_STORAGE_DATA_NOT_FOUND = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.SYNC + 3, 'data not found.'),\n    }\n}\n","import {\n    Cancelable,\n    checkCanceled as cc,\n} from '@cdp/promise';\nimport {\n    IDataSync,\n    SyncMethods,\n    SyncContext,\n    SyncResult,\n} from './interfaces';\n\n/**\n * @en The [[IDataSync]] implemant class which has no effects.\n * @ja ä½ãããªã [[IDataSync]] å®è£ã¯ã©ã¹\n */\nclass NullDataSync implements IDataSync<object> {\n\n///////////////////////////////////////////////////////////////////////\n// implements: IDataSync\n\n    /**\n     * @en [[IDataSync]] kind signature.\n     * @ja [[IDataSync]] ã®ç¨®å¥ãè¡¨ãè­å¥å­\n     */\n    get kind(): string {\n        return 'null';\n    }\n\n    /**\n     * @en Do data synchronization.\n     * @ja ãã¼ã¿åæ\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` ãªãã¬ã¼ã·ã§ã³ãæå®\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` åæããã³ã³ãã­ã¹ããªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` option object\n     *  - `ja` ãªãã·ã§ã³\n     */\n    async sync<K extends SyncMethods>(method: K, context: SyncContext<object>, options?: Cancelable): Promise<SyncResult<K, object>> {\n        const { cancel } = options || {};\n        await cc(cancel);\n        const responce = Promise.resolve('read' === method ? {} : undefined);\n        context.trigger('@request', context, responce);\n        return responce as Promise<SyncResult<K, object>>;\n    }\n}\n\nexport const dataSyncNULL = new NullDataSync() as IDataSync<object>;\n","import { result } from '@cdp/core-utils';\nimport { SyncContext } from './interfaces';\n\n/** @internal resolve lack property */\nexport function resolveURL(context: SyncContext): string {\n    return result(context, 'url');\n}\n","import { RESULT_CODE, makeResult } from '@cdp/result';\nimport { AjaxOptions, ajax } from '@cdp/ajax';\nimport {\n    IDataSync,\n    SyncMethods,\n    SyncContext,\n    SyncResult,\n} from './interfaces';\nimport { resolveURL } from './internal';\n\n/**\n * @en Options interface for [[RestDataSync]].\n * @ja [[RestDataSync]] ã«æå®ãããªãã·ã§ã³\n */\nexport interface RestDataSyncOptions extends AjaxOptions<'json'> {\n    url?: string;\n}\n\n/** @internal */\nconst _methodMap = {\n    create: 'POST',\n    update: 'PUT',\n    patch: 'PATCH',\n    delete: 'DELETE',\n    read: 'GET'\n};\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en The [[IDataSync]] implemant class which compliant RESTful.\n * @ja REST ã«æºæ ãã [[IDataSync]] å®è£ã¯ã©ã¹\n */\nclass RestDataSync implements IDataSync {\n\n///////////////////////////////////////////////////////////////////////\n// implements: IDataSync\n\n    /**\n     * @en [[IDataSync]] kind signature.\n     * @ja [[IDataSync]] ã®ç¨®å¥ãè¡¨ãè­å¥å­\n     */\n    get kind(): string {\n        return 'rest';\n    }\n\n    /**\n     * @en Do data synchronization.\n     * @ja ãã¼ã¿åæ\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` ãªãã¬ã¼ã·ã§ã³ãæå®\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` åæããã³ã³ãã­ã¹ããªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` rest option object\n     *  - `ja` REST ãªãã·ã§ã³\n     */\n    sync<K extends SyncMethods>(method: K, context: SyncContext, options?: RestDataSyncOptions): Promise<SyncResult<K>> {\n        const params = Object.assign({ dataType: 'json' }, options);\n\n        const url = params.url || resolveURL(context);\n        if (!url) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_PARAMS, 'A \"url\" property or function must be specified.');\n        }\n\n        params.method = _methodMap[method];\n\n        // Ensure request data.\n        if (null == params.data && ('create' === method || 'update' === method || 'patch' === method)) {\n            params.data = context.toJSON();\n        }\n\n        // Ajax request\n        const responce = ajax(url, params);\n        context.trigger('@request', context, responce);\n        return responce as Promise<SyncResult<K>>;\n    }\n}\n\nexport const dataSyncREST = new RestDataSync() as IDataSync;\n","import {\n    PlainObject,\n    isArray,\n    isString,\n    isFunction,\n    deepMerge,\n} from '@cdp/core-utils';\nimport {\n    RESULT_CODE,\n    makeResult,\n    toResult,\n} from '@cdp/result';\nimport { IStorage, IStorageOptions } from '@cdp/core-storage';\nimport { webStorage } from '@cdp/web-storage';\nimport {\n    IDataSyncOptions,\n    IDataSync,\n    SyncMethods,\n    SyncObject,\n    SyncContext,\n    SyncResult,\n} from './interfaces';\nimport { resolveURL } from './internal';\n\n/** @internal */\nconst enum Const {\n    SEPARATOR = '::',\n}\n\n/**\n * @en [[IDataSync]] interface for [[IStorage]] accessor.\n * @ja [[IStorage]] ã¢ã¯ã»ããµãåãã [[IDataSync]] ã¤ã³ã¿ã¼ãã§ã¤ã¹\n */\nexport interface IStorageDataSync<T extends object = SyncObject> extends IDataSync<T> {\n    /**\n     * @en Get current [[IStorage]] instance.\n     * @ja ç¾å¨å¯¾è±¡ã® [[IStorage]] ã¤ã³ã¹ã¿ã³ã¹ã«ã¢ã¯ã»ã¹\n     */\n    getStorage(): IStorage;\n\n    /**\n     * @en Set new [[IStorage]] instance.\n     * @ja æ°ãã [[IStorage]] ã¤ã³ã¹ã¿ã³ã¹ãè¨­å®\n     */\n    setStorage(newStorage: IStorage): this;\n\n    /**\n     * @en Set new id-separator.\n     * @ja æ°ãã ID ã»ãã¬ã¼ã¿ãè¨­å®\n     *\n     * @param newSeparator\n     *  - `en` new separator string\n     *  - `ja` æ°ããã»ãã¬ã¼ã¿æå­å\n     * @returns\n     *  - `en` old separator string\n     *  - `ja` ä»¥åãè¨­å®ããã¦ããã»ãã¬ã¼ã¿æå­å\n     */\n    setIdSeparator(newSeparator: string): string;\n}\n\n/**\n * @en [[StorageDataSync]] construction options.\n * @ja [[StorageDataSync]] æ§ç¯ã«æå®ãããªãã·ã§ã³\n */\nexport interface StorageDataSyncConstructionOptions {\n    separator?: string;\n}\n\n/**\n * @en Options interface for [[StorageDataSync]].\n * @ja [[StorageDataSync]] ã«æå®ãããªãã·ã§ã³\n */\nexport type StorageDataSyncOptions = IDataSyncOptions & IStorageOptions;\n\n//__________________________________________________________________________________________________//\n\n/** @internal check model or not */\nfunction isModel(context: SyncContext): boolean {\n    return !!context.constructor['idAttribute'];\n}\n\n/** @internal create id */\nfunction genId(url: string): string {\n    return `${url}:${Date.now().toString(36)}`;\n}\n\n/** @internal resolve key for localStorage */\nfunction parseContext(context: SyncContext, separator: string): { model: boolean; key: string; url: string; data: { [idAttr: string]: string; }; } {\n    const model  = isModel(context);\n    const url    = resolveURL(context);\n    const idAttr = context.constructor['idAttribute'];\n    const data = (() => {\n        const retval = {} as { [idAttr: string]: string; };\n        if (model) {\n            const valid    = !isFunction(context['has']) ? false : context['has'](idAttr) as boolean;\n            retval[idAttr] = valid ? context.id as string : genId(url);\n        }\n        return retval;\n    })();\n    return {\n        model,\n        url,\n        key: `${url}${model ? `${separator}${data[idAttr]}` : ''}`,\n        data,\n    };\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en The [[IDataSync]] implemant class which target is [[IStorage]]. Default storage is [[WebStorage]].\n * @ja [[IStorage]] ãå¯¾è±¡ã¨ãã [[IDataSync]] å®è£ã¯ã©ã¹. æ¢å®å¤ã¯ [[WebStorage]]\n */\nclass StorageDataSync implements IStorageDataSync {\n    private _storage: IStorage;\n    private _separator: string;\n\n    /**\n     * constructor\n     *\n     * @param storage\n     *  - `en` [[IStorage]] object\n     *  - `ja` [[IStorage]] ãªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` construction options\n     *  - `ja` æ§ç¯ãªãã·ã§ã³\n     */\n    constructor(storage: IStorage, options?: StorageDataSyncConstructionOptions) {\n        this._storage = storage;\n        this._separator = options?.separator || Const.SEPARATOR;\n    }\n\n    ///////////////////////////////////////////////////////////////////////\n    // implements: IStorageDataSync\n\n    /**\n     * @en Get current [[IStorage]] instance.\n     * @ja ç¾å¨å¯¾è±¡ã® [[IStorage]] ã¤ã³ã¹ã¿ã³ã¹ã«ã¢ã¯ã»ã¹\n     */\n    getStorage(): IStorage {\n        return this._storage;\n    }\n\n    /**\n     * @en Set new [[IStorage]] instance.\n     * @ja æ°ãã [[IStorage]] ã¤ã³ã¹ã¿ã³ã¹ãè¨­å®\n     */\n    setStorage(newStorage: IStorage): this {\n        this._storage = newStorage;\n        return this;\n    }\n\n    /**\n     * @en Set new id-separator.\n     * @ja æ°ãã ID ã»ãã¬ã¼ã¿ãè¨­å®\n     *\n     * @param newSeparator\n     *  - `en` new separator string\n     *  - `ja` æ°ããã»ãã¬ã¼ã¿æå­å\n     * @returns\n     *  - `en` old separator string\n     *  - `ja` ä»¥åãè¨­å®ããã¦ããã»ãã¬ã¼ã¿æå­å\n     */\n    setIdSeparator(newSeparator: string): string {\n        const oldSeparator = this._separator;\n        this._separator = newSeparator;\n        return oldSeparator;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IDataSync\n\n    /**\n     * @en [[IDataSync]] kind signature.\n     * @ja [[IDataSync]] ã®ç¨®å¥ãè¡¨ãè­å¥å­\n     */\n    get kind(): string {\n        return 'storage';\n    }\n\n    /**\n     * @en Do data synchronization.\n     * @ja ãã¼ã¿åæ\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` ãªãã¬ã¼ã·ã§ã³ãæå®\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` åæããã³ã³ãã­ã¹ããªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` storage option object\n     *  - `ja` ã¹ãã¬ã¼ã¸ãªãã·ã§ã³\n     */\n    async sync<K extends SyncMethods>(method: K, context: SyncContext, options?: StorageDataSyncOptions): Promise<SyncResult<K>> {\n        const { model, key, url, data } = parseContext(context, this._separator);\n        if (!url) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_PARAMS, 'A \"url\" property or function must be specified.');\n        }\n\n        let responce: PlainObject | void | null;\n        switch (method) {\n            case 'create': {\n                const opts = deepMerge({ data }, options);\n                responce = await this.update(key, context, url, data[Object.keys(data)[0]], opts);\n                break;\n            }\n            case 'update':\n            case 'patch': {\n                responce = await this.update(key, context, url, context.id, options);\n                break;\n            }\n            case 'delete':\n                responce = await this.destroy(key, context, url, options);\n                break;\n            case 'read':\n                responce = await this.find(model, key, url, options) as PlainObject;\n                if (null == responce) {\n                    throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_STORAGE_DATA_NOT_FOUND, `method: ${method}`);\n                }\n                break;\n            default:\n                throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_PARAMS, `unknown method: ${method}`);\n        }\n\n        context.trigger('@request', context, Promise.resolve(responce as PlainObject));\n        return responce as SyncResult<K>;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// primate methods:\n\n    /** @internal */\n    private async queryEntries(url: string, options?: StorageDataSyncOptions): Promise<{ ids: boolean; items: (PlainObject | string)[]; }> {\n        const items = await this._storage.getItem<object>(url, options);\n        if (null == items) {\n            return { ids: true, items: [] };\n        } else if (isArray(items)) {\n            return { ids: !items.length || isString(items[0]), items };\n        } else {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY, `entry is not Array type.`);\n        }\n    }\n\n    /** @internal */\n    private saveEntries(url: string, entries: string[], options?: StorageDataSyncOptions): Promise<void> {\n        return this._storage.setItem(url, entries, options);\n    }\n\n    /** @internal */\n    private async find(model: boolean, key: string, url: string, options?: StorageDataSyncOptions): Promise<PlainObject | PlainObject[] | null> {\n        if (model) {\n            return this._storage.getItem<PlainObject>(key, options);\n        } else {\n            try {\n                // multi-entry\n                const { ids, items } = await this.queryEntries(url, options);\n                if (ids) {\n                    // findAll\n                    const entires: PlainObject[] = [];\n                    for (const id of items as string[]) {\n                        const entry = await this._storage.getItem<PlainObject>(`${url}${this._separator}${id}`, options);\n                        entry && entires.push(entry);\n                    }\n                    return entires;\n                } else {\n                    return items as PlainObject[];\n                }\n            } catch (e) {\n                const result = toResult(e);\n                if (RESULT_CODE.ERROR_MVC_INVALID_SYNC_STORAGE_ENTRY === result.code) {\n                    return this._storage.getItem<PlainObject>(key, options);\n                }\n                throw e;\n            }\n        }\n    }\n\n    /** @internal */\n    private async update(key: string, context: SyncContext, url: string, id?: string, options?: StorageDataSyncOptions): Promise<PlainObject | null> {\n        const { data } = options || {};\n        const attrs = Object.assign(context.toJSON(), data);\n        await this._storage.setItem(key, attrs, options);\n        if (key !== url) {\n            const { ids, items } = await this.queryEntries(url, options);\n            if (ids && id && !items.includes(id)) {\n                items.push(id);\n                await this.saveEntries(url, items as string[], options);\n            }\n        }\n        return this.find(true, key, url, options) as Promise<PlainObject | null>;\n    }\n\n    /** @internal */\n    private async destroy(key: string, context: SyncContext, url: string, options?: StorageDataSyncOptions): Promise<PlainObject | null> {\n        const old = await this._storage.getItem(key, options);\n        await this._storage.removeItem(key, options);\n        if (key !== url) {\n            const { ids, items } = await this.queryEntries(url, options);\n            if (ids && context.id) {\n                const entries = items.filter(i => i !== context.id);\n                await this.saveEntries(url, entries as string[], options);\n            }\n        }\n        return old as PlainObject;\n    }\n}\n\n/**\n * @en Create [[IStorageDataSync]] object with [[IStorage]].\n * @ja [[IStorage]] ãæå®ãã¦, [[IStorageDataSync]] ãªãã¸ã§ã¯ããæ§ç¯\n *\n * @param storage\n *  - `en` [[IStorage]] object\n *  - `ja` [[IStorage]] ãªãã¸ã§ã¯ã\n * @param options\n *  - `en` construction options\n *  - `ja` æ§ç¯ãªãã·ã§ã³\n */\nexport const createStorageDataSync = (storage: IStorage, options?: StorageDataSyncConstructionOptions): IStorageDataSync => {\n    return new StorageDataSync(storage, options);\n};\n\nexport const dataSyncSTORAGE = createStorageDataSync(webStorage);\n","import { IDataSync } from './interfaces';\nimport { dataSyncNULL } from './null';\n\n/** @internal */ let _default: IDataSync = dataSyncNULL;\n\n/**\n * @en Get or update default [[IDataSync]] object.\n * @ja æ¢å®ã® [[IDataSync]] ãªãã¸ã§ã¯ãã®åå¾ / æ´æ°\n *\n * @param newSync\n *  - `en` new data-sync object. if `undefined` passed, only returns the current object.\n *  - `ja` æ°ãã data-sync ãªãã¸ã§ã¯ããæå®. `undefined` ãæ¸¡ãããå ´åã¯ç¾å¨è¨­å®ããã¦ãã data-sync ã®è¿å´ã®ã¿è¡ã\n * @returns\n *  - `en` old data-sync object.\n *  - `ja` ä»¥åã® data-sync ãªãã¸ã§ã¯ããè¿å´\n */\nexport function defaultSync(newSync?: IDataSync): IDataSync {\n    if (null == newSync) {\n        return _default;\n    } else {\n        const oldSync = _default;\n        _default = newSync;\n        return oldSync;\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/restrict-plus-operands,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        MODEL = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 5,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja æ¡å¼µã¨ã©ã¼ã³ã¼ãå®ç¾©\n     */\n    export enum RESULT_CODE {\n        MVC_MODEL_DECLARE      = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_INVALID_DATA = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.MODEL + 1, 'invalid data.'),\n    }\n}\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Nil,\n    UnknownObject,\n    Constructor,\n    Class,\n    Arguments,\n    isObject,\n    isEmptyObject,\n    luid,\n    escapeHTML,\n    assignValue,\n    deepCopy,\n    deepEqual,\n    diff,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    Subscription,\n    Silenceable,\n    EventBroker,\n    EventReceiver,\n    EventSource,\n} from '@cdp/events';\nimport { checkCanceled as cc } from '@cdp/promise';\nimport {\n    IObservable,\n    IObservableEventBrokerAccess,\n    ObservableObject,\n} from '@cdp/observable';\nimport {\n    RESULT_CODE,\n    Result,\n    makeResult,\n    SUCCEEDED,\n    FAILED,\n} from '@cdp/result';\nimport { SyncContext, defaultSync } from '@cdp/data-sync';\nimport {\n    ModelSeed,\n    ModelEvent,\n    ModelValidateAttributeOptions,\n    ModelAttributeInput,\n    ModelSetOptions,\n    ModelConstructionOptions,\n    ModelSyncMethods,\n    ModelSyncResult,\n    ModelDataSyncOptions,\n    ModelFetchOptions,\n    ModelSaveOptions,\n    ModelDestroyOptions,\n} from './interfaces';\n\n/** @internal */ const _defineAttributes = Symbol('define');\n/** @internal */ const _updateAttributes = Symbol('update');\n/** @internal */ const _validate         = Symbol('validate');\n/** @internal */ const _changeHandler    = Symbol('onchange');\n/** @internal */ const _broker           = Symbol('broker');\n/** @internal */ const _properties       = Symbol('properties');\n\n/** @internal */\ninterface Property<T> {\n    attrs: ObservableObject;\n    baseAttrs: T;\n    prevAttrs: T;\n    changedAttrs?: Partial<T>;\n    readonly cid: string;\n    readonly options: ModelSetOptions;\n    changeFired: boolean;\n}\n\n/**\n * @en Valid attributes result.\n * @ja å±æ§æ¤è¨¼ã®æå¹å¤\n */\nexport const RESULT_VALID_ATTRS = Object.freeze(makeResult(RESULT_CODE.SUCCESS, 'valid attribute.'));\n\n/** @internal helper for save() */\nfunction parseSaveArgs<A extends object>(...args: any[]): { attrs?: ModelAttributeInput<A>; options?: ModelSaveOptions; } {\n    let [key, value, options] = args; // eslint-disable-line prefer-const\n    let attrs: any;\n\n    if (null == key || isObject(key)) {\n        attrs = key;\n        options = value;\n    } else {\n        assignValue(attrs = {}, key, value);\n    }\n\n    if (options && options.data) {\n        attrs = Object.assign(attrs || {}, options.data);\n    }\n\n    return { attrs, options };\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Base class definition for model that provides a basic set of functionality for managing interaction.\n * @ja ã¤ã³ã¿ã©ã¯ã·ã§ã³ã®ããã®åºæ¬æ©è½ãæä¾ãã Model ã®åºåºã¯ã©ã¹å®ç¾©\n *\n * @example <br>\n *\n * ```ts\n * import { Model, ModelConstructor } from '@cdp/model';\n *\n * interface ContentAttribute {\n *   uri: string;\n *   readonly size: number;\n *   cookie?: string;\n * }\n * ```\n *\n * - Basic Usage\n *\n * ```ts\n * // early cast\n * const ContentBase = Model as ModelConstructor<Model<ContentAttribute>, ContentAttribute>;\n *\n * class Content extends ContentBase {\n *   constructor(attrs: ContentAttribute) {\n *     super(attrs);\n *   }\n * }\n * ```\n *\n * or\n *\n * ```ts\n * // late cast\n * class ContentClass extends Model<ContentAttribute> {\n *   constructor(attrs: ContentAttribute) {\n *     super(attrs);\n *   }\n * }\n *\n * const Content = ContentClass as ModelConstructor<ContentClass, ContentAttribute>;\n * ```\n * then\n *\n * ```ts\n * const content = new Content({\n *   uri: 'aaa.txt',\n *   size: 10,\n *   cookie: undefined, // need explicit assign\n * });\n *\n * console.log(content.uri);    // 'aaa.txt'\n * console.log(content.size);   // '10'\n * console.log(content.cookie); // 'undefined'\n * ```\n *\n * - Using Custom TEvent\n *\n * ```ts\n * import { ModelEvent } from '@cdp/model';\n *\n * interface CustomEvent extends ModelEvent<ContentAttribute> {\n *   fire: [boolean, number];\n * }\n * \n * :\n *\n * // early cast\n * const ContentBase = Model as ModelConstructor<Model<ContentAttribute, CustomEvent>, ContentAttribute>;\n * class Content extends ContentBase {\n *   :\n * }\n *\n * // late cast\n * class ContentClass extends Model<ContentAttribute, CustomEvent> {\n *   :\n * }\n * const Content = ContentClass as ModelConstructor<ContentClass, ContentAttribute>;\n *\n * const content = new Content({ ... });\n * content.trigger('fire', true, 100);\n * ```\n */\nexport abstract class Model<T extends object = any, TEvent extends ModelEvent<T> = ModelEvent<T>> extends EventReceiver implements EventSource<TEvent> {\n    /**\n     * @en Get ID attribute name.\n     * @ja ID ã¢ããªãã¥ã¼ãåã«ã¢ã¯ã»ã¹\n     *\n     * @override\n     */\n    static idAttribute = 'id';\n\n    /**\n     * @en Attributes pool\n     * @ja å±æ§æ ¼ç´é å\n     *\n     * @internal\n     */\n    private readonly [_properties]!: Property<T>;\n\n    /**\n     * constructor\n     *\n     * @param attributes\n     *  - `en` initial attribute values\n     *  - `ja` å±æ§ã®åæå¤ãæå®\n     */\n    constructor(attributes: Required<T>, options?: ModelConstructionOptions) {\n        super();\n        const opts = Object.assign({}, options);\n        const attrs = opts.parse ? this.parse(attributes, opts) as T : attributes;\n        const props: Property<T> = {\n            attrs: ObservableObject.from(attrs),\n            baseAttrs: { ...attrs },\n            prevAttrs: { ...attrs },\n            cid: luid('model:', 8),\n            options: opts,\n            changeFired: false,\n        };\n        Object.defineProperty(this, _properties, { value: props });\n\n        for (const key of Object.keys(attrs)) {\n            this[_defineAttributes](this, key);\n        }\n\n        this[_changeHandler] = () => {\n            (this as Model).trigger('@change', this as Model);\n\n            const { _prevAttrs, _attrs } = this;\n            const changedKeys = Object.keys(diff(_prevAttrs, _attrs as unknown as Partial<T>));\n            for (const key of changedKeys) {\n                (this as any).trigger(`@change:${key}`, this, _attrs[key], _prevAttrs[key], key);\n            }\n\n            this[_properties].changeFired = true;\n        };\n\n        this[_validate]({}, opts);\n    }\n\n    /** @internal attribute update core */\n    private [_updateAttributes](name: string, val: unknown): void {\n        if (!deepEqual(this._attrs[name], val)) {\n            const { attrs, changeFired } = this[_properties];\n            if (changeFired) {\n                this[_properties].changeFired = false;\n                this[_properties].prevAttrs = { ...attrs } as T;\n            }\n            delete this[_properties].changedAttrs;\n            assignValue(this._prevAttrs as UnknownObject, name, attrs[name]);\n            assignValue(attrs as unknown as UnknownObject, name, val);\n        }\n    }\n\n    /** @internal attribute bridge def */\n    private [_defineAttributes](instance: object, name: string): void {\n        const proto = instance.constructor.prototype;\n        if (!(name in proto)) {\n            Object.defineProperty(proto, name, {\n                get(): unknown {\n                    return this._attrs[name];\n                },\n                set(val: unknown): void {\n                    this[_updateAttributes](name, val);\n                },\n                enumerable: true,\n                configurable: true,\n            });\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: public properties\n\n    /**\n     * @en Get content ID.\n     * @ja ã³ã³ãã³ã ID ãåå¾\n     */\n    get id(): string {\n        const idAttr = idAttribute(this, 'id');\n        const { cid, attrs } = this[_properties];\n        return (idAttr in attrs) ? attrs[idAttr] || cid : cid;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: protected properties\n\n    /**\n     * @en Attributes instance\n     * @ja å±æ§ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _attrs(): ObservableObject {\n        return this[_properties].attrs;\n    }\n\n    /**\n     * @en Default attributes instance\n     * @ja æ¢å®å¤å±æ§ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _baseAttrs(): T {\n        return this[_properties].baseAttrs;\n    }\n\n    /**\n     * @en Previous attributes instance\n     * @ja å¤æ´åã®å±æ§ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _prevAttrs(): T {\n        return this[_properties].prevAttrs;\n    }\n\n    /**\n     * @en Changed attributes instance\n     * @ja å¤æ´ã®ãã£ãå±æ§ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _changedAttrs(): Partial<T> {\n        if (null == this[_properties].changedAttrs) {\n            this[_properties].changedAttrs = diff(this._baseAttrs, this._attrs as unknown as Partial<T>);\n        }\n        return this[_properties].changedAttrs as Partial<T>; // eslint-disable-line @typescript-eslint/no-unnecessary-type-assertion\n    }\n\n    /**\n     * @en Get internal content ID.\n     * @ja åé¨ã®ã³ã³ãã³ã ID ãåå¾\n     */\n    protected get _cid(): string {\n        return this[_properties].cid;\n    }\n\n    /**\n     * @en Get creating options.\n     * @ja æ§ç¯æã®ãªãã·ã§ã³ãåå¾\n     */\n    protected get _options(): ModelSetOptions {\n        return this[_properties].options;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: events\n\n    /**\n     * @en EventSource type resolver.\n     * @ja EventSource åè§£æ±ºç¨ãã«ãã¼ã¢ã¯ã»ããµ\n     */\n    get $(): EventSource<TEvent> {\n        return this;\n    }\n\n    /** @internal broker access */\n    private get [_broker](): EventBroker<any> {\n        return (this._attrs as IObservable as IObservableEventBrokerAccess).getBroker();\n    }\n\n    /**\n     * @en Check whether this object has clients.\n     * @ja ã¯ã©ã¤ã¢ã³ããå­å¨ãããå¤å®\n     *\n     * @param channel\n     *  - `en` event channel key. (string | symbol)\n     *  - `ja` ã¤ãã³ããã£ãã«ã­ã¼ (string | symbol)\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *  - `ja` `channel` ã«å¯¾å¿ããã³ã¼ã«ããã¯é¢æ°\n     */\n    hasListener<Channel extends keyof TEvent>(channel?: Channel, listener?: (...args: Arguments<TEvent[Channel]>) => unknown): boolean {\n        return this[_broker].hasListener(channel, listener);\n    }\n\n    /**\n     * @en Returns registered channel keys.\n     * @ja ç»é²ããã¦ãããã£ãã«ã­ã¼ãè¿å´\n     */\n    channels(): (keyof TEvent)[] {\n        return this[_broker].channels().filter(c => '@' !== c) as (keyof TEvent)[];\n    }\n\n    /**\n     * @en Notify event to clients.\n     * @ja event çºè¡\n     *\n     * @param channel\n     *  - `en` event channel key. (string | symbol)\n     *  - `ja` ã¤ãã³ããã£ãã«ã­ã¼ (string | symbol)\n     * @param args\n     *  - `en` arguments for callback function of the `channel` corresponding.\n     *  - `ja` `channel` ã«å¯¾å¿ããã³ã¼ã«ããã¯é¢æ°ã«æ¸¡ãå¼æ°\n     */\n    public trigger<Channel extends keyof TEvent>(channel: Channel, ...args: Arguments<Partial<TEvent[Channel]>>): void {\n        (this[_broker] as any).trigger(channel, ...args);\n    }\n\n    /**\n     * @en Unsubscribe event(s).\n     * @ja ã¤ãã³ãè³¼èª­è§£é¤\n     *\n     * @param channel\n     *  - `en` target event channel key. (string | symbol)\n     *         When not set this parameter, everything is released.\n     *  - `ja` å¯¾è±¡ã®ã¤ãã³ããã£ãã«ã­ã¼ (string | symbol)\n     *         æå®ããªãå ´åã¯ãã¹ã¦è§£é¤\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *         When not set this parameter, all same `channel` listeners are released.\n     *  - `ja` `channel` ã«å¯¾å¿ããã³ã¼ã«ããã¯é¢æ°\n     *         æå®ããªãå ´åã¯åä¸ `channel` ãã¹ã¦ãè§£é¤\n     */\n    public off<Channel extends keyof TEvent>(channel?: Channel | Channel[], listener?: (...args: Arguments<TEvent[Channel]>) => unknown): void {\n        this._attrs.off(channel as any, listener as any);\n    }\n\n    /**\n     * @en Subscrive event(s).\n     * @ja ã¤ãã³ãè³¼èª­è¨­å®\n     *\n     * @param channel\n     *  - `en` target event channel key. (string | symbol)\n     *  - `ja` å¯¾è±¡ã®ã¤ãã³ããã£ãã«ã­ã¼ (string | symbol)\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *  - `ja` `channel` ã«å¯¾å¿ããã³ã¼ã«ããã¯é¢æ°\n     */\n    public on<Channel extends keyof TEvent>(channel: Channel | Channel[], listener: (...args: Arguments<TEvent[Channel]>) => unknown): Subscription {\n        this._attrs.on('@', this[_changeHandler]);\n        return this._attrs.on(channel as any, listener as any);\n    }\n\n    /**\n     * @en Subscrive event(s) but it causes the bound callback to only fire once before being removed.\n     * @ja ä¸åº¦ã ããã³ããªã³ã°å¯è½ãªã¤ãã³ãè³¼èª­è¨­å®\n     *\n     * @param channel\n     *  - `en` target event channel key. (string | symbol)\n     *  - `ja` å¯¾è±¡ã®ã¤ãã³ããã£ãã«ã­ã¼ (string | symbol)\n     * @param listener\n     *  - `en` callback function of the `channel` corresponding.\n     *  - `ja` `channel` ã«å¯¾å¿ããã³ã¼ã«ããã¯é¢æ°\n     */\n    public once<Channel extends keyof TEvent>(channel: Channel | Channel[], listener: (...args: Arguments<TEvent[Channel]>) => unknown): Subscription {\n        const context = this.on(channel, listener);\n        const managed = this.on(channel, () => {\n            context.unsubscribe();\n            managed.unsubscribe();\n        });\n        return context;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: validation\n\n    /**\n     * @en Check valid or not.\n     * @ja æ¤è¨¼ã®æå¦ãåå¾\n     */\n    get isValid(): boolean {\n        return SUCCEEDED(this.validate({ silent: true }).code);\n    }\n\n    /**\n     * @en Validate result accesser.\n     * @ja æ¤è¨¼çµæã«ã¢ã¯ã»ã¹\n     */\n    public validate(options?: Silenceable): Result {\n        const opts = Object.assign({ validate: true, noThrow: true, extend: false }, options);\n        return this[_validate]({}, opts);\n    }\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /**\n     * @en Validate data method.\n     * @ja ãã¼ã¿æ¤è¨¼\n     *\n     * @override\n     *\n     * @param attributes\n     *  - `en` validatee attributes\n     *  - `ja` è¢«æ¤è¨¼å±æ§\n     * @param options\n     *  - `en` validate options\n     *  - `ja` æ¤è¨¼ãªãã·ã§ã³\n     */\n    protected validateAttributes<A extends T>(attributes: ModelAttributeInput<A>, options?: ModelValidateAttributeOptions): Result {\n        return RESULT_VALID_ATTRS;\n    }\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n\n    /** @internal validate */\n    private [_validate]<A extends T>(attributes: ModelAttributeInput<A>, options?: ModelSetOptions): Result | never {\n        const { validate, silent, noThrow } = options || {};\n        if (validate) {\n            const attrs = { ...this._attrs, ...attributes };\n            const result = this.validateAttributes(attrs, options);\n            if (FAILED(result.code)) {\n                if (!silent) {\n                    (this as Model).trigger('@invalid', this as Model, attrs, result);\n                }\n                if (!noThrow) {\n                    throw result;\n                }\n            }\n            return result;\n        } else {\n            return RESULT_VALID_ATTRS;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: attributes\n\n    /**\n     * @en Check the [[Model]] has valid property. (not `null` or `undefined`)\n     * @ja [[Model]] ãæå¹ãªãã­ããã£ãæã£ã¦ãããç¢ºèª (`null` ã¾ãã¯ `undefined` ã§ãªã)\n     */\n    public has(attribute: keyof T): boolean {\n        return null != (this._attrs as unknown as T)[attribute];\n    }\n\n    /**\n     * @en Get the HTML-escaped value of an attribute.\n     * @ja HTML ã§ä½¿ç¨ããæå­ãå¶å¾¡æå­ã«ç½®æããå±æ§å¤ãåå¾\n     */\n    public escape(attribute: keyof T): string {\n        return escapeHTML((this._attrs as any)[attribute]);\n    }\n\n    /**\n     * @en Update attributes for batch input with options.\n     * @ja å±æ§ã®ä¸æ¬è¨­å®\n     *\n     * @param attributes\n     *  - `en` update attributes\n     *  - `ja` æ´æ°å±æ§\n     * @param options\n     *  - `en` set attributes options\n     *  - `ja` å±æ§æ´æ°ç¨ãªãã·ã§ã³\n     */\n    public setAttributes<A extends T>(attributes: ModelAttributeInput<A>, options?: ModelSetOptions): this {\n        const { silent, extend } = options || {};\n\n        try {\n            if (silent) {\n                this._attrs.suspend(true);\n            }\n\n            const result = this[_validate](attributes, options);\n            if (FAILED(result.code)) {\n                return this;\n            }\n\n            for (const attr of Object.keys(attributes)) {\n                if (attr in this._attrs) {\n                    this[_updateAttributes](attr, attributes[attr]);\n                } else if (extend) {\n                    this[_defineAttributes](this, attr);\n                    this[_updateAttributes](attr, attributes[attr]);\n                }\n            }\n        } finally {\n            if (silent) {\n                this._attrs.resume();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Clear all attributes on the [[Model]]. (set `undefined`)\n     * @ja [[Model]] ãããã¹ã¦ã®å±æ§ãåé¤ (`undefined` ãè¨­å®)\n     */\n    public clear(options?: ModelSetOptions): this {\n        const clearAttrs = {};\n        for (const attr of Object.keys(this._baseAttrs)) {\n            clearAttrs[attr] = undefined;\n        }\n        return this.setAttributes(clearAttrs, options);\n    }\n\n    /**\n     * @en Return a copy of the model's `attributes` object.\n     * @ja Model å±æ§å¤ã®ã³ãã¼ãè¿å´\n     */\n    public toJSON(): T {\n        return deepCopy({ ...this._attrs } as T);\n    }\n\n    /**\n     * @es Clone this instance.\n     * @ja ã¤ã³ã¹ã¿ã³ã¹ã®è¤è£½ãè¿å´\n     *\n     * @override\n     */\n    public clone(): this {\n        const { constructor, _attrs, _options } = this;\n        return new (constructor as Constructor<this>)(_attrs, _options);\n    }\n\n    /**\n     * @en Check changed attributes.\n     * @ja å¤æ´ãããå±æ§å¤ãæã¤ãå¤å®\n     *\n     * @param attribute\n     *  - `en` checked attribute\n     *  - `ja` æ¤è¨¼ããå±æ§\n     */\n    public hasChanged(attribute?: keyof T): boolean {\n        if (null == attribute) {\n            return !isEmptyObject(this._changedAttrs);\n        } else {\n            return attribute in this._changedAttrs;\n        }\n    }\n\n    /**\n     * @en Return an object containing all the attributes that have changed, or `undefined` if there are no changed attributes.\n     * @ja å¥åãã attributes å¤ã®å·®åã«å¯¾ãã¦å¤æ´ãããå±æ§å¤ãè¿å´. å·®åããªãå ´åã¯ `undefiend` ãè¿å´\n     *\n     * @param attributes\n     *  - `en` checked attributes\n     *  - `ja` æ¤è¨¼ããå±æ§\n     */\n    public changed(attributes?: Partial<T>): Partial<T> | undefined {\n        if (!attributes) {\n            return this.hasChanged() ? { ...this._changedAttrs } : undefined;\n        } else {\n            const changed = diff(this._attrs, attributes);\n            return !isEmptyObject(changed) ? changed : undefined;\n        }\n    }\n\n    /**\n     * @en Get the previous value of an attribute, recorded at the time the last `@change` event was fired.\n     * @ja `@change` ãçºç«ãããåã®å±æ§å¤ãåå¾\n     */\n    public previous<K extends keyof T>(attribute: K): T[K] {\n        return this._prevAttrs[attribute];\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: sync\n\n    /**\n     * @en Check a [[Model]] is new if it has never been saved to the server, and lacks an id.\n     * @ja [[Model]] ãã¾ã ãµã¼ãã¼ã«å­å¨ããªãããã§ãã¯. æ¢å®ã§ã¯ `idAttribute` ã®æç¡ã§å¤å®\n     */\n    protected isNew(): boolean {\n        const idAttr = idAttribute(this, 'id');\n        return !this.has(idAttr as keyof T);\n    }\n\n    /**\n     * @en Converts a response into the hash of attributes to be `set` on the model. The default implementation is just to pass the response along.\n     * @ja ã¬ã¹ãã³ã¹ã®å¤æã¡ã½ãã. æ¢å®ã§ã¯ä½ãããªã\n     *\n     * @override\n     */\n    protected parse(response: ModelSeed | void, options?: ModelSetOptions): T | void { // eslint-disable-line @typescript-eslint/no-unused-vars\n        return response as T;\n    }\n\n    /**\n     * @en Proxy [[IDataSync#sync]] by default -- but override this if you need custom syncing semantics for *this* particular model.\n     * @ja ãã¼ã¿åæ. å¿è¦ã«å¿ãã¦ãªã¼ãã¼ã©ã¤ãå¯è½.\n     *\n     * @override\n     *\n     * @param method\n     *  - `en` operation string\n     *  - `ja` ãªãã¬ã¼ã·ã§ã³ãæå®\n     * @param context\n     *  - `en` synchronized context object\n     *  - `ja` åæããã³ã³ãã­ã¹ããªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` option object\n     *  - `ja` ãªãã·ã§ã³\n     */\n    protected sync<K extends ModelSyncMethods>(method: K, context: Model<T>, options?: ModelDataSyncOptions): Promise<ModelSyncResult<K, T>> {\n        return defaultSync().sync(method, context as SyncContext<T>, options) as unknown as Promise<ModelSyncResult<K, T>>;\n    }\n\n    /**\n     * @en Fetch the [[Model]] from the server, merging the response with the model's local attributes.\n     * @ja [[Model]] å±æ§ã®ãµã¼ãã¼åæ. ã¬ã¹ãã³ã¹ã®ãã¼ã¸ãå®è¡\n     */\n    public async fetch(options?: ModelFetchOptions): Promise<T> {\n        const opts = Object.assign({ parse: true }, options, { syncMethod: 'read' });\n\n        try {\n            const resp = await this.sync('read', this as Model<T>, opts);\n            this.setAttributes(opts.parse ? this.parse(resp as ModelSeed, opts) as T : resp, opts);\n            (this as Model).trigger('@sync', this as Model, resp as ModelSeed, opts);\n            return resp;\n        } catch (e) {\n            (this as Model).trigger('@error', this as Model, e, opts);\n            throw e;\n        }\n    }\n\n    /**\n     * @en Set a hash of [[Model]] attributes, and sync the model to the server. <br>\n     *     If the server returns an attributes hash that differs, the model's state will be `set` again.\n     * @ja [[Model]] å±æ§ããµã¼ãã¼ã«ä¿å­. <br>\n     *     ç°ãªãå±æ§ãè¿å´ãããå ´åã¯åè¨­å®\n     *\n     * @param key\n     *  - `en` update attribute key\n     *  - `ja` æ´æ°å±æ§ã­ã¼\n     * @param value\n     *  - `en` update attribute value\n     *  - `ja` æ´æ°å±æ§å¤\n     * @param options\n     *  - `en` save options\n     *  - `ja` ä¿å­ãªãã·ã§ã³\n     */\n    public async save<K extends keyof T>(key?: keyof T, value?: T[K], options?: ModelSaveOptions): Promise<T | void>;\n\n    /**\n     * @en Set a hash of [[Model]] attributes, and sync the model to the server. <br>\n     *     If the server returns an attributes hash that differs, the model's state will be `set` again.\n     * @ja [[Model]] å±æ§ããµã¼ãã¼ã«ä¿å­. <br>\n     *     ç°ãªãå±æ§ãè¿å´ãããå ´åã¯åè¨­å®\n     *\n     * @param attributes\n     *  - `en` update attributes\n     *  - `ja` æ´æ°å±æ§\n     * @param options\n     *  - `en` save options\n     *  - `ja` ä¿å­ãªãã·ã§ã³\n     */\n    public async save<A extends T>(attributes: ModelAttributeInput<A> | Nil, options?: ModelSaveOptions): Promise<T | void>;\n\n    public async save(...args: unknown[]): Promise<T | void> {\n        const { attrs, options } = parseSaveArgs(...args);\n        const opts = Object.assign({ validate: true, parse: true, wait: true, extend: true }, options);\n\n        try {\n            const { wait } = opts;\n\n            const method = opts.syncMethod = this.isNew() ? 'create' : opts.patch ? 'patch' : 'update';\n\n            if (attrs) {\n                if (!wait) {\n                    this.setAttributes(attrs, opts);\n                    this[_properties].baseAttrs = { ...this._attrs } as T;\n                } else {\n                    this[_validate](attrs, opts);\n                }\n                if ('patch' === method) {\n                    opts.data = attrs;\n                } else {\n                    opts.data = Object.assign(this.toJSON(), attrs);\n                }\n            }\n\n            const resp = await this.sync(method, this as Model<T>, opts);\n\n            let serverAttrs = opts.parse ? this.parse(resp, opts) : resp;\n            if (attrs && wait) {\n                serverAttrs = Object.assign({}, attrs, serverAttrs);\n            }\n            if (isObject(serverAttrs) && !isEmptyObject(serverAttrs)) {\n                this.setAttributes(serverAttrs as T, opts);\n                this[_properties].baseAttrs = { ...this._attrs } as T;\n            }\n\n            (this as Model).trigger('@sync', this as Model, resp as ModelSeed, opts);\n            return resp as T;\n        } catch (e) {\n            (this as Model).trigger('@error', this as Model, e, opts);\n            throw e;\n        }\n    }\n\n    /**\n     * @en Destroy this [[Model]] on the server if it was already persisted.\n     * @ja [[Model]] ããµã¼ãã¼ããåé¤\n     *\n     * @param options\n     *  - `en` destroy options\n     *  - `ja` ç ´æ£ãªãã·ã§ã³\n     */\n    public async destroy(options?: ModelDestroyOptions): Promise<T | void> {\n        const opts = Object.assign({ wait: true }, options, { syncMethod: 'delete' });\n\n        try {\n            const { wait, cancel } = opts;\n            const exists = !this.isNew();\n            const destruct = (): void => {\n                this.stopListening();\n                (this as Model).trigger('@destroy', this as Model, opts);\n            };\n\n            !wait && destruct();\n\n            let resp: ModelSeed | void;\n            if (!exists) {\n                await cc(cancel);\n            } else {\n                resp = await this.sync('delete', this as Model<T>, opts);\n            }\n\n            wait && destruct();\n            exists && (this as Model).trigger('@sync', this as Model, resp as ModelSeed, opts);\n\n            return resp as T;\n        } catch (e) {\n            (this as Model).trigger('@error', this as Model, e, opts);\n            throw e;\n        }\n    }\n}\n\n// mixin ã«ãã `instanceof` ã¯ç¡å¹ã«è¨­å®\nsetMixClassAttribute(Model as unknown as Class, 'instanceOf', null);\n\n/**\n * @en Check the value-type is [[Model]].\n * @ja [[Model]] åã§ãããå¤å®\n *\n * @param x\n *  - `en` evaluated value\n *  - `ja` è©ä¾¡ããå¤\n */\nexport function isModel(x: unknown): x is Model {\n    return x instanceof Model;\n}\n\n/**\n * @en Query [[Model]] `id-attribute`.\n * @ja [[Model]] ã® `id-attribute` ãåå¾\n */\nexport function idAttribute(x: unknown, fallback = ''): string {\n    return isObject(x) ? (x.constructor['idAttribute'] || fallback) : fallback;\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/restrict-plus-operands,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        COLLECTION = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 10,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja æ¡å¼µã¨ã©ã¼ã³ã¼ãå®ç¾©\n     */\n    export enum RESULT_CODE {\n        MVC_COLLECTION_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_INVALID_ACCESS         = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.COLLECTION + 1, 'invalid access.'),\n        ERROR_MVC_INVALID_COMPARATORS    = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.COLLECTION + 2, 'invalid comparators.'),\n        ERROR_MVC_EDIT_PERMISSION_DENIED = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.COLLECTION + 3, 'editing permission denied.'),\n    }\n}\n","import { getLanguage } from '@cdp/i18n';\nimport {\n    SortOrder,\n    SortCallback,\n    SortKey,\n} from '../interfaces';\n\n/**\n * @en `Intl.Collator` factory function type definition.\n * @ja `Intl.Collator` ãè¿å´ããé¢æ°åå®ç¾©\n */\nexport type CollatorProvider = () => Intl.Collator;\n\n/** @internal default Intl.Collator provider */\nlet _collator: CollatorProvider = (): Intl.Collator => {\n    return new Intl.Collator(getLanguage(), { sensitivity: 'base', numeric: true });\n};\n\n/**\n * @ja æ¢å®ã® Intl.Collator ãè¨­å®\n *\n * @param newProvider\n *  - `en` new [[CollatorProvider]] object. if `undefined` passed, only returns the current object.\n *  - `ja` æ°ãã [[CollatorProvider]] ãªãã¸ã§ã¯ããæå®. `undefined` ãæ¸¡ãããå ´åã¯ç¾å¨è¨­å®ããã¦ãããªãã¸ã§ã¯ãã®è¿å´ã®ã¿è¡ã\n * @returns\n *  - `en` old [[CollatorProvider]] object.\n *  - `ja` è¨­å®ããã¦ãã [[CollatorProvider]] ãªãã¸ã§ã¯ã\n */\nexport function defaultCollatorProvider(newProvider?: CollatorProvider): CollatorProvider {\n    if (null == newProvider) {\n        return _collator;\n    } else {\n        const oldProvider = _collator;\n        _collator = newProvider;\n        return oldProvider;\n    }\n}\n\n/**\n * @en Get string comparator function.\n * @ja æå­åæ¯è¼ç¨é¢æ°ãåå¾\n *\n * @param prop\n *  - `en` property name\n *  - `ja` ãã­ããã£åãæå®\n * @param order\n *  - `en` sort order code\n *  - `ja` ã½ã¼ãé ãæå®\n */\nexport function getStringComparator<T, K extends string = string>(prop: K, order: SortOrder): SortCallback<T> {\n    return (lhs: T, rhs: T): number => {\n        // undefined ã¯ '' ã¨åç­ã«æ±ã\n        const lhsProp = (null != lhs[prop as string]) ? lhs[prop as string] : '';\n        const rhsProp = (null != rhs[prop as string]) ? rhs[prop as string] : '';\n        return order * _collator().compare(lhsProp, rhsProp);\n    };\n}\n\n/**\n * @en Get date comparator function.\n * @ja æ¥ææ¯è¼ç¨é¢æ°ãåå¾\n *\n * @param prop\n *  - `en` property name\n *  - `ja` ãã­ããã£åãæå®\n * @param order\n *  - `en` sort order code\n *  - `ja` ã½ã¼ãé ãæå®\n */\nexport function getDateComparator<T, K extends string = string>(prop: K, order: SortOrder): SortCallback<T> {\n    return (lhs: T, rhs: T): number => {\n        const lhsDate = lhs[prop as string];\n        const rhsDate = rhs[prop as string];\n        if (lhsDate === rhsDate) {\n            // (undefined === undefined) or èªå·±åç§\n            return 0;\n        } else if (null == lhsDate) {\n            // undefined ã¯æä½å¤æ±ã (æé æã«åé ­ã¸)\n            return -1 * order;\n        } else if (null == rhsDate) {\n            // undefined ã¯æä½å¤æ±ã (æé æã«åé ­ã¸)\n            return 1 * order;\n        } else {\n            const lhsValue = Object(lhsDate).valueOf();\n            const rhsValue = Object(rhsDate).valueOf();\n            if (lhsValue === rhsValue) {\n                return 0;\n            } else {\n                return (lhsValue < rhsValue ? -1 * order : 1 * order);\n            }\n        }\n    };\n}\n\n/**\n * @en Get generic comparator function by comparative operator.\n * @ja æ¯è¼æ¼ç®å­ãç¨ããæ±ç¨æ¯è¼é¢æ°ã®åå¾\n *\n * @param prop\n *  - `en` property name\n *  - `ja` ãã­ããã£åãæå®\n * @param order\n *  - `en` sort order code\n *  - `ja` ã½ã¼ãé ãæå®\n */\nexport function getGenericComparator<T, K extends string = string>(prop: K, order: SortOrder): SortCallback<T> {\n    return (lhs: T, rhs: T): number => {\n        if (lhs[prop as string] === rhs[prop as string]) {\n            return 0;\n        } else if (null == lhs[prop as string]) {\n            // undefined ã¯æä½å¤æ±ã (æé æã«åé ­ã¸)\n            return -1 * order;\n        } else if (null == rhs[prop as string]) {\n            // undefined ã¯æä½å¤æ±ã (æé æã«åé ­ã¸)\n            return 1 * order;\n        } else {\n            return (lhs[prop as string] < rhs[prop as string] ? -1 * order : 1 * order);\n        }\n    };\n}\n\n/**\n * @en Get boolean comparator function.\n * @ja çå½å¤æ¯è¼ç¨é¢æ°ãåå¾\n */\nexport const getBooleanComparator = getGenericComparator;\n\n/**\n * @en Get numeric comparator function.\n * @ja æ°å¤æ¯è¼ç¨é¢æ°ãåå¾\n */\nexport const getNumberComparator = getGenericComparator;\n\n/**\n * @en Convert to comparator from [[SortKey]].\n * @ja [[SortKey]] ã comparator ã«å¤æ\n */\nexport function toComparator<T, K extends string = string>(sortKey: SortKey<K>): SortCallback<T> {\n    const { name, type, order } = sortKey;\n    switch (type) {\n        case 'string':\n            return getStringComparator<T, K>(name, order);\n        case 'boolean':\n            return getBooleanComparator<T, K>(name, order);\n        case 'number':\n            return getNumberComparator<T, K>(name, order);\n        case 'date':\n            return getDateComparator<T, K>(name, order);\n        default:\n            return getGenericComparator<T, K>(name, order);\n    }\n}\n\n/**\n * @en Convert to comparator array from [[SortKey]] array.\n * @ja [[SortKey]] éåã comparator éåã«å¤æ\n */\nexport function convertSortKeys<T, K extends string = string>(sortKeys: SortKey<K>[]): SortCallback<T>[] {\n    const comparators: SortCallback<T>[] = [];\n    for (const sortKey of sortKeys) {\n        comparators.push(toComparator(sortKey));\n    }\n    return comparators;\n}\n","import { unique } from '@cdp/core-utils';\nimport {\n    CancelToken,\n    checkCanceled as cc,\n} from '@cdp/promise';\nimport { ObservableArray, ArrayChangeRecord } from '@cdp/observable';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\n\nconst {\n    /** @internal */ trunc\n} = Math;\n\n/** @internal wait for change detection */\nfunction makePromise<T>(editor: ObservableArray<T>, remap?: T[]): Promise<ArrayChangeRecord<T>[]> {\n    return new Promise(resolve => {\n        const callback = (records: ArrayChangeRecord<T>[]): void => {\n            editor.off(callback);\n            if (remap) {\n                remap.length = 0;\n                remap.push(...editor);\n            }\n            resolve(records);\n        };\n        editor.on(callback);\n    });\n}\n\n/** @internal convert to [[ObservableArray]] if needed. */\nasync function getEditContext<T>(\n    target: ObservableArray<T> | T[],\n    token?: CancelToken\n): Promise<{ editor: ObservableArray<T>; promise: Promise<ArrayChangeRecord<T>[]>; }> | never {\n    if (target instanceof ObservableArray) {\n        await cc(token);\n        return {\n            editor: target,\n            promise: makePromise(target),\n        };\n    } else if (Array.isArray(target)) {\n        const editor = ObservableArray.from(target);\n        await cc(token);\n        return {\n            editor,\n            promise: makePromise(editor, target),\n        };\n    } else {\n        throw makeResult(RESULT_CODE.NOT_SUPPORTED, 'target is not Array or ObservableArray.');\n    }\n}\n\n/** @internal valid orders index */\nfunction validOrders(length: number, orders: number[]): boolean | never {\n    if (null == orders || orders.length <= 0) {\n        return false;\n    }\n\n    for (const index of orders) {\n        if (index < 0 || length <= index || trunc(index) !== index) {\n            throw makeResult(RESULT_CODE.NOT_SUPPORTED, `orders[] index is invalid. index: ${index}`);\n        }\n    }\n\n    return true;\n}\n\n/**\n * @en Clear all array elements.\n * @ja éåã®å¨åé¤\n *\n * @param target\n *  - `en` target array\n *  - `ja` å¯¾è±¡éå\n * @param token\n *  - `en` [[CancelToken]] reference. (enable `undefined`)\n *  - `ja` [[CancelToken]] ãæå® (undefined å¯)\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function clearArray<T>(target: ObservableArray<T> | T[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    if (target.length <= 0) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    editor.splice(0, target.length);\n\n    return promise;\n}\n\n/**\n * @en Append source elements to the end of array.\n * @ja éåã®æ«å°¾ã«è¿½å \n *\n * @param target\n *  - `en` target array\n *  - `ja` å¯¾è±¡éå\n * @param src\n *  - `en` source elements\n *  - `ja` è¿½å åè¦ç´ \n * @param token\n *  - `en` [[CancelToken]] reference. (enable `undefined`)\n *  - `ja` [[CancelToken]] ãæå® (undefined å¯)\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function appendArray<T>(target: ObservableArray<T> | T[], src: T[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    if (null == src || src.length <= 0) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    editor.push(...src);\n\n    return promise;\n}\n\n/**\n * @en Insert source elements to specified index of array.\n * @ja æå®ããä½ç½®ã«æ¿å¥\n *\n * @param target\n *  - `en` target array\n *  - `ja` å¯¾è±¡éå\n * @param index\n *  - `ja` target array position index\n *  - `ja` è¿½å åã®ã¤ã³ããã¯ã¹\n * @param src\n *  - `en` source elements\n *  - `ja` è¿½å åè¦ç´ \n * @param token\n *  - `en` [[CancelToken]] reference. (enable `undefined`)\n *  - `ja` [[CancelToken]] ãæå® (undefined å¯)\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function insertArray<T>(target: ObservableArray<T> | T[], index: number, src: T[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    // æå¾ã®è¦ç´ ã«è¿½å ãããã index == target.length ãè¨±å®¹\n    if (index < 0 || target.length < index || trunc(index) !== index) {\n        throw makeResult(RESULT_CODE.NOT_SUPPORTED, `insertArray(), index is invalid. index: ${index}`);\n    } else if (null == src || src.length <= 0) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    editor.splice(index, 0, ...src);\n\n    return promise;\n}\n\n/**\n * @en Reorder array elements position.\n * @ja é ç®ã®ä½ç½®ãå¤æ´\n *\n * @param target\n *  - `en` target array\n *  - `ja` å¯¾è±¡éå\n * @param index\n *  - `ja` target array position index\n *  - `ja` è¿½å åã®ã¤ã³ããã¯ã¹\n * @param orders\n *  - `en` edit order index array\n *  - `ja` ã¤ã³ããã¯ã¹éå\n * @param token\n *  - `en` [[CancelToken]] reference. (enable `undefined`)\n *  - `ja` [[CancelToken]] ãæå® (undefined å¯)\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function reorderArray<T>(target: ObservableArray<T> | T[], index: number, orders: number[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    // æå¾ã®è¦ç´ ã«è¿½å ãããã index == target.length ãè¨±å®¹\n    if (index < 0 || target.length < index || trunc(index) !== index) {\n        throw makeResult(RESULT_CODE.NOT_SUPPORTED, `reorderArray(), index is invalid. index: ${index}`);\n    } else if (!validOrders(target.length, orders)) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    // ä½æ¥­éåã§ç·¨é\n    let work: (T | null)[] = Array.from(editor);\n    {\n        const reorders: T[] = [];\n        for (const order of unique(orders)) {\n            reorders.push(editor[order]);\n            work[order] = null;\n        }\n\n        work.splice(index, 0, ...reorders);\n        work = work.filter((value) => {\n            return null != value;\n        });\n    }\n\n    // å¤ãæ¸ãæ»ã\n    for (const idx of work.keys()) {\n        editor[idx] = work[idx] as T;\n    }\n\n    return promise;\n}\n\n/**\n * @en Remove array elements.\n * @ja é ç®ã®åé¤\n *\n * @param target\n *  - `en` target array\n *  - `ja` å¯¾è±¡éå\n * @param orders\n *  - `en` removed order index array\n *  - `ja` ã¤ã³ããã¯ã¹éå\n * @param token\n *  - `en` [[CancelToken]] reference. (enable `undefined`)\n *  - `ja` [[CancelToken]] ãæå® (undefined å¯)\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function removeArray<T>(target: ObservableArray<T> | T[], orders: number[], token?: CancelToken): Promise<ArrayChangeRecord<T>[]> {\n    if (!validOrders(target.length, orders)) {\n        return [];\n    }\n\n    const { editor, promise } = await getEditContext(target, token);\n\n    // éé ã½ã¼ã\n    orders.sort((lhs, rhs) => {\n        return (lhs < rhs ? 1 : -1);\n    });\n\n    for (const order of unique(orders)) {\n        editor.splice(order, 1);\n    }\n\n    return promise;\n}\n","import { Keys, computeDate } from '@cdp/core-utils';\nimport { FilterCallback, DynamicCombination } from '../interfaces';\n\n/** @internal */ export type ValueTypeALL<T extends object> = Extract<number | string | Date, T[Keys<T>]>;\n/** @internal */ export type ValueTypeComparable<T extends object> = Extract<number | Date, T[Keys<T>]>;\n/** @internal */ export type ValueTypeString<T extends object> = Extract<string, T[Keys<T>]>;\n/** @internal */ export type DynamicOperatorDateUnit = 'year' | 'month' | 'day' | undefined;\n\n/** @internal DynamicPackageOperator.EQUAL */\nexport function equal<T extends object>(prop: keyof T, value: ValueTypeALL<T>): FilterCallback<T> {\n    return (item: T) => item[prop] === value;\n}\n\n/** @internal DynamicPackageOperator.NOT_EQUAL */\nexport function notEqual<T extends object>(prop: keyof T, value: ValueTypeALL<T>): FilterCallback<T> {\n    return (item: T) => item[prop] !== value;\n}\n\n/** @internal DynamicPackageOperator.GREATER */\nexport function greater<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => item[prop] > value;\n}\n\n/** @internal DynamicPackageOperator.LESS */\nexport function less<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => item[prop] < value;\n}\n\n/** @internal DynamicPackageOperator.GREATER_EQUAL */\nexport function greaterEqual<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => item[prop] >= value;\n}\n\n/** @internal DynamicPackageOperator.LESS_EQUAL */\nexport function lessEqual<T extends object>(prop: keyof T, value: ValueTypeComparable<T>): FilterCallback<T> {\n    return (item: T) => item[prop] <= value;\n}\n\n/** @internal DynamicPackageOperator.LIKE */\nexport function like<T extends object>(prop: keyof T, value: ValueTypeString<T>): FilterCallback<T> {\n    return (item: T) => String(item[prop]).toLocaleLowerCase().includes(value.toLocaleLowerCase());\n}\n\n/** @internal DynamicPackageOperator.NOT_LIKE */\nexport function notLike<T extends object>(prop: keyof T, value: ValueTypeString<T>): FilterCallback<T> {\n    return (item: T) => !String(item[prop]).toLocaleLowerCase().includes(value.toLocaleLowerCase());\n}\n\n/** @internal DynamicPackageOperator.DATE_LESS_EQUAL */\nexport function dateLessEqual<T extends object>(prop: keyof T, value: number, unit: DynamicOperatorDateUnit): FilterCallback<T> {\n    return (item: T) => {\n        const date = computeDate(new Date(), -1 * value, unit);\n        return date <= (item[prop] as unknown as Date);\n    };\n}\n\n/** @internal DynamicPackageOperator.DATE_LESS_NOT_EQUAL */\nexport function dateLessNotEqual<T extends object>(prop: keyof T, value: number, unit: DynamicOperatorDateUnit): FilterCallback<T> {\n    return (item: T) => {\n        const date = computeDate(new Date(), -1 * value, unit);\n        return !(date <= (item[prop] as unknown as Date));\n    };\n}\n\n/** @internal DynamicPackageOperator.RANGE */\nexport function range<T extends object>(prop: keyof T, min: ValueTypeComparable<T>, max: ValueTypeComparable<T>): FilterCallback<T> {\n    return combination(DynamicCombination.AND, greaterEqual(prop, min), lessEqual(prop, max));\n}\n\n/** @internal ãã£ã«ã¿ã®åæ */\nexport function combination<T extends object>(type: DynamicCombination, lhs: FilterCallback<T>, rhs: FilterCallback<T> | undefined): FilterCallback<T> {\n    return !rhs ? lhs : (item: T) => {\n        switch (type) {\n            case DynamicCombination.AND:\n                return lhs(item) && rhs(item);\n            case DynamicCombination.OR:\n                return lhs(item) || rhs(item);\n            default:\n                console.warn(`unknown combination: ${type}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                // fail safe\n                return lhs(item) && rhs(item);\n        }\n    };\n}\n","import { Keys } from '@cdp/core-utils';\nimport { convertSortKeys } from '../utils';\nimport {\n    SortCallback,\n    FilterCallback,\n    SortKey,\n    DynamicConditionSeed,\n    DynamicOperatorContext,\n    DynamicLimitCondition,\n    DynamicOperator,\n    DynamicCombination,\n} from '../interfaces';\nimport {\n    ValueTypeALL,\n    ValueTypeComparable,\n    ValueTypeString,\n    equal,\n    notEqual,\n    greater,\n    less,\n    greaterEqual,\n    lessEqual,\n    like,\n    notLike,\n    dateLessEqual,\n    dateLessNotEqual,\n    range,\n    combination,\n} from './dynamic-filters';\n\n/**\n * @en Dynamic query condition manager class.\n * @ja ãã¤ãããã¯ã¯ã¨ãªç¶æç®¡çã¯ã©ã¹\n */\nexport class DynamicCondition<TItem extends object, TKey extends Keys<TItem> = Keys<TItem>> implements DynamicConditionSeed<TItem, TKey> {\n\n    private _operators: DynamicOperatorContext<TItem>[];\n    private _combination: DynamicCombination;\n    private _sumKeys: Keys<TItem>[];\n    private _limit?: DynamicLimitCondition<TItem>;\n    private _random: boolean;\n    private _sortKeys: SortKey<TKey>[];\n\n    /**\n     * constructor\n     *\n     * @param seeds\n     *  - `en` [[DynamicConditionSeed]] instance\n     *  - `ja` [[DynamicConditionSeed]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    constructor(seeds: DynamicConditionSeed<TItem, TKey> = { operators: [] }) {\n        const { operators, combination, sumKeys, limit, random, sortKeys } = seeds;\n        this._operators     = operators;\n        this._combination   = null != combination ? combination : DynamicCombination.AND;\n        this._sumKeys       = null != sumKeys ? sumKeys : [];\n        this._limit         = limit;\n        this._random        = !!random;\n        this._sortKeys      = sortKeys || [];\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: DynamicConditionSeed\n\n    get operators(): DynamicOperatorContext<TItem>[] {\n        return this._operators;\n    }\n\n    set operators(values: DynamicOperatorContext<TItem>[]) {\n        this._operators = values;\n    }\n\n    get sumKeys(): (Keys<TItem>)[] {\n        return this._sumKeys;\n    }\n\n    set sumKeys(values: (Keys<TItem>)[]) {\n        this._sumKeys = values;\n    }\n\n    get combination(): DynamicCombination {\n        return this._combination;\n    }\n\n    set combination(value: DynamicCombination) {\n        this._combination = value;\n    }\n\n    get limit(): DynamicLimitCondition<TItem> | undefined {\n        return this._limit;\n    }\n\n    set limit(value: DynamicLimitCondition<TItem> | undefined) {\n        this._limit = value;\n    }\n\n    get random(): boolean {\n        return this._random;\n    }\n\n    set random(value: boolean) {\n        this._random = value;\n    }\n\n    get sortKeys(): SortKey<TKey>[] {\n        return this._sortKeys;\n    }\n\n    set sortKeys(values: SortKey<TKey>[]) {\n        this._sortKeys = values;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// public accessor:\n\n    /**\n     * @en Get comparator functions.\n     * @ja æ¯è¼é¢æ°åå¾\n     */\n    get comparators(): SortCallback<TItem>[] {\n        return convertSortKeys(this._sortKeys);\n    }\n\n    /**\n     * @en Get synthesis filter function.\n     * @ja åææ¸ã¿ãã£ã«ã¿é¢æ°åå¾\n     */\n    get filter(): FilterCallback<TItem> {\n        let fltr: FilterCallback<TItem> | undefined;\n\n        for (const cond of this._operators) {\n            const { operator, prop, value } = cond;\n            switch (operator) {\n                case DynamicOperator.EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        equal<TItem>(prop, value as ValueTypeALL<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.NOT_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        notEqual<TItem>(prop, value as ValueTypeALL<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.GREATER:\n                    fltr = combination(\n                        this._combination,\n                        greater<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.LESS:\n                    fltr = combination(\n                        this._combination,\n                        less<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.GREATER_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        greaterEqual<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.LESS_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        lessEqual<TItem>(prop, value as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.LIKE:\n                    fltr = combination(\n                        this._combination,\n                        like<TItem>(prop, value as ValueTypeString<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.NOT_LIKE:\n                    fltr = combination(\n                        this._combination,\n                        notLike<TItem>(prop, value as ValueTypeString<TItem>),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.DATE_LESS_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        dateLessEqual<TItem>(prop, value as number, cond.unit),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.DATE_LESS_NOT_EQUAL:\n                    fltr = combination(\n                        this._combination,\n                        dateLessNotEqual<TItem>(prop, value as number, cond.unit),\n                        fltr,\n                    );\n                    break;\n                case DynamicOperator.RANGE:\n                    fltr = combination(\n                        this._combination,\n                        range<TItem>(prop, value as ValueTypeComparable<TItem>, cond.range as ValueTypeComparable<TItem>),\n                        fltr,\n                    );\n                    break;\n                default:\n                    console.warn(`unknown operator: ${operator}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n                    break;\n            }\n        }\n\n        return fltr || ((/* item */) => true);\n    }\n}\n","import {\n    Keys,\n    isFunction,\n    sort,\n    shuffle,\n} from '@cdp/core-utils';\nimport { checkCanceled as cc } from '@cdp/promise';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport {\n    SortKey,\n    SortCallback,\n    FilterCallback,\n    CollectionItemQueryOptions,\n    CollectionItemQueryResult,\n    CollectionQueryInfo,\n    CollectionItemProvider,\n    DynamicLimit,\n} from '../interfaces';\nimport { convertSortKeys } from '../utils/comparator';\nimport { DynamicCondition } from './dynamic-condition';\n\nconst {\n    /** @internal */ trunc\n} = Math;\n\n/** @internal ä½¿ç¨ãããã­ããã£ãä¿è¨¼ããã CollectionItemQueryOptions */\ninterface SafeCollectionQueryOptions<TItem extends object, TKey extends Keys<TItem>> extends CollectionItemQueryOptions<TItem, TKey> {\n    sortKeys: SortKey<TKey>[];\n    comparators: SortCallback<TItem>[];\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Apply `filter` and `sort key` to the `items` from [[queryItems]]`()` result.\n * @ja [[queryItems]]`()` ãã `items` ã«å¯¾ãã¦ `filter` ã¨ `sort key` ãé©ç¨\n */\nexport function searchItems<TItem>(items: TItem[], filter?: FilterCallback<TItem> | null, ...comparators: SortCallback<TItem>[]): TItem[] {\n    let result = isFunction(filter) ? items.filter(filter) : items.slice();\n    for (const comparator of comparators) {\n        if (isFunction(comparator)) {\n            result = sort(result, comparator);\n        }\n    }\n    return result;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal conditinalFix ã«ä½¿ç¨ãã Criteria Map */\nconst _limitCriteria = {\n    [DynamicLimit.COUNT]: null,\n    [DynamicLimit.SUM]: { coeff: 1 },\n    [DynamicLimit.SECOND]: { coeff: 1000 },\n    [DynamicLimit.MINUTE]: { coeff: 60 * 1000 },\n    [DynamicLimit.HOUR]: { coeff: 60 * 60 * 1000 },\n    [DynamicLimit.DAY]: { coeff: 24 * 60 * 60 * 1000 },\n    [DynamicLimit.KB]: { coeff: 1024 },\n    [DynamicLimit.MB]: { coeff: 1024 * 1024 },\n    [DynamicLimit.GB]: { coeff: 1024 * 1024 * 1024 },\n    [DynamicLimit.TB]: { coeff: 1024 * 1024 * 1024 * 1024 },\n};\n\n/**\n * @en Fix the target items by [[DynamicCondition]].\n * @ja [[DynamicCondition]] ã«å¾ãå¯¾è±¡ãæ´å½¢\n *\n * @param items\n *  - `en` target items (destructive)\n *  - `ja` å¯¾è±¡ã®ã¢ã¤ãã  (ç ´å£ç)\n * @param condition\n *  - `en` condition object\n *  - `ja` æ¡ä»¶ãªãã¸ã§ã¯ã\n */\nexport function conditionalFix<TItem extends object, TKey extends Keys<TItem> = Keys<TItem>>(\n    items: TItem[],\n    condition: DynamicCondition<TItem, TKey>\n): CollectionItemQueryResult<TItem> {\n    const { random, limit, sumKeys } = condition;\n\n    if (random) {\n        shuffle(items, true);\n    }\n\n    if (limit) {\n        const { unit, value, prop } = limit;\n        const reset: TItem[] = [];\n        const criteria = _limitCriteria[unit];\n        const limitCount = value;\n        const excess = !!limit.excess;\n        let count = 0;\n        for (const item of items) {\n            if (!criteria) {\n                count++;\n            } else if (null != item[prop as Keys<TItem>]) {\n                count += (Number(item[prop as Keys<TItem>]) / criteria.coeff);\n            } else {\n                console.warn(`cannot access property: ${prop}`);\n                continue;\n            }\n\n            if (limitCount < count) {\n                if (excess) {\n                    reset.push(item);\n                }\n                break;\n            } else {\n                reset.push(item);\n            }\n        }\n        items = reset;\n    }\n\n    const result = {\n        total: items.length,\n        items,\n    } as CollectionItemQueryResult<TItem, Keys<TItem>>;\n\n    if (0 < sumKeys.length) {\n        for (const item of items) {\n            for (const key of sumKeys) {\n                if (!(key in result)) {\n                    (result[key] as unknown as number) = 0;\n                }\n                (result[key] as unknown as number) += Number(item[key]);\n            }\n        }\n    }\n\n    return result;\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal ãã§ã«ã­ã£ãã·ã¥ããã¦ããå¯¾è±¡ã«å¯¾ãã¦ CollectionItemQueryOptions ã«æå®ãããæ¯ãèããè¡ãåé¨ query é¢æ° */\nasync function queryFromCache<TItem extends object, TKey extends Keys<TItem>>(\n    cached: TItem[],\n    options: SafeCollectionQueryOptions<TItem, TKey>\n): Promise<CollectionItemQueryResult<TItem>> {\n    const {\n        filter,\n        comparators,\n        index: baseIndex,\n        limit,\n        cancel: token,\n        progress,\n        auto,\n        noSearch,\n    } = options;\n\n    // å¯¾è±¡ãªã\n    if (!cached.length) {\n        return {\n            total: 0,\n            items: [],\n            options,\n        } as CollectionItemQueryResult<TItem>;\n    }\n\n    // ã­ã£ãã·ã¥ã«å¯¾ãã¦ãã£ã«ã¿ãªã³ã°, ã½ã¼ããå®è¡\n    const targets = noSearch ? cached.slice() : searchItems(cached, filter, ...comparators);\n\n    const results: TItem[] = [];\n    let index: number = (null != baseIndex) ? baseIndex : 0;\n\n    while (true) {\n        await cc(token);\n        if (index < 0 || targets.length <= index || trunc(index) !== index) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid index: ${index}`);\n        } else if (null != limit && (limit <= 0 || trunc(limit) !== limit)) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid limit: ${ limit }`);\n        }\n\n        const opts = Object.assign(options, { index });\n        const items = targets.slice(index, (null != limit) ? index + limit : undefined);\n\n        results.push(...items);\n\n        const retval = {\n            total: targets.length,\n            items,\n            options: { ...opts } as CollectionItemQueryOptions<TItem>,\n        } as CollectionItemQueryResult<TItem>;\n\n        // é²æéç¥\n        if (isFunction(progress)) {\n            progress({ ...retval });\n        }\n\n        if (auto && null != limit) {\n            if (targets.length <= index + limit) {\n                // èªåç¶ç¶æå®æã«ã¯æå¾ã«ãã¹ã¦ã® item ãè¿å´\n                retval.items = results;\n            } else {\n                index += items.length;\n                continue;\n            }\n        }\n\n        return retval;\n    }\n}\n\n/** @internal ã¬ã¹ãã³ã¹ã®ã­ã£ãã·ã¥ãè©¦è¡ */\nfunction tryCache<TItem extends object, TKey extends Keys<TItem>>(\n    queryInfo: CollectionQueryInfo<TItem, TKey>,\n    result: CollectionItemQueryResult<TItem>,\n    options: CollectionItemQueryOptions<TItem>\n): void {\n    const { noCache, noSearch } = options;\n    const canCache = !noCache && !noSearch && result.total && result.total === result.items.length;\n    if (canCache) {\n        queryInfo.cache = { ...result };\n        delete queryInfo.cache.options;\n    }\n}\n\n/** @internal `provider` é¢æ°ãä½¿ç¨ãã¦ CollectionItemQueryOptions ã«æå®ãããæ¯ãèããè¡ãåé¨ `query` é¢æ° */\nasync function queryFromProvider<TItem extends object, TKey extends Keys<TItem>>(\n    queryInfo: CollectionQueryInfo<TItem, TKey>,\n    provider: CollectionItemProvider<TItem, TKey>,\n    options: SafeCollectionQueryOptions<TItem, TKey>\n): Promise<CollectionItemQueryResult<TItem>> {\n    const {\n        index: baseIndex,\n        limit,\n        cancel: token,\n        progress,\n        auto,\n    } = options;\n\n    const results: TItem[] = [];\n\n    const receivedAll = (resp: CollectionItemQueryResult<TItem>): boolean => {\n        const hasCond = !!resp.options?.condition;\n        return hasCond || resp.total === resp.items.length;\n    };\n\n    let index: number = (null != baseIndex) ? baseIndex : 0;\n\n    while (true) {\n        await cc(token);\n        if (index < 0 || trunc(index) !== index) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid index: ${index}`);\n        } else if (null != limit && (limit <= 0 || trunc(limit) !== limit)) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_ACCESS, `invalid limit: ${limit}`);\n        }\n\n        const opts = Object.assign(options, { index });\n        let resp = await provider(opts);\n        const nextOpts = Object.assign({}, opts, resp.options);\n\n        if (receivedAll(resp)) {\n            tryCache(queryInfo, resp, nextOpts);\n\n            const { noSearch, condition: seed } = nextOpts;\n            if (seed) {\n                const condition = new DynamicCondition(seed);\n                resp = conditionalFix(searchItems(\n                    resp.items,\n                    condition.filter,\n                    ...condition.comparators\n                ), condition);\n\n                if (queryInfo.cache) {\n                    Object.assign(queryInfo.cache, resp);\n                    delete queryInfo.cache.options;\n                }\n            }\n\n            return queryFromCache(resp.items, Object.assign(opts, { noSearch }));\n        }// eslint-disable-line brace-style\n\n        else {\n            results.push(...resp.items);\n\n            const retval = {\n                total: resp.total,\n                items: resp.items,\n                options: nextOpts,\n            } as CollectionItemQueryResult<TItem>;\n\n            // é²æéç¥\n            if (isFunction(progress)) {\n                progress({ ...retval });\n            }\n\n            if (auto && null != limit) {\n                if (resp.total <= index + limit) {\n                    // èªåç¶ç¶æå®æã«ã¯æå¾ã«ãã¹ã¦ã® item ãè¿å´\n                    retval.items = results;\n                } else {\n                    index += resp.items.length;\n                    continue;\n                }\n            }\n\n            tryCache(queryInfo, retval, nextOpts);\n            return retval;\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal SafeCollectionQueryOptions ã«å¤æ */\nfunction ensureOptions<TItem extends object, TKey extends Keys<TItem>>(\n    options: CollectionItemQueryOptions<TItem, TKey> | undefined\n): SafeCollectionQueryOptions<TItem, TKey> {\n    const opts = Object.assign({ sortKeys: [] }, options);\n    const { noSearch, sortKeys } = opts;\n\n    if (!noSearch && (!opts.comparators || opts.comparators.length <= 0)) {\n        opts.comparators = convertSortKeys(sortKeys);\n    }\n\n    return opts as SafeCollectionQueryOptions<TItem, TKey>;\n}\n\n/**\n * @en Low level function for [[Collection]] query items.\n * @ja [[Collection]] Item ãã¯ã¨ãªããä½ã¬ãã«é¢æ°\n *\n * @param queryInfo\n *  - `en` query information\n *  - `ja` ã¯ã¨ãªæå ±\n * @param provider\n *  - `en` provider function\n *  - `ja` ãã­ãã¤ãé¢æ°\n * @param options\n *  - `en` query options\n *  - `ja` ã¯ã¨ãªãªãã·ã§ã³\n */\nexport async function queryItems<TItem extends object, TKey extends Keys<TItem>>(\n    queryInfo: CollectionQueryInfo<TItem, TKey>,\n    provider: CollectionItemProvider<TItem, TKey>,\n    options?: CollectionItemQueryOptions<TItem, TKey>\n): Promise<TItem[]> {\n    const opts = ensureOptions(options);\n    const { sortKeys, comparators, filter } = opts;\n\n    // query ã«ä½¿ç¨ãã sort, filter æå ±ãã­ã£ãã·ã¥\n    Object.assign(queryInfo, { sortKeys, comparators, filter });\n\n    if (queryInfo.cache) {\n        return (await queryFromCache(queryInfo.cache.items, opts)).items;\n    } else {\n        return (await queryFromProvider(queryInfo, provider, opts)).items;\n    }\n}\n","import {\n    Constructor,\n    Class,\n    UnknownObject,\n    Keys,\n    isNil,\n    isArray,\n    isFunction,\n    isString,\n    noop,\n    luid,\n    at,\n    setMixClassAttribute,\n} from '@cdp/core-utils';\nimport {\n    Silenceable,\n    Subscribable,\n    EventBroker,\n    EventSource,\n    EventPublisher,\n} from '@cdp/events';\nimport {\n    Result,\n    RESULT_CODE,\n    FAILED,\n    makeResult,\n} from '@cdp/result';\nimport { SyncContext, defaultSync } from '@cdp/data-sync';\nimport {\n    Model,\n    ModelConstructionOptions,\n    ModelSaveOptions,\n    isModel,\n} from '@cdp/model';\nimport {\n    SortCallback,\n    FilterCallback,\n    CollectionSortOptions,\n    CollectionItemQueryResult,\n    CollectionItemQueryOptions,\n    CollectionItemProvider,\n    CollectionQueryInfo,\n    CollectionSeed,\n    CollectionEvent,\n    CollectionConstructionOptions,\n    CollectionOperationOptions,\n    CollectionAddOptions,\n    CollectionSetOptions,\n    CollectionReSortOptions,\n    CollectionUpdateOptions,\n    CollectionQueryOptions,\n    CollectionRequeryOptions,\n    CollectionAfterFilterOptions,\n} from './interfaces';\nimport { convertSortKeys } from './utils';\nimport { searchItems, queryItems } from './query';\n\n/** @internal */ const _properties             = Symbol('properties');\n/** @internal */ const _createIterableIterator = Symbol('create-iterable-iterator');\n/** @internal */ const _prepareModel           = Symbol('prepare-model');\n/** @internal */ const _removeModels           = Symbol('remove-models');\n/** @internal */ const _addReference           = Symbol('add-reference');\n/** @internal */ const _removeReference        = Symbol('remove-reference');\n/** @internal */ const _onModelEvent           = Symbol('model-event-handler');\n\n/** @internal */\ninterface Property<T extends object, K extends Keys<T>> {\n    readonly constructOptions: CollectionConstructionOptions<T, K>;\n    readonly provider: CollectionItemProvider<T, K>;\n    readonly cid: string;\n    readonly queryOptions: CollectionItemQueryOptions<T, K>;\n    queryInfo: CollectionQueryInfo<T, K>;\n    readonly modelOptions: ModelConstructionOptions;\n    readonly byId: Map<string, T>;\n    store: T[];\n    afterFilter?: FilterCallback<T>;\n}\n\n/** @internal reset model context */\nconst resetModelStore = <T extends object, K extends Keys<T>>(context: Property<T, K>): void => {\n    context.byId.clear();\n    context.store.length = 0;\n};\n\n/** @internal */\nconst ensureSortOptions = <T extends object, K extends Keys<T>>(options: CollectionSortOptions<T, K>): Required<CollectionSortOptions<T, K>> => {\n    const { sortKeys: keys, comparators: comps } = options;\n    return {\n        sortKeys: keys || [],\n        comparators: comps || convertSortKeys(keys || []),\n    };\n};\n\n/** @internal */\nconst modelIdAttribute = <T extends object>(ctor: Constructor<T> | undefined): string => {\n    return ctor?.['idAttribute'] || 'id';\n};\n\n/** @internal */\nconst getModelId = <T extends object>(attrs: T, ctor: Constructor<T> | undefined): string => {\n    return attrs[modelIdAttribute(ctor)];\n};\n\n/** @internal */\nconst getChangedIds = <T extends object>(obj: object, ctor: Constructor<T> | undefined): { id: string; prevId?: string; } | undefined => {\n    type ModelLike = { previous: (key: string) => string; };\n    const model = obj as ModelLike;\n\n    const idAttribute = modelIdAttribute(ctor);\n    const id = model[idAttribute];\n    if (!isString(id)) {\n        return undefined;\n    }\n\n    return { id: model[idAttribute], prevId: isFunction(model.previous) ? model.previous(idAttribute) : undefined };\n};\n\n/** @internal */\nconst modelConstructor = <T extends object, E extends CollectionEvent<T>, K extends Keys<T>>(self: Collection<T, E, K>): Class | undefined => {\n    return self.constructor['model'];\n};\n\n/** @internal */\nconst isCollectionModel = <T extends object, E extends CollectionEvent<T>, K extends Keys<T>>(x: unknown, self: Collection<T, E, K>): x is T => {\n    const ctor = modelConstructor(self);\n    return isFunction(ctor) ? x instanceof ctor : false;\n};\n\n/** @internal */\nconst spliceArray = <T>(target: T[], insert: T[], at: number): void => {\n    at = Math.min(Math.max(at, 0), target.length);\n    target.splice(at, 0, ...insert);\n};\n\n/** @internal */\nfunction parseFilterArgs<T extends object>(...args: unknown[]): CollectionAfterFilterOptions<T> {\n    const [filter, options] = args;\n    if (null == filter) {\n        return {};\n    } else if (!isFunction(filter)) {\n        return filter as CollectionAfterFilterOptions<T>;\n    } else {\n        return Object.assign({}, options, { filter }) as CollectionAfterFilterOptions<T>;\n    }\n}\n\n/** @internal */ const _setOptions = { add: true, remove: true, merge: true };\n/** @internal */ const _addOptions = { add: true, remove: false };\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Base class definition for collection that is ordered sets of models.\n * @ja Model ã®éåãæ±ã Collection ã®åºåºã¯ã©ã¹å®ç¾©.\n *\n * @example <br>\n *\n * ```ts\n * import { Model, ModelConstructor } from '@cdp/model';\n * import {\n *     Collection,\n *     CollectionItemQueryOptions,\n *     CollectionItemQueryResult,\n *     CollectionSeed,\n * } from '@cdp/collection';\n *\n * // Model schema\n * interface TrackAttribute {\n *   uri: string;\n *   title: string;\n *   artist: string;\n *   album:  string;\n *   releaseDate: Date;\n *   :\n * }\n *\n * // Model definition\n * const TrackBase = Model as ModelConstructor<Model<TrackAttribute>, TrackAttribute>;\n * class Track extends TrackBase {\n *     static idAttribute = 'uri';\n * }\n *\n * // Collection definition\n * class Playlist extends Collection<Track> {\n *     // set target Model constructor\n *     static readonly model = Track;\n *\n *     // @override if need to use custom content provider for fetch.\n *     protected async sync(\n *         options?: CollectionItemQueryOptions<Track>\n *     ): Promise<CollectionItemQueryResult<object>> {\n *         // some specific implementation here.\n *         const items = await customProvider(options);\n *         return {\n *             total: items.length,\n *             items,\n *             options,\n *         } as CollectionItemQueryResult<object>;\n *     }\n *\n *     // @override if need to convert a response into a list of models.\n *     protected parse(response: CollectionSeed[]): TrackAttribute[] {\n *         return response.map(seed => {\n *             const date = seed.releaseDate;\n *             seed.releaseDate = new Date(date);\n *             return seed;\n *         }) as TrackAttribute[];\n *      }\n * }\n *\n * let seeds: TrackAttribute[];\n *\n * const playlist = new Playlist(seeds, {\n *     // default query options\n *     queryOptions: {\n *         sortKeys: [\n *             { name: 'title', order: SortOrder.DESC, type: 'string' },\n *         ],\n *     }\n * });\n *\n * await playlist.requery();\n *\n * for (const track of playlist) {\n *     console.log(JSON.stringify(track.toJSON()));\n * }\n * ```\n */\nexport abstract class Collection<\n    TModel extends object = any, // eslint-disable-line @typescript-eslint/no-explicit-any\n    TEvent extends CollectionEvent<TModel> = CollectionEvent<TModel>,\n    TKey extends Keys<TModel> = Keys<TModel>\n> extends EventSource<TEvent> implements Iterable<TModel> {\n\n    /**\n     * @en Model constructor. <br>\n     *     The constructor is used internally by this [[Collection]] class for [[TModel]] construction.\n     * @ja Model ã³ã³ã¹ãã©ã¯ã¿ <br>\n     *     [[Collection]] ã¯ã©ã¹ã [[TModel]] ãæ§ç¯ããããã«ä½¿ç¨ãã\n     */\n    static readonly model?: Class;\n\n    /** @internal */\n    private readonly [_properties]: Property<TModel, TKey>;\n\n///////////////////////////////////////////////////////////////////////\n// construction/destruction:\n\n    /**\n     * constructor\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model è¦ç´ ã®éåãæå®\n     * @param options\n     *  - `en` construction options.\n     *  - `ja` æ§ç¯ãªãã·ã§ã³\n     */\n    constructor(seeds?: TModel[] | CollectionSeed[], options?: CollectionConstructionOptions<TModel, TKey>) {\n        super();\n        const opts = Object.assign({ modelOptions: {}, queryOptions: {} }, options);\n\n        const { modelOptions, queryOptions } = opts;\n\n        this[_properties] = {\n            constructOptions: opts,\n            provider: opts.provider || this.sync.bind(this),\n            cid: luid('collection:', 8),\n            queryOptions,\n            queryInfo: {},\n            modelOptions,\n            byId: new Map<string, TModel>(),\n            store: [],\n        } as unknown as Property<TModel, TKey>;\n\n        this.initQueryInfo();\n\n        /* model event handler */\n        this[_onModelEvent] = (event: string, model: TModel | undefined, collection: this, options: CollectionOperationOptions): void => {\n            if (isString(event) && event.startsWith('@') && model) {\n                if (('@add' === event || '@remove' === event) && collection !== this) {\n                    return;\n                }\n                if ('@destroy' === event) {\n                    // model event arguments adjustment.\n                    options = (collection as any); // eslint-disable-line @typescript-eslint/no-explicit-any\n                    collection = this;             // eslint-disable-line @typescript-eslint/no-this-alias\n                    this.remove(model, options);\n                }\n                if (event.startsWith('@change')) {\n                    // model event arguments adjustment.\n                    options = {};\n                    collection = this;             // eslint-disable-line @typescript-eslint/no-this-alias\n                    if ('@change' === event) {\n                        const ids = getChangedIds(model, modelConstructor(this));\n                        if (ids) {\n                            const { id, prevId } = ids;\n                            if (prevId !== id) {\n                                const { byId } = this[_properties];\n                                byId.set(id, model);\n                                if (null != prevId) {\n                                    byId.delete(prevId);\n                                }\n                            }\n                        }\n                    }\n                }\n                // delegate event\n                this.trigger.call(this, event, model, collection, options); // eslint-disable-line no-useless-call\n            }\n        };\n\n        if (seeds) {\n            this.reset(seeds, Object.assign({ silent: true }, opts));\n        }\n    }\n\n    /**\n     * @ja Initialize query info\n     * @ja ã¯ã¨ãªæå ±ã®åæå\n     */\n    protected initQueryInfo(): void {\n        const { sortKeys, comparators } = ensureSortOptions(this._defaultQueryOptions);\n        this._queryInfo = { sortKeys, comparators };\n    }\n\n    /**\n     * @en Released all instances and event listener under the management.\n     * @ja ç®¡çå¯¾è±¡ãç ´æ£\n     *\n     * @param options\n     *  - `en` options (reserved).\n     *  - `ja` ãªãã·ã§ã³ (äºç´)\n     */\n    public release(options?: CollectionOperationOptions): this { // eslint-disable-line @typescript-eslint/no-unused-vars\n        this[_properties].afterFilter = undefined;\n        this[_properties].store = [];\n        this.initQueryInfo();\n        return this.stopListening();\n    }\n\n    /**\n     * @ja Clear cache instance method\n     * @ja ã­ã£ãã·ã¥ã®ç ´æ£\n     */\n    protected clearCache(): void {\n        delete this._queryInfo.cache;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: attributes\n\n    /**\n     * @en Get content ID.\n     * @ja ã³ã³ãã³ã ID ãåå¾\n     */\n    get id(): string {\n        return this[_properties].cid;\n    }\n\n    /**\n     * @en Get models.\n     * @ja Model ã¢ã¯ã»ã¹\n     */\n    get models(): readonly TModel[] {\n        const { _queryFilter, _afterFilter } = this;\n        const { store } = this[_properties];\n        return (_afterFilter && _afterFilter !== _queryFilter) ? store.filter(_afterFilter) : store;\n    }\n\n    /**\n     * @en number of models.\n     * @ja ååãã Model æ°\n     */\n    get length(): number {\n        return this.models.length;\n    }\n\n    /**\n     * @en Check applied after-filter.\n     * @ja çµãè¾¼ã¿ç¨ãã£ã«ã¿ãé©ç¨ããã¦ããããå¤å®\n     */\n    get filtered(): boolean {\n        return !!this[_properties].afterFilter;\n    }\n\n    /**\n     * @en [[CollectionQueryInfo]] instance\n     * @ja [[CollectionQueryInfo]] ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _queryInfo(): CollectionQueryInfo<TModel, TKey> {\n        return this[_properties].queryInfo;\n    }\n\n    /**\n     * @en [[CollectionQueryInfo]] instance\n     * @ja [[CollectionQueryInfo]] ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected set _queryInfo(val: CollectionQueryInfo<TModel, TKey>) {\n        this[_properties].queryInfo = val;\n    }\n\n    /**\n     * @en Get creating options.\n     * @ja æ§ç¯æã®ãªãã·ã§ã³ãåå¾\n     */\n    protected get _options(): CollectionConstructionOptions<TModel, TKey> {\n        return this[_properties].constructOptions;\n    }\n\n    /**\n     * @en Get default provider.\n     * @ja æ¢å®ã®ãã­ãã¤ããåå¾\n     */\n    protected get _provider(): CollectionItemProvider<TModel, TKey> {\n        return this[_properties].provider;\n    }\n\n    /**\n     * @en Get default parse behaviour.\n     * @ja æ¢å®ã® parse åä½ãåå¾\n     */\n    protected get _defaultParse(): boolean | undefined {\n        return this._options.parse;\n    }\n\n    /**\n     * @en Get default query options.\n     * @ja æ¢å®ã®ã¯ã¨ãªãªãã·ã§ã³ãåå¾\n     */\n    protected get _defaultQueryOptions(): CollectionItemQueryOptions<TModel, TKey> {\n        return this[_properties].queryOptions;\n    }\n\n    /**\n     * @en Get last query options.\n     * @ja æå¾ã®ã¯ã¨ãªãªãã·ã§ã³ãåå¾\n     */\n    protected get _lastQueryOptions(): CollectionItemQueryOptions<TModel, TKey> {\n        const { sortKeys, comparators, filter } = this[_properties].queryInfo;\n        const opts: CollectionItemQueryOptions<TModel, TKey> = {};\n\n        sortKeys.length && (opts.sortKeys = sortKeys);\n        comparators.length && (opts.comparators = comparators);\n        filter && (opts.filter = filter);\n\n        return opts;\n    }\n\n    /**\n     * @en Access to sort comparators.\n     * @ja ã½ã¼ãç¨æ¯è¼é¢æ°ã¸ã®ã¢ã¯ã»ã¹\n     */\n    protected get _comparators(): SortCallback<TModel>[] {\n        return this[_properties].queryInfo.comparators;\n    }\n\n    /**\n     * @en Access to query-filter.\n     * @ja ã¯ã¨ãªç¨ãã£ã«ã¿é¢æ°ã¸ã®ã¢ã¯ã»ã¹\n     */\n    protected get _queryFilter(): FilterCallback<TModel> | undefined {\n        return this[_properties].queryInfo.filter;\n    }\n\n    /**\n     * @en Access to after-filter.\n     * @ja çµãè¾¼ã¿ç¨ãã£ã«ã¿é¢æ°ã¸ã®ã¢ã¯ã»ã¹\n     */\n    protected get _afterFilter(): FilterCallback<TModel> | undefined {\n        return this[_properties].afterFilter;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: utils\n\n    /**\n     * @en Get a model from a collection, specified by an `id`, a `cid`, or by passing in a model instance.\n     * @ja `id`, `cid` ããã³ã¤ã³ã¹ã¿ã³ã¹ãã Model ãç¹å®\n     *\n     * @param seed\n     *  - `en` `id`, a `cid`, or by passing in a model instance\n     *  - `ja`  `id`, `cid` ããã³ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public get(seed: string | object | undefined): TModel | undefined {\n        if (null == seed) {\n            return undefined;\n        }\n\n        const { byId } = this[_properties];\n        if (isString(seed) && byId.has(seed)) {\n            return byId.get(seed);\n        }\n\n        const id = getModelId(isModel(seed) ? seed.toJSON() : seed as object, modelConstructor(this));\n        const cid = (seed as object as { _cid?: string; })._cid;\n\n        return byId.get(id) || (cid && byId.get(cid)) as TModel | undefined;\n    }\n\n    /**\n     * @en Returns `true` if the model is in the collection by an `id`, a `cid`, or by passing in a model instance.\n     * @ja `id`, `cid` ããã³ã¤ã³ã¹ã¿ã³ã¹ãã Model ãææãã¦ãããå¤å®\n     *\n     * @param seed\n     *  - `en` `id`, a `cid`, or by passing in a model instance\n     *  - `ja`  `id`, `cid` ããã³ã¤ã³ã¹ã¿ã³ã¹\n     */\n    public has(seed: string | object | undefined): boolean {\n        return null != this.get(seed);\n    }\n\n    /**\n     * @en Return a copy of the model's `attributes` object.\n     * @ja Model å±æ§å¤ã®ã³ãã¼ãè¿å´\n     */\n    public toJSON(): object[] {\n        return this.models.map(m => isModel(m) ? m.toJSON() : m);\n    }\n\n    /**\n     * @es Clone this instance.\n     * @ja ã¤ã³ã¹ã¿ã³ã¹ã®è¤è£½ãè¿å´\n     *\n     * @override\n     */\n    public clone(): this {\n        const { constructor, _options } = this;\n        return new (constructor as Constructor<this>)(this[_properties].store, _options);\n    }\n\n    /**\n     * @en Force a collection to re-sort itself.\n     * @ja Collection è¦ç´ ã®åã½ã¼ã\n     *\n     * @param options\n     *  - `en` sort options.\n     *  - `ja` ã½ã¼ããªãã·ã§ã³\n     */\n    public sort(options?: CollectionReSortOptions<TModel, TKey>): this {\n        const opts = options || {};\n        const { noThrow, silent } = opts;\n        const { sortKeys, comparators: comps } = ensureSortOptions(opts);\n        const comparators = 0 < comps.length ? comps : this._comparators;\n\n        if (comparators.length <= 0) {\n            if (noThrow) {\n                return this;\n            }\n            throw makeResult(RESULT_CODE.ERROR_MVC_INVALID_COMPARATORS, 'Cannot sort a set without a comparator.');\n        }\n\n        this[_properties].store = searchItems(this[_properties].store, this._afterFilter, ...comparators);\n\n        // update queryInfo\n        this[_properties].queryInfo.comparators = comparators;\n        if (0 < sortKeys.length) {\n            this[_properties].queryInfo.sortKeys = sortKeys;\n        }\n\n        if (!silent) {\n            (this as Collection).trigger('@sort', this as Collection, opts);\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Apply after-filter to collection itself.\n     * @ja çµãè¾¼ã¿ç¨ãã£ã«ã¿ã®é©ç¨\n     *\n     * @param callback\n     *  - `en` filter callback.\n     *  - `ja` ãã£ã«ã¿ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` Silenceable options.\n     *  - `ja` Silenceable ãªãã·ã§ã³\n     */\n    public filter(callback: FilterCallback<TModel> | undefined, options?: Silenceable): this;\n\n    /**\n     * @en Apply after-filter to collection itself.\n     * @ja çµãè¾¼ã¿ç¨ãã£ã«ã¿ã®é©ç¨\n     *\n     * @param options\n     *  - `en` after-filter options.\n     *  - `ja` çµãè¾¼ã¿ãªãã·ã§ã³\n     */\n    public filter(options: CollectionAfterFilterOptions<TModel>): this;\n\n    public filter(...args: unknown[]): this {\n        const opts = parseFilterArgs(...args);\n        const { filter, silent } = opts;\n        if (filter !== this[_properties].afterFilter) {\n            this[_properties].afterFilter = filter;\n            if (!silent) {\n                (this as Collection).trigger('@filter', this as Collection, opts);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @en Get the model at the given index. If negative value is given, the target will be found from the last index.\n     * @ja ã¤ã³ããã¯ã¹æå®ã«ãã Model ã¸ã®ã¢ã¯ã»ã¹. è² å¤ã®å ´åã¯æ«å°¾æ¤ç´¢ãå®è¡\n     *\n     * @param index\n     *  - `en` A zero-based integer indicating which element to retrieve. <br>\n     *         If negative index is counted from the end of the matched set.\n     *  - `ja` 0 base ã®ã¤ã³ããã¯ã¹ãæå® <br>\n     *         è² å¤ãæå®ãããå ´å, æ«å°¾ããã®ã¤ã³ããã¯ã¹ã¨ãã¦è§£éããã\n     */\n    public at(index: number): TModel {\n        return at(this.models as TModel[], index);\n    }\n\n    /**\n     * @en Get the first element of the model.\n     * @ja Model ã®æåã®è¦ç´ ãåå¾\n     */\n    public first(): TModel | undefined;\n\n    /**\n     * @en Get the value of `count` elements of the model from the first.\n     * @ja Model ã®åé ­ãã`count` åã®è¦ç´ ãåå¾\n     */\n    public first(count: number): TModel[];\n\n    public first(count?: number): TModel | TModel[] | undefined {\n        const targets = this.models;\n        if (null == count) {\n            return targets[0];\n        } else {\n            return targets.slice(0, count);\n        }\n    }\n\n    /**\n     * @en Get the last element of the model.\n     * @ja Model ã®æåã®è¦ç´ ãåå¾\n     */\n    public last(): TModel | undefined;\n\n    /**\n     * @en Get the value of `count` elements of the model from the last.\n     * @ja Model ã®åé ­ãã`count` åã®è¦ç´ ãåå¾\n     */\n    public last(count: number): TModel[];\n\n    public last(count?: number): TModel | TModel[] | undefined {\n        const targets = this.models;\n        if (null == count) {\n            return targets[targets.length - 1];\n        } else {\n            return targets.slice(-1 * count);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: sync\n\n    /**\n     * @en Converts a response into the hash of attributes to be `set` on the collection. The default implementation is just to pass the response along.\n     * @ja ã¬ã¹ãã³ã¹ã®å¤æã¡ã½ãã. æ¢å®ã§ã¯ä½ãããªã\n     *\n     * @override\n     */\n    protected parse(response: CollectionSeed | CollectionSeed[] | void, options?: CollectionSetOptions): TModel[] | CollectionSeed[] | undefined { // eslint-disable-line @typescript-eslint/no-unused-vars\n        return response as TModel[];\n    }\n\n    /**\n     * @en The [[fetch]] method proxy that is compatible with [[CollectionItemProvider]] returns one-shot result.\n     * @ja [[CollectionItemProvider]] äºæã®åçºã® fetch çµæãè¿å´. å¿è¦ã«å¿ãã¦ãªã¼ãã¼ã©ã¤ãå¯è½.\n     *\n     * @override\n     *\n     * @param options\n     *  - `en` option object\n     *  - `ja` ãªãã·ã§ã³\n     */\n    protected async sync(options?: CollectionItemQueryOptions<TModel, TKey>): Promise<CollectionItemQueryResult<object>> {\n        const items = await defaultSync().sync('read', this as SyncContext, options) as TModel[];\n        return {\n            total: items.length,\n            items,\n            options,\n        } as CollectionItemQueryResult<object>;\n    }\n\n    /**\n     * @en Fetch the [[Model]] from the server, merging the response with the model's local attributes.\n     * @ja [[Model]] å±æ§ã®ãµã¼ãã¼åæ. ã¬ã¹ãã³ã¹ã®ãã¼ã¸ãå®è¡\n     *\n     * @param options\n     *  - `en` fetch options.\n     *  - `ja` ãã§ãããªãã·ã§ã³\n     */\n    public async fetch(options?: CollectionQueryOptions<TModel, TKey>): Promise<object[]> {\n        const opts = Object.assign({ progress: noop }, this._defaultQueryOptions, options);\n\n        try {\n            const { progress: original, limit, reset, noCache } = opts;\n            const { _queryInfo, _provider } = this;\n            const finalize = (null == limit);\n\n            opts.progress = (info: CollectionItemQueryResult<TModel>) => {\n                original(info);\n                !finalize && this.add(info.items, opts);\n            };\n\n            if (noCache) {\n                this.clearCache();\n            }\n\n            if (!finalize && reset) {\n                this.reset(undefined, { silent: true });\n            }\n\n            const resp = await queryItems(_queryInfo, _provider, opts);\n\n            if (finalize) {\n                reset ? this.reset(resp, opts) : this.add(resp, opts);\n            }\n\n            (this as Collection).trigger('@sync', this as Collection, resp, opts);\n            return resp;\n        } catch (e) {\n            (this as Collection).trigger('@error', undefined, this as Collection, e, opts);\n            throw e;\n        }\n    }\n\n    /**\n     * @en Execute `fetch()` with last query options.\n     * @ja ååã¨åæ¡ä»¶ã§ `fetch()` ãå®è¡\n     *\n     * @param options\n     *  - `en` requery options.\n     *  - `ja` ãªã¯ã¨ãªãªãã·ã§ã³\n     */\n    public requery(options?: CollectionRequeryOptions): Promise<object[]> {\n        const opts = Object.assign({}, this._lastQueryOptions, options, { reset: true });\n        return this.fetch(opts);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operations: collection setup\n\n    /**\n     * @en \"Smart\" update method of the collection with the passed list of models.\n     *       - if the model is already in the collection its attributes will be merged.\n     *       - if the collection contains any models that aren't present in the list, they'll be removed.\n     *       - All of the appropriate `@add`, `@remove`, and `@update` events are fired as this happens.\n     * @ja Collection ã®æ±ç¨æ´æ°å¦ç\n     *       - è¿½å æã«ãã§ã« Model ãå­å¨ããã¨ãã¯ãå±æ§ããã¼ã¸\n     *       - æå®ãªã¹ãã«å­å¨ããªã Model ã¯åé¤\n     *       - é©åãª `@add`, `@remove`, `@update` ã¤ãã³ããçºç\n     *\n     * @param seed\n     *  - `en` Nil value.\n     *  - `ja` Nil è¦ç´ \n     * @param options\n     *  - `en` set options.\n     *  - `ja` è¨­å®ãªãã·ã§ã³\n     */\n    public set(seed: undefined, options?: CollectionSetOptions): void;\n\n    /**\n     * @en \"Smart\" update method of the collection with the passed list of models.\n     *       - if the model is already in the collection its attributes will be merged.\n     *       - if the collection contains any models that aren't present in the list, they'll be removed.\n     *       - All of the appropriate `@add`, `@remove`, and `@update` events are fired as this happens.\n     * @ja Collection ã®æ±ç¨æ´æ°å¦ç\n     *       - è¿½å æã«ãã§ã« Model ãå­å¨ããã¨ãã¯ãå±æ§ããã¼ã¸\n     *       - æå®ãªã¹ãã«å­å¨ããªã Model ã¯åé¤\n     *       - é©åãª `@add`, `@remove`, `@update` ã¤ãã³ããçºç\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model è¦ç´ ãæå®\n     * @param options\n     *  - `en` set options.\n     *  - `ja` è¨­å®ãªãã·ã§ã³\n     */\n    public set(seed: TModel | UnknownObject, options?: CollectionSetOptions): TModel;\n\n    /**\n     * @en \"Smart\" update method of the collection with the passed list of models.\n     *       - if the model is already in the collection its attributes will be merged.\n     *       - if the collection contains any models that aren't present in the list, they'll be removed.\n     *       - All of the appropriate `@add`, `@remove`, and `@update` events are fired as this happens.\n     * @ja Collection ã®æ±ç¨æ´æ°å¦ç\n     *       - è¿½å æã«ãã§ã« Model ãå­å¨ããã¨ãã¯ãå±æ§ããã¼ã¸\n     *       - æå®ãªã¹ãã«å­å¨ããªã Model ã¯åé¤\n     *       - é©åãª `@add`, `@remove`, `@update` ã¤ãã³ããçºç\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model è¦ç´ ã®éåãæå®\n     * @param options\n     *  - `en` set options.\n     *  - `ja` è¨­å®ãªãã·ã§ã³\n     */\n    public set(seeds: (TModel | CollectionSeed)[], options?: CollectionSetOptions): TModel[];\n\n    public set(seeds?: TModel | UnknownObject | (TModel | CollectionSeed)[], options?: CollectionSetOptions): TModel | TModel[] | void {\n        if (isNil(seeds)) {\n            return;\n        }\n\n        const opts = Object.assign({ parse: this._defaultParse }, _setOptions, options) as CollectionUpdateOptions<TModel>;\n        if (opts.parse && !isCollectionModel(seeds, this)) {\n            seeds = this.parse(seeds, options) || [];\n        }\n\n        const singular = !isArray(seeds);\n        const items: (TModel | object | undefined)[] = singular ? [seeds] : (seeds as object[]).slice();\n\n        const { store } = this[_properties];\n\n        const at = ((candidate): number | void => {\n            if (null != candidate) {\n                if (candidate > store.length) {\n                    return store.length;\n                }\n                if (candidate < 0) {\n                    candidate += store.length;\n                    return (candidate < 0) ? 0 : candidate;\n                }\n                return candidate;\n            }\n        })(opts.at);\n\n        const set: object[]      = [];\n        const toAdd: TModel[]    = [];\n        const toMerge: TModel[]  = [];\n        const toRemove: TModel[] = [];\n        const modelSet = new Set<object>();\n\n        const { add, merge, remove, parse, silent } = opts;\n\n        let sort = false;\n        const sortable = this._comparators.length && null == at && false !== opts.sort;\n\n        type ModelFeature = {\n            parse: (atrr?: object, options?: object) => object;\n            setAttributes: (atrr: object, options?: object) => void;\n            hasChanged: () => boolean;\n        };\n\n        // Turn bare objects into model references, and prevent invalid models from being added.\n        for (const [i, item] of items.entries()) {\n            // If a duplicate is found, prevent it from being added and optionally merge it into the existing model.\n            const existing = this.get(item) as ModelFeature;\n            if (existing) {\n                if (merge && item !== existing) {\n                    let attrs = isModel(item) ? item.toJSON() : item;\n                    if (parse && isFunction(existing.parse)) {\n                        attrs = existing.parse(attrs, opts);\n                    }\n\n                    if (isFunction(existing.setAttributes)) {\n                        existing.setAttributes(attrs, opts);\n                    } else {\n                        Object.assign(existing, attrs);\n                    }\n\n                    toMerge.push(existing as TModel);\n                    if (sortable && !sort) {\n                        sort = isFunction(existing.hasChanged) ? existing.hasChanged() : true;\n                    }\n                }\n                if (!modelSet.has(existing)) {\n                    modelSet.add(existing);\n                    set.push(existing);\n                }\n                items[i] = existing;\n            } // eslint-disable-line brace-style\n\n            // If this is a new, valid model, push it to the `toAdd` list.\n            else if (add) {\n                const model = items[i] = this[_prepareModel](item, opts);\n                if (model) {\n                    toAdd.push(model);\n                    this[_addReference](model);\n                    modelSet.add(model);\n                    set.push(model);\n                }\n            }\n        }\n\n        // Remove stale models.\n        if (remove) {\n            for (const model of store) {\n                if (!modelSet.has(model)) {\n                    toRemove.push(model);\n                }\n            }\n            if (toRemove.length) {\n                this[_removeModels](toRemove, opts);\n            }\n        }\n\n        // See if sorting is needed, update `length` and splice in new models.\n        let orderChanged = false;\n        const replace = !sortable && add && remove;\n        if (set.length && replace) {\n            orderChanged = (store.length !== set.length) || store.some((m, index) => m !== set[index]);\n            store.length = 0;\n            spliceArray(store, set, 0);\n        } else if (toAdd.length) {\n            if (sortable) {\n                sort = true;\n            }\n            spliceArray(store, toAdd, null == at ? store.length : at);\n        }\n\n        // Silently sort the collection if appropriate.\n        if (sort) {\n            this.sort({ silent: true });\n        }\n\n        // Unless silenced, it's time to fire all appropriate add/sort/update events.\n        if (!silent) {\n            for (const [i, model] of toAdd.entries()) {\n                if (null != at) {\n                    opts.index = at + i;\n                }\n                if (isModel(model) || (model instanceof EventBroker)) {\n                    (model as Model).trigger('@add', model as Model, this, opts);\n                } else {\n                    (this as Collection).trigger('@add', model, this as Collection, opts);\n                }\n            }\n            if (sort || orderChanged) {\n                (this as Collection).trigger('@sort', this as Collection, opts);\n            }\n            if (toAdd.length || toRemove.length || toMerge.length) {\n                opts.changes = {\n                    added: toAdd,\n                    removed: toRemove,\n                    merged: toMerge\n                };\n                (this as Collection).trigger('@update', this as Collection, opts);\n            }\n        }\n\n        // drop undefined\n        const retval = items.filter(i => null != i) as TModel[];\n\n        // Return the added (or merged) model (or models).\n        return singular ? retval[0] : (retval.length ? retval : void 0);\n    }\n\n    /**\n     * @en Replace a collection with a new list of models (or attribute hashes), triggering a single `reset` event on completion.\n     * @ja Collection ãæ°ãã Model ä¸è¦§ã§ç½®æ. å®äºæã« `reset` ã¤ãã³ããçºè¡\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model è¦ç´ ã®éåãæå®\n     * @param options\n     *  - `en` reset options.\n     *  - `ja` ãªã»ãããªãã·ã§ã³\n     */\n    public reset(seeds?: (TModel | CollectionSeed)[], options?: CollectionOperationOptions): TModel[] {\n        const opts = Object.assign({}, options) as CollectionOperationOptions & { previous: TModel[]; };\n        const { store } = this[_properties];\n        for (const model of store) {\n            this[_removeReference](model);\n        }\n\n        opts.previous = store.slice();\n        resetModelStore(this[_properties]);\n\n        const models = seeds ? this.add(seeds, Object.assign({ silent: true }, opts)) : [];\n\n        if (!opts.silent) {\n            (this as Collection).trigger('@reset', this as Collection, opts);\n        }\n\n        return models;\n    }\n\n    /**\n     * @en Add model to the collection.\n     * @ja Collection ã¸ã® Model ã®è¿½å \n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model è¦ç´ ãæå®\n     * @param options\n     *  - `en` add options.\n     *  - `ja` è¿½å ãªãã·ã§ã³\n     */\n    public add(seed: TModel | UnknownObject, options?: CollectionAddOptions): TModel;\n\n    /**\n     * @en Add to the collection with the passed list of models.\n     * @ja Model ãªã¹ãæå®ã«ãã Collection ã¸ã®è¿½å \n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model è¦ç´ ã®éåãæå®\n     * @param options\n     *  - `en` add options.\n     *  - `ja` è¿½å ãªãã·ã§ã³\n     */\n    public add(seeds: (TModel | CollectionSeed)[], options?: CollectionAddOptions): TModel[];\n\n    public add(seeds: TModel | UnknownObject | (TModel | CollectionSeed)[], options?: CollectionAddOptions): TModel | TModel[] {\n        return this.set(seeds as UnknownObject, Object.assign({ merge: false }, options, _addOptions));\n    }\n\n    /**\n     * @en Remove a model from the set.\n     * @ja Collection ãã Model ãåé¤\n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model è¦ç´ ãæå®\n     * @param options\n     *  - `en` remove options.\n     *  - `ja` åé¤ãªãã·ã§ã³\n     */\n    public remove(seed: TModel | UnknownObject, options?: CollectionOperationOptions): TModel;\n\n    /**\n     * @en Remove a list of models from the set.\n     * @ja Model ãªã¹ãæå®ã«ãã Collection ããã®åé¤\n     *\n     * @param seeds\n     *  - `en` given the seed of model array.\n     *  - `ja` Model è¦ç´ ã®éåãæå®\n     * @param options\n     *  - `en` remove options.\n     *  - `ja` åé¤ãªãã·ã§ã³\n     */\n    public remove(seeds: (TModel | CollectionSeed)[], options?: CollectionOperationOptions): TModel[];\n\n    public remove(seeds: TModel | UnknownObject | (TModel | CollectionSeed)[], options?: CollectionOperationOptions): TModel | TModel[] | undefined {\n        const opts = Object.assign({}, options) as CollectionUpdateOptions<TModel>;\n        const singular = !isArray(seeds);\n        const items = singular ? [seeds as TModel] : (seeds as TModel[]).slice();\n        const removed = this[_removeModels](items, opts);\n        if (!opts.silent && removed.length) {\n            opts.changes = { added: [], merged: [], removed };\n            (this as Collection).trigger('@update', this as Collection, opts);\n        }\n        return singular ? removed[0] : removed;\n    }\n\n    /**\n     * @en Add a model to the end of the collection.\n     * @ja æ«å°¾ã« Model ãè¿½å \n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model è¦ç´ ãæå®\n     * @param options\n     *  - `en` add options.\n     *  - `ja` è¿½å ãªãã·ã§ã³\n     */\n    public push(seed: TModel | CollectionSeed, options?: CollectionAddOptions): TModel {\n        const { store } = this[_properties];\n        return this.add(seed, Object.assign({ at: store.length }, options));\n    }\n\n    /**\n     * @en Remove a model from the end of the collection.\n     * @ja æ«å°¾ã® Model ãåé¤\n     *\n     * @param options\n     *  - `en` Silenceable options.\n     *  - `ja` Silenceable ãªãã·ã§ã³\n     */\n    public pop(options?: Silenceable): TModel | undefined {\n        const { store } = this[_properties];\n        return this.remove(store[store.length - 1], options);\n    }\n\n    /**\n     * @en Add a model to the beginning of the collection.\n     * @ja åé ­ã« Model ãè¿½å \n     *\n     * @param seed\n     *  - `en` given the seed of model.\n     *  - `ja` Model è¦ç´ ãæå®\n     * @param options\n     *  - `en` add options.\n     *  - `ja` è¿½å ãªãã·ã§ã³\n     */\n    public unshift(seed: TModel | CollectionSeed, options?: CollectionAddOptions): TModel {\n        return this.add(seed, Object.assign({ at: 0 }, options));\n    }\n\n    /**\n     * @en Remove a model from the beginning of the collection.\n     * @ja åé ­ã® Model ãåé¤\n     *\n     * @param options\n     *  - `en` Silenceable options.\n     *  - `ja` Silenceable ãªãã·ã§ã³\n     */\n    public shift(options?: Silenceable): TModel | undefined {\n        const { store } = this[_properties];\n        return this.remove(store[0], options);\n    }\n\n    /**\n     * @en Create a new instance of a model in this collection.\n     * @ja æ°ãã Model ã¤ã³ã¹ã¿ã³ã¹ãä½æã, Collection ã«è¿½å \n     *\n     * @param attrs\n     *  - `en` attributes object.\n     *  - `ja` å±æ§ãªãã¸ã§ã¯ããæå®\n     * @param options\n     *  - `en` model construction options.\n     *  - `ja` Model æ§ç¯ãªãã·ã§ã³\n     */\n    public create(attrs: object, options?: ModelSaveOptions): TModel | undefined {\n        const { wait } = options || {};\n        const seed = this[_prepareModel](attrs, options as Silenceable);\n        if (!seed) {\n            return undefined;\n        }\n\n        const model = isModel(seed) ? seed : undefined;\n        if (!wait || !model) {\n            this.add(seed, options);\n        }\n\n        if (model) {\n            void (async () => {\n                try {\n                    await model.save(undefined, options);\n                    if (wait) {\n                        this.add(seed, options);\n                    }\n                } catch (e) {\n                    (this as Collection).trigger('@error', model, this as Collection, e, options);\n                }\n            })();\n        }\n\n        return seed;\n    }\n\n    /** @internal model preparation */\n    private [_prepareModel](attrs: object | TModel | undefined, options: CollectionOperationOptions): TModel | undefined {\n        if (isCollectionModel(attrs, this)) {\n            return attrs;\n        }\n\n        const constructor = modelConstructor(this);\n        const { modelOptions } = this[_properties];\n        if (constructor) {\n            const opts = Object.assign({}, modelOptions, options);\n            const model = new constructor(attrs, opts) as { validate: () => Result; };\n            if (isFunction(model.validate)) {\n                const result = model.validate();\n                if (FAILED(result.code)) {\n                    (this as Collection).trigger('@invalid', attrs as Model, this as Collection, result, opts);\n                    return undefined;\n                }\n            }\n            return model as TModel;\n        }\n\n        // plain object\n        return attrs as TModel;\n    }\n\n    /** @internal Internal method called by both remove and set. */\n    private [_removeModels](models: TModel[], options: CollectionSetOptions): TModel[] {\n        const opts = Object.assign({}, options) as CollectionUpdateOptions<TModel>;\n        const removed: TModel[] = [];\n        for (const mdl of models) {\n            const model = this.get(mdl);\n            if (!model) {\n                continue;\n            }\n\n            const { store } = this[_properties];\n            const index = store.indexOf(model);\n            store.splice(index, 1);\n\n            // Remove references before triggering 'remove' event to prevent an infinite loop.\n            this[_removeReference](model, true);\n\n            if (!opts.silent) {\n                opts.index = index;\n                if (isModel(model) || (model instanceof EventBroker)) {\n                    (model as Model).trigger('@remove', model as Model, this, opts);\n                } else {\n                    (this as Collection).trigger('@remove', model, this as Collection, opts);\n                }\n            }\n\n            removed.push(model);\n            this[_removeReference](model, false);\n        }\n        return removed;\n    }\n\n    /** @internal Internal method to create a model's ties to a collection. */\n    private [_addReference](model: TModel): void {\n        const { byId } = this[_properties];\n        const { _cid, id } = model as { _cid: string; id: string; };\n        if (null != _cid) {\n            byId.set(_cid, model);\n        }\n        if (null != id) {\n            byId.set(id, model);\n        }\n        if (isModel(model) || (model instanceof EventPublisher)) {\n            this.listenTo(model as Subscribable, '*', this[_onModelEvent]);\n        }\n    }\n\n    /** @internal Internal method to sever a model's ties to a collection. */\n    private [_removeReference](model: TModel, partial = false): void {\n        const { byId } = this[_properties];\n        const { _cid, id } = model as { _cid: string; id: string; };\n        if (null != _cid) {\n            byId.delete(_cid);\n        }\n        if (null != id) {\n            byId.delete(id);\n        }\n        if (!partial && (isModel(model) || (model instanceof EventPublisher))) {\n            this.stopListening(model as Subscribable, '*', this[_onModelEvent]);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: Iterable<TModel>\n\n    /**\n     * @en Iterator of [[ElementBase]] values in the array.\n     * @ja æ ¼ç´ãã¦ãã [[ElementBase]] ã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    [Symbol.iterator](): Iterator<TModel> {\n        const iterator = {\n            base: this.models,\n            pointer: 0,\n            next(): IteratorResult<TModel> {\n                if (this.pointer < this.base.length) {\n                    return {\n                        done: false,\n                        value: this.base[this.pointer++],\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    };\n                }\n            },\n        };\n        return iterator as Iterator<TModel>;\n    }\n\n    /**\n     * @en Returns an iterable of key(id), value(model) pairs for every entry in the array.\n     * @ja key(id), value(model) éåã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    entries(): IterableIterator<[string, TModel]> {\n        return this[_createIterableIterator]((key: string, value: TModel) => [key, value]);\n    }\n\n    /**\n     * @en Returns an iterable of keys(id) in the array.\n     * @ja key(id) éåã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    keys(): IterableIterator<string> {\n        return this[_createIterableIterator]((key: string) => key);\n    }\n\n    /**\n     * @en Returns an iterable of values([[ElementBase]]) in the array.\n     * @ja values([[ElementBase]]) éåã«ã¢ã¯ã»ã¹å¯è½ãªã¤ãã¬ã¼ã¿ãªãã¸ã§ã¯ããè¿å´\n     */\n    values(): IterableIterator<TModel> {\n        return this[_createIterableIterator]((key: string, value: TModel) => value);\n    }\n\n    /** @internal common iterator create function */\n    private [_createIterableIterator]<R>(valueGenerator: (key: string, value: TModel) => R): IterableIterator<R> {\n        const context = {\n            base: this.models,\n            pointer: 0,\n        };\n\n        const pos2key = (pos: number): string => {\n            return getModelId(context.base[pos], modelConstructor(this)) || String(pos);\n        };\n\n        const iterator: IterableIterator<R> = {\n            next(): IteratorResult<R> {\n                const current = context.pointer;\n                if (current < context.base.length) {\n                    context.pointer++;\n                    return {\n                        done: false,\n                        value: valueGenerator(pos2key(current), context.base[current]),\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: undefined!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    };\n                }\n            },\n            [Symbol.iterator](): IterableIterator<R> {\n                return this;\n            },\n        };\n\n        return iterator;\n    }\n}\n\n// mixin ã«ãã `instanceof` ã¯ç¡å¹ã«è¨­å®\nsetMixClassAttribute(Collection as Class, 'instanceOf', null);\n","import type { CancelToken } from '@cdp/promise';\nimport { ArrayChangeRecord } from '@cdp/observable';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport type { ListChanged, ListEditOptions } from './interfaces';\nimport {\n    clearArray,\n    appendArray,\n    insertArray,\n    reorderArray,\n    removeArray,\n} from './utils';\nimport type { Collection } from './base';\n\n/**\n * @en Edited collection type definition.\n * @ja è¢«ç·¨é Collection ã®åå®ç¾©\n */\nexport type CollectionEditee<M extends object> = Collection<M, any, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n/** @internal */\nfunction prepare<T extends object>(collection: Collection<T>): T[] | never {\n    if (collection.filtered) {\n        throw makeResult(RESULT_CODE.ERROR_MVC_EDIT_PERMISSION_DENIED, 'collection is applied after-filter.');\n    }\n    return collection.models.slice();\n}\n\n/** @internal */\nasync function exec<T extends object>(\n    collection: Collection<T>,\n    options: ListEditOptions | undefined,\n    operation: (targets: T[], token: CancelToken | undefined) => Promise<ArrayChangeRecord<T>[]>,\n): Promise<ArrayChangeRecord<T>[]> {\n    const targets = prepare<T>(collection);\n    const change = await operation(targets, options?.cancel);\n    collection.set(targets, options);\n    return change;\n}\n\n/** @internal */\nfunction min(indices: number[]): number {\n    return indices.reduce((lhs, rhs) => Math.min(lhs, rhs));\n}\n\n/** @internal */\nfunction makeListChanged<T>(\n    type: 'add' | 'remove' | 'reorder',\n    changes: ArrayChangeRecord<T>[],\n    rangeFrom: number,\n    rangeTo: number,\n    at?: number,\n): ListChanged<T> {\n    const changed = !!changes.length;\n    return {\n        type,\n        list: changes,\n        range: changed ? { from: rangeFrom, to: rangeTo } : undefined,\n        insertedTo: changed ? at : undefined,\n    } as ListChanged<T>;\n}\n\n/**\n * @en Clear all elements of [[Collection]].\n * @ja [[Collection]] è¦ç´ ã®å¨åé¤\n *\n * @param collection\n *  - `en` target [[Collection]]\n *  - `ja` å¯¾è±¡ [[Collection]]\n * @param options\n *  - `en` [[CollectionEditOptions]] reference.\n *  - `ja` [[CollectionEditOptions]] ãæå®\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function clearCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeTo = collection.length - 1;\n    const changes = await exec(collection, options, (targets, token) => clearArray(targets, token));\n    return makeListChanged('remove', changes, 0, rangeTo);\n}\n\n/**\n * @en Append source elements to the end of [[Collection]].\n * @ja [[Collection]] ã®æ«å°¾ã«è¿½å \n *\n * @param collection\n *  - `en` target [[Collection]]\n *  - `ja` å¯¾è±¡ [[Collection]]\n * @param src\n *  - `en` source elements\n *  - `ja` è¿½å åè¦ç´ \n * @param options\n *  - `en` [[CollectionEditOptions]] reference.\n *  - `ja` [[CollectionEditOptions]] ãæå®\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function appendCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    src: T[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeFrom = collection.length;\n    const changes = await exec(collection, options, (targets, token) => appendArray(targets, src, token));\n    return makeListChanged('add', changes, rangeFrom, collection.length - 1, rangeFrom);\n}\n\n/**\n * @en Insert source elements to specified index of [[Collection]].\n * @ja [[Collection]] ã®æå®ããä½ç½®ã«æ¿å¥\n *\n * @param collection\n *  - `en` target [[Collection]]\n *  - `ja` å¯¾è±¡ [[Collection]]\n * @param index\n *  - `ja` target array position index\n *  - `ja` è¿½å åã®ã¤ã³ããã¯ã¹\n * @param src\n *  - `en` source elements\n *  - `ja` è¿½å åè¦ç´ \n * @param options\n *  - `en` [[CollectionEditOptions]] reference.\n *  - `ja` [[CollectionEditOptions]] ãæå®\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function insertCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    index: number,\n    src: T[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const changes = await exec(collection, options, (targets, token) => insertArray(targets, index, src, token));\n    return makeListChanged('add', changes, index, collection.length - 1, index);\n}\n\n/**\n * @en Reorder [[Collection]] elements position.\n * @ja [[Collection]] é ç®ã®ä½ç½®ãå¤æ´\n *\n * @param collection\n *  - `en` target [[Collection]]\n *  - `ja` å¯¾è±¡ [[Collection]]\n * @param index\n *  - `ja` target array position index\n *  - `ja` è¿½å åã®ã¤ã³ããã¯ã¹\n * @param orders\n *  - `en` edit order index array\n *  - `ja` ã¤ã³ããã¯ã¹éå\n * @param options\n *  - `en` [[CollectionEditOptions]] reference.\n *  - `ja` [[CollectionEditOptions]] ãæå®\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function reorderCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    index: number,\n    orders: number[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeFrom = min([index, ...orders]);\n    const changes = await exec(collection, options, (targets, token) => reorderArray(targets, index, orders, token));\n    return makeListChanged('reorder', changes, rangeFrom, collection.length - 1, index);\n}\n\n/**\n * @en Remove [[Collection]] elements.\n * @ja [[Collection]] é ç®ã®åé¤\n *\n * @param collection\n *  - `en` target [[Collection]]\n *  - `ja` å¯¾è±¡ [[Collection]]\n * @param orders\n *  - `en` removed order index array\n *  - `ja` ã¤ã³ããã¯ã¹éå\n * @param options\n *  - `en` [[CollectionEditOptions]] reference.\n *  - `ja` [[CollectionEditOptions]] ãæå®\n * @returns\n *  - `en` Changed information\n *  - `ja` å¤æ´æå ±\n */\nexport async function removeCollection<T extends object>(\n    collection: CollectionEditee<T>,\n    orders: number[],\n    options?: ListEditOptions\n): Promise<ListChanged<T>> {\n    const rangeFrom = min(orders);\n    const rangeTo = collection.length - 1;\n    const changes = await exec(collection, options, (targets, token) => removeArray(targets, orders, token));\n    return makeListChanged('remove', changes, rangeFrom, rangeTo);\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const document = safe(globalThis.document);\n","/* eslint-disable\n    @typescript-eslint/no-explicit-any,\n */\n\nimport {\n    Nil,\n    PlainObject,\n    UnknownFunction,\n    isFunction,\n    isEmptyObject,\n    luid,\n    drop,\n} from '@cdp/core-utils';\nimport { EventSource } from '@cdp/events';\nimport {\n    DOM,\n    DOMSelector,\n    DOMResult,\n    DOMEventListener,\n    DOMEventMap,\n    EventType,\n    EventTypeOrNamespace,\n    dom as $,\n} from '@cdp/dom';\nimport { ViewEventsHash, ViewConstructionOptions } from './interfaces';\nimport { document } from './ssr';\n\n/** @internal */ const _properties    = Symbol('properties');\n/** @internal */ const _ensureElement = Symbol('ensure-element');\n\n/** @internal */\ninterface Property<T extends Node> {\n    readonly cid: string;\n    readonly events?: ViewEventsHash<T>;\n    readonly id?: string;\n    readonly className?: string;\n    readonly attributes?: PlainObject<string | number | boolean | null>;\n    readonly tagName: string;\n    $el: DOM<T>;\n}\n\n//__________________________________________________________________________________________________//\n\nexport type ViewFindSelector = Node | string | Nil;\n\n/**\n * @en Base class definition for view that manages the layout and a DOM events.\n * @ja ã¬ã¤ã¢ã¦ãç®¡çã¨ DOM ã¤ãã³ãã®ç£è¦ãè¡ã View ã®åºåºã¯ã©ã¹å®ç¾©\n *\n * @example <br>\n *\n * ```ts\n * import { TemplateEngine } from '@cdp/core-template';\n * import { DOM, dom as $ } from '@cdp/dom';\n * import { View, ViewEventsHash } from '@cdp/view';\n * import { ToDo, ToDoEventSource } from './todo';\n *\n * const _template = TemplateEngine.compile($('#item-template').html());\n *\n * export class ToDoView extends View {\n *     private _model: ToDo;\n *     private _$input?: DOM<HTMLInputElement>;\n *\n *     constructor(todo: ToDo) {\n *         super({ tagName: 'li' });\n *         this._model = todo;\n *         this.listenTo(this._model as ToDoEventSource, '@change', this.render.bind(this));\n *         this.listenTo(this._model as ToDoEventSource, '@destroy', this.remove.bind(this));\n *     }\n *\n *     protected events(): ViewEventsHash<HTMLElement> {\n *         return {\n *             'click .toggle':   this.toggleDone,\n *             'dblclick .view':  this.edit,\n *             'click a.destroy': this.clear,\n *             'keypress .edit':  this.updateOnEnter,\n *             'blur .edit':      this.close,\n *         };\n *     }\n *\n *     render(): this {\n *         this.$el.html(_template(this._model.toJSON()));\n *         this.$el.toggleClass('done', this._model.done);\n *         this._$input = this.$('.edit') as DOM<HTMLInputElement>;\n *         return this;\n *     }\n *     :\n * }\n * ```\n */\nexport abstract class View<TElement extends Node = HTMLElement, TEvent extends object = object> extends EventSource<TEvent> {\n\n    /** @internal */\n    private readonly [_properties]: Property<TElement>;\n\n///////////////////////////////////////////////////////////////////////\n// construction/destruction:\n\n    /**\n     * constructor\n     *\n     * @param options\n     *  - `en` construction options.\n     *  - `ja` æ§ç¯ãªãã·ã§ã³\n     */\n    constructor(options?: ViewConstructionOptions<TElement>) {\n        super();\n\n        const { el, tagName, id, attributes, className, events } = options || {};\n        this[_properties] = {\n            cid: luid('view:', 8),\n            events,\n            id,\n            className,\n            attributes,\n            tagName: tagName || 'div',\n        } as Property<TElement>;\n\n        this[_ensureElement](el);\n    }\n\n    /**\n     * @en Release all listeners.\n     * @ja ãã¹ã¦ã®ãªã¹ãã¼ãè§£é¤\n     */\n    public release(): this {\n        this.undelegateEvents();\n        this.stopListening();\n        this.off();\n        return this;\n    }\n\n    /**\n     * @en Remove this view by taking the element out of the DOM with release all listeners.\n     * @ja View ãã DOM ãåãé¢ã, ãªã¹ãã¼ãè§£é¤\n     */\n    public remove(): this {\n        this.release();\n        this.$el.remove();\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: attributes\n\n    /**\n     * @en Get content ID.\n     * @ja ã³ã³ãã³ã ID ãåå¾\n     */\n    get id(): string {\n        const { cid, id } = this[_properties];\n        return id || cid;\n    }\n\n    /**\n     * @en Get element.\n     * @ja è¦ç´ ãåå¾\n     */\n    get el(): TElement {\n        return this[_properties].$el[0];\n    }\n\n    /**\n     * @en Get [[DOM]] object.\n     * @ja [[DOM]] ãªãã¸ã§ã¯ããåå¾\n     */\n    get $el(): DOM<TElement> {\n        return this[_properties].$el;\n    }\n\n    /**\n     * @en Get internal content ID.\n     * @ja åé¨ã®ã³ã³ãã³ã ID ãåå¾\n     */\n    protected get _cid(): string {\n        return this[_properties].cid;\n    }\n\n    /**\n     * @en Get default tag name.\n     * @ja æ¢å®ã®ã¿ã°åãåå¾\n     */\n    protected get _tagName(): string {\n        return this[_properties].tagName;\n    }\n\n    /**\n     * @en Attributes instance\n     * @ja å±æ§ãæ ¼ç´ããã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _attrs(): PlainObject<string | number | boolean | null> {\n        const { attributes, id, className } = this[_properties];\n        return Object.assign(drop({ id, class: className }), attributes);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// operation:\n\n    /**\n     * @en Change the view's element (`this.el` property) and re-delegate the view's events on the new element.\n     * @ja View ãç®¡è½ããè¦ç´  (`this.el` property) ã®å¤æ´. ã¤ãã³ãåè¨­å®ãå®è¡\n     *\n     * @param el\n     *  - `en` Object or the selector string which becomes origin of element.\n     *  - `ja` è¦ç´ ã®ãã¨ã«ãªããªãã¸ã§ã¯ãã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public setElement(el: DOMSelector<TElement | string>): this {\n        this.undelegateEvents();\n        this[_properties].$el = $(el) as DOM<TElement>;\n        this.delegateEvents();\n        return this;\n    }\n\n    /**\n     * @en Set DOM callbacks from [[ViewEventsHash]] object.\n     * @ja [[ViewEventsHash]] ãªãã¸ã§ã¯ããã DOM ã³ã¼ã«ããã¯ãè¨­å®\n     *\n     * @param events\n     *  - `en` [[ViewEventsHash]] object. `this.events()` is used by default.\n     *  - `ja` [[ViewEventsHash]] ãªãã¸ã§ã¯ã. æ¢å®å¤ã¯ `this.events()`\n     */\n    public delegateEvents(events?: ViewEventsHash<TElement>): this {\n        const hash = events || this.events();\n        if (isEmptyObject(hash)) {\n            return this;\n        }\n\n        this.undelegateEvents();\n\n        for (const key of Object.keys(hash)) {\n            let method = hash[key] as UnknownFunction;\n            if (!isFunction(method)) {\n                method = this[method];\n            }\n            if (!method) {\n                continue;\n            }\n            const match = /^(\\S+)\\s*(.*)$/.exec(key) as RegExpExecArray;\n            this.delegate<any>(match[1], match[2], method.bind(this));\n        }\n\n        return this;\n    }\n\n    /**\n     * @en Clears all callbacks previously bound to the view by `delegate`.\n     * @ja `delegate` ãããã¤ãã³ãããã¹ã¦åé¤\n     */\n    public undelegateEvents(): this {\n        this.$el && this.$el.off<any>(`.${this._cid}`);\n        return this;\n    }\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja è¦ç´ ã«å¯¾ãã¦, 1ã¤ã¾ãã¯è¤æ°ã®ã¤ãã³ããã³ãã©ãè¨­å® (åçè¦ç´ ã«ãæå¹)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` ã¤ãã³ãçºè¡åããã£ã«ã¿ãªã³ã°ããã»ã¬ã¯ã¿æå­å\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public delegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        selector: string,\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Add event handler function to one or more events to the elements. (live event available)\n     * @ja è¦ç´ ã«å¯¾ãã¦, 1ã¤ã¾ãã¯è¤æ°ã®ã¤ãã³ããã³ãã©ãè¨­å® (åçè¦ç´ ã«ãæå¹)\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public delegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventType<TEventMap> | (EventType<TEventMap>)[],\n        listener: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public delegate(type: string, ...args: unknown[]): this {\n        (this.$el as any).on(`${type}.${this._cid}`, ...args);\n        return this;\n    }\n\n    /**\n     * @en Remove event handler. The handler designated at [[on]] or [[once]] and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja è¨­å®ããã¦ããã¤ãã³ããã³ãã©ã®è§£é¤. [[on]] ã¾ãã¯ [[once]] ã¨åæ¡ä»¶ã§æå®ãããã®ãè§£é¤ããã <br>\n     *     å¼æ°ãç¡ãå ´åã¯ãã¹ã¦ã®ãã³ãã©ãè§£é¤ããã.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param selector\n     *  - `en` A selector string to filter the descendants of the selected elements that trigger the event.\n     *  - `ja` ã¤ãã³ãçºè¡åããã£ã«ã¿ãªã³ã°ããã»ã¬ã¯ã¿æå­å\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public undelegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        selector: string,\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    /**\n     * @en Remove event handler. The handler designated at [[on]] or [[once]] and that same condition are released. <br>\n     *     If the method receives no arguments, all handlers are released.\n     * @ja è¨­å®ããã¦ããã¤ãã³ããã³ãã©ã®è§£é¤. [[on]] ã¾ãã¯ [[once]] ã¨åæ¡ä»¶ã§æå®ãããã®ãè§£é¤ããã <br>\n     *     å¼æ°ãç¡ãå ´åã¯ãã¹ã¦ã®ãã³ãã©ãè§£é¤ããã.\n     *\n     * @param type\n     *  - `en` event name or event name array.\n     *  - `ja` ã¤ãã³ãåã¾ãã¯ã¤ãã³ãåéå\n     * @param listener\n     *  - `en` callback function\n     *  - `ja` ã³ã¼ã«ããã¯é¢æ°\n     * @param options\n     *  - `en` options for `addEventLisntener`\n     *  - `ja` `addEventLisntener` ã«æå®ãããªãã·ã§ã³\n     */\n    public undelegate<TEventMap extends DOMEventMap<TElement>>(\n        type: EventTypeOrNamespace<TEventMap> | (EventTypeOrNamespace<TEventMap>)[],\n        listener?: DOMEventListener<TElement, TEventMap>,\n        options?: boolean | AddEventListenerOptions\n    ): this;\n\n    public undelegate(type: string, ...args: unknown[]): this {\n        (this.$el as any).off(`${type}.${this._cid}`, ...args);\n        return this;\n    }\n\n    /**\n     * @en Get the descendants of each element in the current set of matched elements, filtered by a selector.\n     * @ja éä¸ã®è¦ç´ ã«å¯¾ãã¦æå®ããã»ã¬ã¯ã¿ã«ä¸è´ããè¦ç´ ãæ¤ç´¢\n     *\n     * @param selector\n     *  - `en` Object(s) or the selector string which becomes origin of DOM.\n     *  - `ja` DOM ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹(ç¾¤)ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     */\n    public $<T extends ViewFindSelector = ViewFindSelector>(selector: DOMSelector<T>): DOMResult<T> {\n        return this.$el.find(selector);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// override:\n\n    /**\n     * @en The events hash (or method) can be used to specify a set of DOM events that will be bound to methods on your View through delegateEvents.\n     * @ja ã¤ãã³ãã»ã¬ã¯ã¿ã¨ã³ã¼ã«ããã¯ã®ããã·ã¥ãå®ç¾©ã, ã«ã¼ãã¨ã³ãã£ãã£ã§ææãã DOM ã¤ãã³ããæå®\n     *\n     *\n     * @example <br>\n     *\n     * ```ts\n     * class SampleView extends View {\n     *     protected events(): ViewEventsHash {\n     *         return {\n     *             'mousedown .title':  'edit',\n     *             'click .button':     'save',\n     *             'click .open':       function(e) { ... },\n     *             'click .close':      this.onClose,\n     *         };\n     *     }\n     * }\n     * ```\n     *\n     * @override\n     */\n    protected events(): ViewEventsHash<TElement> {\n        return Object.assign({}, this[_properties].events);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// abstract:\n\n    /**\n     * @en Implement this function with your code that renders the view template from model data, and updates `this.el` with the new HTML.\n     * @ja `this.el` æ´æ°æã®æ°ãã HTML ãã¬ã³ããªã³ã°ã­ã¸ãã¯ã®å®è£é¢æ°. ã¢ãã«æ´æ°ã¨ View ãã³ãã¬ã¼ããé£åããã.\n     *\n     * @example <br>\n     *\n     * ```ts\n     * import { TemplateEngine } from '@cdp/core-template';\n     *\n     * class SampleView extends View {\n     *     private _template = TemplateEngine.compile('{{title}}');\n     *     render(): void {\n     *         this.$el.html(this._template(this.model));\n     *     }\n     * }\n     * ```\n     */\n    abstract render(...args: unknown[]): Promise<this | void> | this | void;\n\n///////////////////////////////////////////////////////////////////////\n// internal:\n\n    /** @internal */\n    private [_ensureElement](el?: DOMSelector<TElement | string>): void {\n        if (!el) {\n            const { _attrs, _tagName } = this;\n            this.setElement(document.createElement(_tagName) as Node as TElement);\n            this.$el.attr(_attrs);\n        } else {\n            this.setElement(el);\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.3.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = typeof PartType[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {_$LH, Part, DirectiveParent, TemplateResult} from './lit-html.js';\nimport {\n  DirectiveResult,\n  DirectiveClass,\n  PartInfo,\n  AttributePartInfo,\n} from './directive.js';\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\n\nconst {_ChildPart: ChildPart} = _$LH;\n\ntype ChildPart = InstanceType<typeof ChildPart>;\n\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\n/**\n * Tests if a value is a primitive value.\n *\n * See https://tc39.github.io/ecma262/#sec-typeof-operator\n */\nexport const isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\n\nexport const TemplateResultType = {\n  HTML: 1,\n  SVG: 2,\n} as const;\n\nexport type TemplateResultType =\n  typeof TemplateResultType[keyof typeof TemplateResultType];\n\n/**\n * Tests if a value is a TemplateResult.\n */\nexport const isTemplateResult = (\n  value: unknown,\n  type?: TemplateResultType\n): value is TemplateResult =>\n  type === undefined\n    ? // This property needs to remain unminified.\n      (value as TemplateResult)?.['_$litType$'] !== undefined\n    : (value as TemplateResult)?.['_$litType$'] === type;\n\n/**\n * Tests if a value is a DirectiveResult.\n */\nexport const isDirectiveResult = (value: unknown): value is DirectiveResult =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'] !== undefined;\n\n/**\n * Retrieves the Directive class for a DirectiveResult\n */\nexport const getDirectiveClass = (value: unknown): DirectiveClass | undefined =>\n  // This property needs to remain unminified.\n  (value as DirectiveResult)?.['_$litDirective$'];\n\n/**\n * Tests whether a part has only a single-expression with no strings to\n * interpolate between.\n *\n * Only AttributePart and PropertyPart can have multiple expressions.\n * Multi-expression parts have a `strings` property and single-expression\n * parts do not.\n */\nexport const isSingleExpression = (part: PartInfo) =>\n  (part as AttributePartInfo).strings === undefined;\n\nconst createMarker = () => document.createComment('');\n\n/**\n * Inserts a ChildPart into the given container ChildPart's DOM, either at the\n * end of the container ChildPart, or before the optional `refPart`.\n *\n * This does not add the part to the containerPart's committed value. That must\n * be done by callers.\n *\n * @param containerPart Part within which to add the new ChildPart\n * @param refPart Part before which to add the new ChildPart; when omitted the\n *     part added to the end of the `containerPart`\n * @param part Part to insert, or undefined to create a new part\n */\nexport const insertPart = (\n  containerPart: ChildPart,\n  refPart?: ChildPart,\n  part?: ChildPart\n): ChildPart => {\n  const container = wrap(containerPart._$startNode).parentNode!;\n\n  const refNode =\n    refPart === undefined ? containerPart._$endNode : refPart._$startNode;\n\n  if (part === undefined) {\n    const startNode = wrap(container).insertBefore(createMarker(), refNode);\n    const endNode = wrap(container).insertBefore(createMarker(), refNode);\n    part = new ChildPart(\n      startNode,\n      endNode,\n      containerPart,\n      containerPart.options\n    );\n  } else {\n    const endNode = wrap(part._$endNode!).nextSibling;\n    const oldParent = part._$parent;\n    const parentChanged = oldParent !== containerPart;\n    if (parentChanged) {\n      part._$reparentDisconnectables?.(containerPart);\n      // Note that although `_$reparentDisconnectables` updates the part's\n      // `_$parent` reference after unlinking from its current parent, that\n      // method only exists if Disconnectables are present, so we need to\n      // unconditionally set it here\n      part._$parent = containerPart;\n      // Since the _$isConnected getter is somewhat costly, only\n      // read it once we know the subtree has directives that need\n      // to be notified\n      let newConnectionState;\n      if (\n        part._$notifyConnectionChanged !== undefined &&\n        (newConnectionState = containerPart._$isConnected) !==\n          oldParent!._$isConnected\n      ) {\n        part._$notifyConnectionChanged(newConnectionState);\n      }\n    }\n    if (endNode !== refNode || parentChanged) {\n      let start: Node | null = part._$startNode;\n      while (start !== endNode) {\n        const n: Node | null = wrap(start!).nextSibling;\n        wrap(container).insertBefore(start!, refNode);\n        start = n;\n      }\n    }\n  }\n\n  return part;\n};\n\n/**\n * Sets the value of a Part.\n *\n * Note that this should only be used to set/update the value of user-created\n * parts (i.e. those created using `insertPart`); it should not be used\n * by directives to set the value of the directive's container part. Directives\n * should return a value from `update`/`render` to update their part state.\n *\n * For directives that require setting their part value asynchronously, they\n * should extend `AsyncDirective` and call `this.setValue()`.\n *\n * @param part Part to set\n * @param value Value to set\n * @param index For `AttributePart`s, the index to set\n * @param directiveParent Used internally; should not be set by user\n */\nexport const setChildPartValue = <T extends ChildPart>(\n  part: T,\n  value: unknown,\n  directiveParent: DirectiveParent = part\n): T => {\n  part._$setValue(value, directiveParent);\n  return part;\n};\n\n// A sentinal value that can never appear as a part value except when set by\n// live(). Used to force a dirty-check to fail and cause a re-render.\nconst RESET_VALUE = {};\n\n/**\n * Sets the committed value of a ChildPart directly without triggering the\n * commit stage of the part.\n *\n * This is useful in cases where a directive needs to update the part such\n * that the next update detects a value change or not. When value is omitted,\n * the next update will be guaranteed to be detected as a change.\n *\n * @param part\n * @param value\n */\nexport const setCommittedValue = (part: Part, value: unknown = RESET_VALUE) =>\n  (part._$committedValue = value);\n\n/**\n * Returns the committed value of a ChildPart.\n *\n * The committed value is used for change detection and efficient updates of\n * the part. It can differ from the value set by the template or directive in\n * cases where the template value is transformed before being commited.\n *\n * - `TemplateResult`s are committed as a `TemplateInstance`\n * - Iterables are committed as `Array<ChildPart>`\n * - All other types are committed as the template value or value returned or\n *   set by a directive.\n *\n * @param part\n */\nexport const getCommittedValue = (part: ChildPart) => part._$committedValue;\n\n/**\n * Removes a ChildPart from the DOM, including any of its content.\n *\n * @param part The Part to remove\n */\nexport const removePart = (part: ChildPart) => {\n  part._$notifyConnectionChanged?.(false, true);\n  let start: ChildNode | null = part._$startNode;\n  const end: ChildNode | null = wrap(part._$endNode!).nextSibling;\n  while (start !== end) {\n    const n: ChildNode | null = wrap(start!).nextSibling;\n    (wrap(start!) as ChildNode).remove();\n    start = n;\n  }\n};\n\nexport const clearPart = (part: ChildPart) => {\n  part._$clear();\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback: WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n> = new WeakMap();\n\nexport type RefOrCallback = Ref | ((el: Element | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Note, this module is not included in package exports so that it's private to\n// our first-party directives. If it ends up being useful, we can open it up and\n// export it.\n\n/**\n * Helper to iterate an AsyncIterable in its own closure.\n * @param iterable The iterable to iterate\n * @param callback The callback to call for each value. If the callback returns\n * `false`, the loop will be broken.\n */\nexport const forAwaitOf = async <T>(\n  iterable: AsyncIterable<T>,\n  callback: (value: T) => Promise<boolean>\n) => {\n  for await (const v of iterable) {\n    if ((await callback(v)) === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Holds a reference to an instance that can be disconnected and reconnected,\n * so that a closure over the ref (e.g. in a then function to a promise) does\n * not strongly hold a ref to the instance. Approximates a WeakRef but must\n * be manually connected & disconnected to the backing instance.\n */\nexport class PseudoWeakRef<T> {\n  private _ref?: T;\n  constructor(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Disassociates the ref with the backing instance.\n   */\n  disconnect() {\n    this._ref = undefined;\n  }\n  /**\n   * Reassociates the ref with the backing instance.\n   */\n  reconnect(ref: T) {\n    this._ref = ref;\n  }\n  /**\n   * Retrieves the backing instance (will be undefined when disconnected)\n   */\n  deref() {\n    return this._ref;\n  }\n}\n\n/**\n * A helper to pause and resume waiting on a condition in an async function\n */\nexport class Pauser {\n  private _promise?: Promise<void> = undefined;\n  private _resolve?: () => void = undefined;\n  /**\n   * When paused, returns a promise to be awaited; when unpaused, returns\n   * undefined. Note that in the microtask between the pauser being resumed\n   * an an await of this promise resolving, the pauser could be paused again,\n   * hence callers should check the promise in a loop when awaiting.\n   * @returns A promise to be awaited when paused or undefined\n   */\n  get() {\n    return this._promise;\n  }\n  /**\n   * Creates a promise to be awaited\n   */\n  pause() {\n    this._promise ??= new Promise((resolve) => (this._resolve = resolve));\n  }\n  /**\n   * Resolves the promise which may be awaited\n   */\n  resume() {\n    this._resolve?.();\n    this._promise = this._resolve = undefined;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {\n  AsyncDirective,\n  directive,\n  DirectiveParameters,\n} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef, forAwaitOf} from './private-async-helpers.js';\n\ntype Mapper<T> = (v: T, index?: number) => unknown;\n\nexport class AsyncReplaceDirective extends AsyncDirective {\n  private __value?: AsyncIterable<unknown>;\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  // @ts-expect-error value not used, but we want a nice parameter for docs\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  render<T>(value: AsyncIterable<T>, _mapper?: Mapper<T>) {\n    return noChange;\n  }\n\n  override update(\n    _part: ChildPart,\n    [value, mapper]: DirectiveParameters<this>\n  ) {\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n    // If we've already set up this particular iterable, we don't need\n    // to do anything.\n    if (value === this.__value) {\n      return;\n    }\n    this.__value = value;\n    let i = 0;\n    const {__weakThis: weakThis, __pauser: pauser} = this;\n    // Note, the callback avoids closing over `this` so that the directive\n    // can be gc'ed before the promise resolves; instead `this` is retrieved\n    // from `weakThis`, which can break the hard reference in the closure when\n    // the directive disconnects\n    forAwaitOf(value, async (v: unknown) => {\n      // The while loop here handles the case that the connection state\n      // thrashes, causing the pauser to resume and then get re-paused\n      while (pauser.get()) {\n        await pauser.get();\n      }\n      // If the callback gets here and there is no `this`, it means that the\n      // directive has been disconnected and garbage collected and we don't\n      // need to do anything else\n      const _this = weakThis.deref();\n      if (_this !== undefined) {\n        // Check to make sure that value is the still the current value of\n        // the part, and if not bail because a new value owns this part\n        if (_this.__value !== value) {\n          return false;\n        }\n\n        // As a convenience, because functional-programming-style\n        // transforms of iterables and async iterables requires a library,\n        // we accept a mapper function. This is especially convenient for\n        // rendering a template for each item.\n        if (mapper !== undefined) {\n          v = mapper(v, i);\n        }\n\n        _this.commitValue(v, i);\n        i++;\n      }\n      return true;\n    });\n    return noChange;\n  }\n\n  // Override point for AsyncAppend to append rather than replace\n  protected commitValue(value: unknown, _index: number) {\n    this.setValue(value);\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * A directive that renders the items of an async iterable[1], replacing\n * previous values with new values, so that only one value is ever rendered\n * at a time. This directive may be used in any expression type.\n *\n * Async iterables are objects with a `[Symbol.asyncIterator]` method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is rendered to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncReplace = directive(AsyncReplaceDirective);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart} from '../lit-html.js';\nimport {\n  directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {AsyncReplaceDirective} from './async-replace.js';\nimport {\n  clearPart,\n  insertPart,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nclass AsyncAppendDirective extends AsyncReplaceDirective {\n  private __childPart!: ChildPart;\n\n  // Override AsyncReplace to narrow the allowed part type to ChildPart only\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('asyncAppend can only be used in child expressions');\n    }\n  }\n\n  // Override AsyncReplace to save the part since we need to append into it\n  override update(part: ChildPart, params: DirectiveParameters<this>) {\n    this.__childPart = part;\n    return super.update(part, params);\n  }\n\n  // Override AsyncReplace to append rather than replace\n  protected override commitValue(value: unknown, index: number) {\n    // When we get the first value, clear the part. This lets the\n    // previous value display until we can replace it.\n    if (index === 0) {\n      clearPart(this.__childPart);\n    }\n    // Create and insert a new part and set its value to the next value\n    const newPart = insertPart(this.__childPart);\n    setChildPartValue(newPart, value);\n  }\n}\n\n/**\n * A directive that renders the items of an async iterable[1], appending new\n * values after previous values, similar to the built-in support for iterables.\n * This directive is usable only in child expressions.\n *\n * Async iterables are objects with a [Symbol.asyncIterator] method, which\n * returns an iterator who's `next()` method returns a Promise. When a new\n * value is available, the Promise resolves and the value is appended to the\n * Part controlled by the directive. If another value other than this\n * directive has been set on the Part, the iterable will no longer be listened\n * to and new values won't be written to the Part.\n *\n * [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n *\n * @param value An async iterable\n * @param mapper An optional function that maps from (value, index) to another\n *     value. Useful for generating templates for each item in the iterable.\n */\nexport const asyncAppend = directive(AsyncAppendDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {AsyncAppendDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {\n  TemplateResult,\n  ChildPart,\n  RootPart,\n  render,\n  nothing,\n} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n} from '../directive.js';\nimport {\n  clearPart,\n  getCommittedValue,\n  insertPart,\n  isTemplateResult,\n  setCommittedValue,\n} from '../directive-helpers.js';\n\nclass CacheDirective extends Directive {\n  private _templateCache = new WeakMap<TemplateStringsArray, RootPart>();\n  private _value?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n  }\n\n  render(v: unknown) {\n    // Return an array of the value to induce lit-html to create a ChildPart\n    // for the value that we can move into the cache.\n    return [v];\n  }\n\n  override update(containerPart: ChildPart, [v]: DirectiveParameters<this>) {\n    // If the previous value is a TemplateResult and the new value is not,\n    // or is a different Template as the previous value, move the child part\n    // into the cache.\n    if (\n      isTemplateResult(this._value) &&\n      (!isTemplateResult(v) || this._value.strings !== v.strings)\n    ) {\n      // This is always an array because we return [v] in render()\n      const partValue = getCommittedValue(containerPart) as Array<ChildPart>;\n      const childPart = partValue.pop()!;\n      let cachedContainerPart = this._templateCache.get(this._value.strings);\n      if (cachedContainerPart === undefined) {\n        const fragment = document.createDocumentFragment();\n        cachedContainerPart = render(nothing, fragment);\n        cachedContainerPart.setConnected(false);\n        this._templateCache.set(this._value.strings, cachedContainerPart);\n      }\n      // Move into cache\n      setCommittedValue(cachedContainerPart, [childPart]);\n      insertPart(cachedContainerPart, undefined, childPart);\n    }\n    // If the new value is a TemplateResult and the previous value is not,\n    // or is a different Template as the previous value, restore the child\n    // part from the cache.\n    if (isTemplateResult(v)) {\n      if (!isTemplateResult(this._value) || this._value.strings !== v.strings) {\n        const cachedContainerPart = this._templateCache.get(v.strings);\n        if (cachedContainerPart !== undefined) {\n          // Move the cached part back into the container part value\n          const partValue = getCommittedValue(\n            cachedContainerPart\n          ) as Array<ChildPart>;\n          const cachedPart = partValue.pop()!;\n          // Move cached part back into DOM\n          clearPart(containerPart);\n          insertPart(containerPart, undefined, cachedPart);\n          setCommittedValue(containerPart, [cachedPart]);\n        }\n      }\n      this._value = v;\n    } else {\n      this._value = undefined;\n    }\n    return this.render(v);\n  }\n}\n\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```js\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive(CacheDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {CacheDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that we don't require down-level\n    // iteration.\n    this._previousClasses.forEach((name) => {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    });\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange, Part} from '../lit-html.js';\nimport {directive, Directive, DirectiveParameters} from '../directive.js';\n\n// A sentinal that indicates guard() hasn't rendered anything yet\nconst initialValue = {};\n\nclass GuardDirective extends Directive {\n  private _previousValue: unknown = initialValue;\n\n  render(_value: unknown, f: () => unknown) {\n    return f();\n  }\n\n  override update(_part: Part, [value, f]: DirectiveParameters<this>) {\n    if (Array.isArray(value)) {\n      // Dirty-check arrays by item\n      if (\n        Array.isArray(this._previousValue) &&\n        this._previousValue.length === value.length &&\n        value.every((v, i) => v === (this._previousValue as Array<unknown>)[i])\n      ) {\n        return noChange;\n      }\n    } else if (this._previousValue === value) {\n      // Dirty-check non-arrays by identity\n      return noChange;\n    }\n\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    const r = this.render(value, f);\n    return r;\n  }\n}\n\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Values are checked against previous values with strict equality (`===`), and\n * so the check won't detect nested property changes inside objects or arrays.\n * Arrays values have each item checked against the previous value at the same\n * index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * `\n * ```\n *\n * In this case, the template only rerenders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * `\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive(GuardDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {GuardDirective};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  ChildPart,\n  DirectiveParameters,\n} from '../directive.js';\nimport {setCommittedValue} from '../directive-helpers.js';\n\nclass Keyed extends Directive {\n  key: unknown = nothing;\n\n  render(k: unknown, v: unknown) {\n    this.key = k;\n    return v;\n  }\n\n  override update(part: ChildPart, [k, v]: DirectiveParameters<this>) {\n    if (k !== this.key) {\n      // Clear the part before returning a value. The one-arg form of\n      // setCommittedValue sets the value to a sentinel which forces a\n      // commit the next render.\n      setCommittedValue(part);\n      this.key = k;\n    }\n    return v;\n  }\n}\n\n/**\n * Associates a renderable value with a unique key. When the key changes, the\n * previous DOM is removed and disposed before rendering the next value, even\n * if the value - such as a template - is the same.\n *\n * This is useful for forcing re-renders of stateful components, or working\n * with code that expects new data to generate new HTML elements, such as some\n * animation techniques.\n */\nexport const keyed = directive(Keyed);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n export type {Keyed};","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange, nothing} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\nimport {isSingleExpression, setCommittedValue} from '../directive-helpers.js';\n\nclass LiveDirective extends Directive {\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      !(\n        partInfo.type === PartType.PROPERTY ||\n        partInfo.type === PartType.ATTRIBUTE ||\n        partInfo.type === PartType.BOOLEAN_ATTRIBUTE\n      )\n    ) {\n      throw new Error(\n        'The `live` directive is not allowed on child or event bindings'\n      );\n    }\n    if (!isSingleExpression(partInfo)) {\n      throw new Error('`live` bindings can only contain a single expression');\n    }\n  }\n\n  render(value: unknown) {\n    return value;\n  }\n\n  override update(part: AttributePart, [value]: DirectiveParameters<this>) {\n    if (value === noChange || value === nothing) {\n      return value;\n    }\n    const element = part.element;\n    const name = part.name;\n\n    if (part.type === PartType.PROPERTY) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (value === (element as any)[name]) {\n        return noChange;\n      }\n    } else if (part.type === PartType.BOOLEAN_ATTRIBUTE) {\n      if (!!value === element.hasAttribute(name)) {\n        return noChange;\n      }\n    } else if (part.type === PartType.ATTRIBUTE) {\n      if (element.getAttribute(name) === String(value)) {\n        return noChange;\n      }\n    }\n    // Resets the part's value, causing its dirty-check to fail so that it\n    // always sets the value.\n    setCommittedValue(part);\n    return value;\n  }\n}\n\n/**\n * Checks binding values against live DOM values, instead of previously bound\n * values, when determining whether to update the value.\n *\n * This is useful for cases where the DOM value may change from outside of\n * lit-html, such as with a binding to an `<input>` element's `value` property,\n * a content editable elements text, or to a custom element that changes it's\n * own properties or attributes.\n *\n * In these cases if the DOM value changes, but the value set through lit-html\n * bindings hasn't, lit-html won't know to update the DOM value and will leave\n * it alone. If this is not what you want--if you want to overwrite the DOM\n * value with the bound value no matter what--use the `live()` directive:\n *\n * ```js\n * html`<input .value=${live(x)}>`\n * ```\n *\n * `live()` performs a strict equality check against the live DOM value, and if\n * the new value is equal to the live value, does nothing. This means that\n * `live()` should not be used when the binding will cause a type conversion. If\n * you use `live()` with an attribute binding, make sure that only strings are\n * passed in, or the binding will update every render.\n */\nexport const live = directive(LiveDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {LiveDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an arrray but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | undefined | null;\n}\n\nclass StyleMapDirective extends Directive {\n  _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop\n        .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n        .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set();\n      for (const name in styleInfo) {\n        this._previousStyleProperties.add(name);\n      }\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    this._previousStyleProperties!.forEach((name) => {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // Note reset using empty string (vs null) as IE11 does not always\n          // reset via null (https://developer.mozilla.org/en-US/docs/Web/API/ElementCSSInlineStyle/style#setting_styles)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = '';\n        }\n      }\n    });\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        if (name.includes('-')) {\n          style.setProperty(name, value);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the property values as CSS\n * properties. Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nclass TemplateContentDirective extends Directive {\n  private _previousTemplate?: HTMLTemplateElement;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('templateContent can only be used in child bindings');\n    }\n  }\n\n  render(template: HTMLTemplateElement) {\n    if (this._previousTemplate === template) {\n      return noChange;\n    }\n    this._previousTemplate = template;\n    return document.importNode(template.content, true);\n  }\n}\n\n/**\n * Renders the content of a template element as HTML.\n *\n * Note, the template should be developer controlled and not user controlled.\n * Rendering a user-controlled template with this directive\n * could lead to cross-site-scripting vulnerabilities.\n */\nexport const templateContent = directive(TemplateContentDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {TemplateContentDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {directive} from '../directive.js';\nimport {UnsafeHTMLDirective} from './unsafe-html.js';\n\nconst SVG_RESULT = 2;\n\nclass UnsafeSVGDirective extends UnsafeHTMLDirective {\n  static override directiveName = 'unsafeSVG';\n  static override resultType = SVG_RESULT;\n}\n\n/**\n * Renders the result as SVG, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeSVG = directive(UnsafeSVGDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {UnsafeSVGDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Part, noChange} from '../lit-html.js';\nimport {isPrimitive} from '../directive-helpers.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\nimport {Pauser, PseudoWeakRef} from './private-async-helpers.js';\n\nconst isPromise = (x: unknown) => {\n  return !isPrimitive(x) && typeof (x as {then?: unknown}).then === 'function';\n};\n// Effectively infinity, but a SMI.\nconst _infinity = 0x3fffffff;\n\nexport class UntilDirective extends AsyncDirective {\n  private __lastRenderedIndex: number = _infinity;\n  private __values: unknown[] = [];\n  private __weakThis = new PseudoWeakRef(this);\n  private __pauser = new Pauser();\n\n  render(...args: Array<unknown>) {\n    return args.find((x) => !isPromise(x)) ?? noChange;\n  }\n\n  override update(_part: Part, args: Array<unknown>) {\n    const previousValues = this.__values;\n    let previousLength = previousValues.length;\n    this.__values = args;\n\n    const weakThis = this.__weakThis;\n    const pauser = this.__pauser;\n\n    // If our initial render occurs while disconnected, ensure that the pauser\n    // and weakThis are in the disconnected state\n    if (!this.isConnected) {\n      this.disconnected();\n    }\n\n    for (let i = 0; i < args.length; i++) {\n      // If we've rendered a higher-priority value already, stop.\n      if (i > this.__lastRenderedIndex) {\n        break;\n      }\n\n      const value = args[i];\n\n      // Render non-Promise values immediately\n      if (!isPromise(value)) {\n        this.__lastRenderedIndex = i;\n        // Since a lower-priority value will never overwrite a higher-priority\n        // synchronous value, we can stop processing now.\n        return value;\n      }\n\n      // If this is a Promise we've already handled, skip it.\n      if (i < previousLength && value === previousValues[i]) {\n        continue;\n      }\n\n      // We have a Promise that we haven't seen before, so priorities may have\n      // changed. Forget what we rendered before.\n      this.__lastRenderedIndex = _infinity;\n      previousLength = 0;\n\n      // Note, the callback avoids closing over `this` so that the directive\n      // can be gc'ed before the promise resolves; instead `this` is retrieved\n      // from `weakThis`, which can break the hard reference in the closure when\n      // the directive disconnects\n      Promise.resolve(value).then(async (result: unknown) => {\n        // If we're disconnected, wait until we're (maybe) reconnected\n        // The while loop here handles the case that the connection state\n        // thrashes, causing the pauser to resume and then get re-paused\n        while (pauser.get()) {\n          await pauser.get();\n        }\n        // If the callback gets here and there is no `this`, it means that the\n        // directive has been disconnected and garbage collected and we don't\n        // need to do anything else\n        const _this = weakThis.deref();\n        if (_this !== undefined) {\n          const index = _this.__values.indexOf(value);\n          // If state.values doesn't contain the value, we've re-rendered without\n          // the value, so don't render it. Then, only render if the value is\n          // higher-priority than what's already been rendered.\n          if (index > -1 && index < _this.__lastRenderedIndex) {\n            _this.__lastRenderedIndex = index;\n            _this.setValue(result);\n          }\n        }\n      });\n    }\n\n    return noChange;\n  }\n\n  override disconnected() {\n    this.__weakThis.disconnect();\n    this.__pauser.pause();\n  }\n\n  override reconnected() {\n    this.__weakThis.reconnect(this);\n    this.__pauser.resume();\n  }\n}\n\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n * ```js\n * const content = fetch('./content.txt').then(r => r.text());\n * html`${until(content, html`<span>Loading...</span>`)}`\n * ```\n */\nexport const until = directive(UntilDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\n// export type {UntilDirective};\n","export {\n    TemplateResult,\n    HTMLTemplateResult,\n    SVGTemplateResult,\n    RenderOptions,\n    html,\n    svg,\n    render,\n    noChange,\n    nothing,\n} from 'lit-html';\n\nimport {\n    _$LH,\n    AttributePart,\n    PropertyPart,\n    BooleanAttributePart,\n    EventPart,\n    ElementPart,\n} from 'lit-html';\nexport const _Î£ = {\n    AttributePart: _$LH._AttributePart as unknown as AttributePart,\n    PropertyPart: _$LH._PropertyPart as unknown as PropertyPart,\n    BooleanAttributePart: _$LH._BooleanAttributePart as unknown as BooleanAttributePart,\n    EventPart: _$LH._EventPart as unknown as EventPart,\n    ElementPart: _$LH._ElementPart as unknown as ElementPart,\n};\n\nexport {\n    Directive,\n    DirectiveParameters,\n    Part,\n    PartInfo,\n    PartType,\n    directive,\n} from 'lit-html/directive';\n\nexport { AsyncDirective } from 'lit-html/async-directive';\nexport { Ref, createRef } from 'lit-html/directives/ref';\n\nimport { asyncAppend } from 'lit-html/directives/async-append';\nimport { asyncReplace } from 'lit-html/directives/async-replace';\nimport { cache } from 'lit-html/directives/cache';\nimport { choose } from 'lit-html/directives/choose';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { guard } from 'lit-html/directives/guard';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { join } from 'lit-html/directives/join';\nimport { keyed } from 'lit-html/directives/keyed';\nimport { live } from 'lit-html/directives/live';\nimport { map } from 'lit-html/directives/map';\nimport { range } from 'lit-html/directives/range';\nimport { ref } from 'lit-html/directives/ref';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { styleMap } from 'lit-html/directives/style-map';\nimport { templateContent } from 'lit-html/directives/template-content';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nimport { unsafeSVG } from 'lit-html/directives/unsafe-svg';\nimport { until } from 'lit-html/directives/until';\nimport { when } from 'lit-html/directives/when';\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace directives {\n    export type asyncAppend = typeof asyncAppend;\n    export type asyncReplace = typeof asyncReplace;\n    export type cache = typeof cache;\n    export type choose = typeof choose;\n    export type classMap = typeof classMap;\n    export type guard = typeof guard;\n    export type ifDefined = typeof ifDefined;\n    export type join = typeof join;\n    export type keyed = typeof keyed;\n    export type live = typeof live;\n    export type map = typeof map;\n    export type range = typeof range;\n    export type ref = typeof ref;\n    export type repeat = typeof repeat;\n    export type styleMap = typeof styleMap;\n    export type templateContent = typeof templateContent;\n    export type unsafeHTML = typeof unsafeHTML;\n    export type unsafeSVG = typeof unsafeSVG;\n    export type until = typeof until;\n    export type when = typeof when;\n}\n\nexport interface TemplateDirectives {\n    asyncAppend: directives.asyncAppend;\n    asyncReplace: directives.asyncReplace;\n    cache: directives.cache;\n    choose: directives.choose;\n    classMap: directives.classMap;\n    guard: directives.guard;\n    ifDefined: directives.ifDefined;\n    join: directives.join;\n    keyed: directives.keyed;\n    live: directives.live;\n    map: directives.map;\n    range: directives.range;\n    ref: directives.ref;\n    repeat: directives.repeat;\n    styleMap: directives.styleMap;\n    templateContent: directives.templateContent;\n    unsafeHTML: directives.unsafeHTML;\n    unsafeSVG: directives.unsafeSVG;\n    until: directives.until;\n    when: directives.when;\n}\n\nexport const directives: TemplateDirectives = {\n    asyncAppend,\n    asyncReplace,\n    cache,\n    choose,\n    classMap,\n    guard,\n    ifDefined,\n    join,\n    keyed,\n    live,\n    map,\n    range,\n    ref,\n    repeat,\n    styleMap,\n    templateContent,\n    unsafeHTML,\n    unsafeSVG,\n    until,\n    when,\n};\n\n/**\n * @en Convert from `string` to `TemplateStringsArray`. <br>\n *     This method is helper brigdge for the [[html]] or the [[svg]] are able to received plain string.\n * @ja `string` ã `TemplateStringsArray`ã«å¤æ. <br>\n *     [[html]] ã [[svg]] ãæå­åãåãä»ããããã®ããªãã¸ã¡ã½ãã\n *\n * @example <br>\n *\n * ```ts\n * import { toTemplateStringsArray as bridge } from '@cdp/extension-template';\n *\n * const raw = '<p>Hello Raw String</p>';\n * render(html(bridge(raw)), document.body);\n * ```\n *\n * @param src\n *  - `en` plain string / string array. ex) [[JST]] returned value.\n *  - `ja` ãã¬ã¼ã³æå­å / æå­åéå. ex) [[JST]] ã®æ»ãå¤ãªã©ãæ³å®\n */\nexport const toTemplateStringsArray = (src: string | string[] | TemplateStringsArray): TemplateStringsArray => {\n    const strings = Array.isArray(src) ? src : [src];\n    if (!Object.prototype.hasOwnProperty.call(strings, 'raw')) {\n        Object.defineProperty(strings, 'raw', { value: strings });\n    }\n    return strings as unknown as TemplateStringsArray;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Chooses and evaluates a template function from a list based on matching\n * the given `value` to a case.\n *\n * Cases are structured as `[caseValue, func]`. `value` is matched to\n * `caseValue` by strict equality. The first match is selected. Case values\n * can be of any type including primitives, objects, and symbols.\n *\n * This is similar to a switch statement, but as an expression and without\n * fallthrough.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${choose(this.section, [\n *       ['home', () => html`<h1>Home</h1>`],\n *       ['about', () => html`<h1>About</h1>`]\n *     ],\n *     () => html`<h1>Error</h1>`)}\n *   `;\n * }\n * ```\n */\nexport const choose = <T, V>(\n  value: T,\n  cases: Array<[T, () => V]>,\n  defaultCase?: () => V\n) => {\n  for (const c of cases) {\n    const caseValue = c[0];\n    if (caseValue === value) {\n      const fn = c[1];\n      return fn();\n    }\n  }\n  return defaultCase?.();\n};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the values in `items` interleaved with the\n * `joiner` value.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${join(items, html`<span class=\"separator\">|</span>`)}\n *   `;\n * }\n */\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: (index: number) => J\n): Iterable<I | J>;\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: J\n): Iterable<I | J>;\nexport function* join<I, J>(items: Iterable<I> | undefined, joiner: J) {\n  const isFunction = typeof joiner === 'function';\n  if (items !== undefined) {\n    let i = -1;\n    for (const value of items) {\n      if (i > -1) {\n        yield isFunction ? joiner(i) : joiner;\n      }\n      i++;\n      yield value;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the result of calling `f(value)` on each\n * value in `items`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     <ul>\n *       ${map(items, (i) => html`<li>${i}</li>`)}\n *     </ul>\n *   `;\n * }\n * ```\n */\nexport function* map<T>(\n  items: Iterable<T> | undefined,\n  f: (value: T, index: number) => unknown\n) {\n  if (items !== undefined) {\n    let i = 0;\n    for (const value of items) {\n      yield f(value, i++);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable of integers from `start` to `end` (exclusive)\n * incrementing by `step`.\n *\n * If `start` is omitted, the range starts at `0`. `step` defaults to `1`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${map(range(8), () => html`<div class=\"cell\"></div>`)}\n *   `;\n * }\n * ```\n */\nexport function range(end: number): Iterable<number>;\nexport function range(\n  start: number,\n  end: number,\n  step?: number\n): Iterable<number>;\nexport function* range(startOrEnd: number, end?: number, step = 1) {\n  const start = end === undefined ? 0 : startOrEnd;\n  end ??= startOrEnd;\n  for (let i = start; step > 0 ? i < end : end < i; i += step) {\n    yield i;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<T, F>(\n  condition: true,\n  trueCase: () => T,\n  falseCase?: () => F\n): T;\nexport function when<T, F = undefined>(\n  condition: false,\n  trueCase: () => T,\n  falseCase?: () => F\n): F;\nexport function when<T, F = undefined>(\n  condition: unknown,\n  trueCase: () => T,\n  falseCase?: () => F\n): T | F;\nexport function when(\n  condition: unknown,\n  trueCase: () => unknown,\n  falseCase?: () => unknown\n): unknown {\n  return condition ? trueCase() : falseCase?.();\n}\n","/** \r\n * @param {object} config = {\r\n *  html: lit-html.html,\r\n *  delimiter: { start: '{{', end: '}}' },\r\n *  transformers: { // note that transformVariable is not here. It gets applied when no transformer.test has passed\r\n *    name: {\r\n *      test: (str, config) => bool,\r\n *      transform: (str, config) => ({\r\n *        remainingTmplStr: str,\r\n *        insertionPoint: ctx => lit-html.TemplateResult | undefined, // if undefined remainingTmplStr will be merged with last static part \r\n *      }),\r\n *    },\r\n *  },\r\n *  transformVariable, \r\n * }\r\n * @returns {function} strTemplate => ctx => lit-html.TemplateResult\r\n */\r\nexport default config => strTemplate => transform(strTemplate, config)\r\n\r\nexport function transform(tmpl2Parse, config) {\r\n  const staticParts = []\r\n  const insertionPoints = []\r\n\r\n  let remainingTmplStr = tmpl2Parse\r\n  let startIndexOfIP = remainingTmplStr.indexOf(config.delimiter.start)\r\n  while (startIndexOfIP >= 0) {\r\n    if (remainingTmplStr.indexOf(config.delimiter.end, startIndexOfIP) < 0)\r\n      throw new Error(`missing end delimiter at: '${remainingTmplStr}'`)\r\n\r\n    staticParts.push(remainingTmplStr.substring(0, startIndexOfIP))\r\n\r\n    const iPTransformResult = transformIP(\r\n      remainingTmplStr.substring(startIndexOfIP + config.delimiter.start.length),\r\n      config\r\n    )\r\n\r\n    if (iPTransformResult.insertionPoint) {\r\n      remainingTmplStr = iPTransformResult.remainingTmplStr\r\n      insertionPoints.push(iPTransformResult.insertionPoint)\r\n      startIndexOfIP = remainingTmplStr.indexOf(config.delimiter.start)\r\n    } else { // e.g. comment or customDelimeter\r\n      const lastStaticPart = staticParts.pop()\r\n      remainingTmplStr = lastStaticPart + iPTransformResult.remainingTmplStr\r\n      startIndexOfIP = remainingTmplStr.indexOf(config.delimiter.start, lastStaticPart.length)\r\n    }\r\n  }\r\n\r\n  staticParts.push(remainingTmplStr)\r\n\r\n  return ctx =>\r\n    config.html(staticParts, ...insertionPoints.map(iP => iP(ctx)))\r\n}\r\n\r\nfunction transformIP(remainingTmplStr, config) {\r\n  const transformer = Object.values(config.transformers).find(t => t.test(remainingTmplStr, config))\r\n  const transformFunction = transformer\r\n    ? transformer.transform\r\n    : config.transformVariable\r\n  return transformFunction(remainingTmplStr, config)\r\n}","export function ctx2Value(ctx, key) {\r\n  if (key === '.')\r\n    return ctx\r\n\r\n  let result = ctx\r\n  for (let k of key.split('.')) {\r\n    if (!result.hasOwnProperty(k))\r\n      return ''\r\n\r\n    result = result[k]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function ctx2MustacheString(ctx, key) {\r\n  return mustacheStringyfy(ctx2Value(ctx, key))\r\n}\r\n\r\nfunction mustacheStringyfy(value) {\r\n  if (value === undefined || value === null)\r\n    return ''\r\n\r\n  return '' + value\r\n}","import { ctx2MustacheString } from '../helper/dataHelper.js'\r\n\r\nexport default (remainingTmplStr, { delimiter }) => {\r\n  const indexOfEndDelimiter = remainingTmplStr.indexOf(delimiter.end)\r\n  const dataKey = remainingTmplStr.substring(0, indexOfEndDelimiter)\r\n  return {\r\n    remainingTmplStr: remainingTmplStr.substring(indexOfEndDelimiter + delimiter.end.length),\r\n    insertionPoint: ctx => ctx2MustacheString(ctx, dataKey)\r\n  }\r\n}","import { ctx2MustacheString } from '../helper/dataHelper.js'\r\n\r\n/** Note, this is unsafe to use, because the rendered output could be any JavaScript! */\r\nexport default unsafeHTML => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '{',\r\n  transform: (remainingTmplStr, { delimiter }) => {\r\n    const indexOfEndDelimiter = remainingTmplStr.indexOf('}' + delimiter.end)\r\n    if (indexOfEndDelimiter < 0)\r\n      throw new Error(`missing end delimiter at: '${delimiter.start}${remainingTmplStr}'`)\r\n  \r\n    const dataKey = remainingTmplStr.substring(1, indexOfEndDelimiter)\r\n    return {\r\n      remainingTmplStr: remainingTmplStr.substring(indexOfEndDelimiter + 1 + delimiter.end.length),\r\n      insertionPoint: ctx => unsafeHTML(ctx2MustacheString(ctx, dataKey)),\r\n    }\r\n  }\r\n})","export function isMustacheFalsy(value) {\r\n  return [null, undefined, false, 0, NaN, '']\r\n    .some(falsy => falsy === value)\r\n    || (value.length && value.length === 0)\r\n}","export function parseSection(tmplStr, delimiter) {\r\n  const indexOfStartTagEnd = tmplStr.indexOf(delimiter.end)\r\n  const dataKey = tmplStr.substring(1, indexOfStartTagEnd)\r\n  const endTag = `${delimiter.start}/${dataKey}${delimiter.end}`\r\n  const indexOfEndTagStart = tmplStr.indexOf(endTag)\r\n  if (indexOfEndTagStart < 0)\r\n    throw new Error(`missing end delimiter at: '${delimiter.start}${tmplStr}'`)\r\n  \r\n  return {\r\n    dataKey,\r\n    innerTmpl: tmplStr.substring(indexOfStartTagEnd + delimiter.start.length, indexOfEndTagStart),\r\n    remainingTmplStr: tmplStr.substring(indexOfEndTagStart + endTag.length),\r\n  }\r\n}","import { transform } from '../lit-transformer.js'\r\nimport { ctx2Value } from '../helper/dataHelper.js'\r\nimport { isMustacheFalsy } from '../helper/isMustacheFalsy.js'\r\nimport { parseSection } from '../helper/sectionHelper.js'\r\n\r\n/** Note, unlike within mustache functions as data values are not supported out of the box */\r\nexport default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '#',\r\n  transform: (remainingTmplStr, config) => {\r\n    const parsedSection = parseSection(remainingTmplStr, config.delimiter)\r\n    const transformedInnerTmpl = transform(parsedSection.innerTmpl, config)\r\n    \r\n    return {\r\n      remainingTmplStr: parsedSection.remainingTmplStr,\r\n      insertionPoint: ctx => {\r\n        const sectionData = ctx2Value(ctx, parsedSection.dataKey)\r\n        \r\n        if (isMustacheFalsy(sectionData))\r\n          return '';\r\n\r\n        return sectionData.map\r\n          ? sectionData.map(innerCtx => transformedInnerTmpl(innerCtx))\r\n          : transformedInnerTmpl(ctx)\r\n      }\r\n    }\r\n  }\r\n})","import { ctx2Value } from '../helper/dataHelper.js'\r\nimport { isMustacheFalsy } from '../helper/isMustacheFalsy.js'\r\nimport { parseSection } from '../helper/sectionHelper.js'\r\n\r\nexport default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '^',\r\n  transform: (remainingTmplStr, { delimiter }) => {\r\n    const parsedSection = parseSection(remainingTmplStr, delimiter)\r\n\r\n    return {\r\n      remainingTmplStr: parsedSection.remainingTmplStr,\r\n      insertionPoint: ctx =>\r\n        isMustacheFalsy(ctx2Value(ctx, parsedSection.dataKey))\r\n          ? parsedSection.innerTmpl\r\n          : '',\r\n    }\r\n  }\r\n})","export default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '!',\r\n  transform: (remainingTmplStr, { delimiter }) => ({\r\n    remainingTmplStr: remainingTmplStr.substring(remainingTmplStr.indexOf(delimiter.end) + delimiter.end.length),\r\n    insertionPoint: undefined,\r\n  })\r\n})","export default () => ({\r\n  test: remainingTmplStr => remainingTmplStr[0] === '=',\r\n  transform: (remainingTmplStr, config) => {\r\n    const originalEndDeliLength = config.delimiter.end.length\r\n    const indexOfEndTag = remainingTmplStr.indexOf('=' + config.delimiter.end)\r\n    if (indexOfEndTag < 0 )\r\n      throw new Error(`missing end delimiter at: '${remainingTmplStr}'`)\r\n\r\n    const [ newStartDeli, newEndDeli ] = remainingTmplStr.substring(1, indexOfEndTag).split(' ')\r\n\r\n    config.delimiter.start = newStartDeli\r\n    config.delimiter.end = newEndDeli\r\n    \r\n    return {\r\n      remainingTmplStr: remainingTmplStr.substring(indexOfEndTag + 1 + originalEndDeliLength),\r\n      insertionPoint: undefined,  \r\n    }\r\n  }\r\n})","import { toTemplateStringsArray } from '@cdp/extension-template';\nimport type { TemplateBridgeEndine, TemplateTransformer } from '@bridge/interfaces';\nimport type {\n    MustacheTransformer,\n    TemplateTag,\n    TransformDirective,\n    TransformTester,\n    TransformExecutor,\n    TransformeContext,\n    TransformConfig,\n} from 'lit-transformer/src/interfaces';\n\nimport createDefault from 'lit-transformer';\nimport createCustom from 'lit-transformer/src/lit-transformer';\n\nimport variable from 'lit-transformer/src/transformers/variableTransformer';\nimport unsafeVariable from 'lit-transformer/src/transformers/unsafeVariable';\nimport section from 'lit-transformer/src/transformers/section';\nimport invertedSection from 'lit-transformer/src/transformers/invertedSection';\nimport comment from 'lit-transformer/src/transformers/comment';\nimport customDelimiter from 'lit-transformer/src/transformers/customDelimiter';\n\nconst xform = (mustache: MustacheTransformer): TemplateTransformer => {\n    return (template: HTMLTemplateElement | string): TemplateBridgeEndine => {\n        return mustache(template instanceof HTMLTemplateElement ? template.innerHTML : template);\n    };\n};\n\n/*\n * lit-html v2.1.0+\n * TemplateStringsArray ãå³å¯ã«ãã§ãã¯ããããã«ãªã£ããã patch ããã¦ã\n * https://github.com/lit/lit/pull/2307\n *\n * å°æ¥ `Array.isTemplateObject()` ãä½¿ç¨ãããå ´å, æ¬å¯¾å¿ãè¦ç´ãå¿è¦ãã\n * https://tc39.es/proposal-array-is-template-object/\n */\nconst patch = (html: TemplateTag): TemplateTag => {\n    return (template: TemplateStringsArray, ...values: unknown[]) => {\n        return html(toTemplateStringsArray(template), ...values);\n    };\n};\n\nfunction createMustacheTransformer(html: TemplateTag, unsafeHTML: TransformDirective): TemplateTransformer;\nfunction createMustacheTransformer(config: TransformConfig): TemplateTransformer;\nfunction createMustacheTransformer(arg1: unknown, arg2?: unknown): TemplateTransformer {\n    if ('function' === typeof arg1) {\n        return xform(createDefault(patch(arg1 as TemplateTag), arg2 as TransformDirective));\n    } else {\n        const { html } = arg1 as { html: TemplateTag; };\n        return xform(\n            createCustom(Object.assign({\n                delimiter: { start: '{{', end: '}}' },\n                transformers: {},\n            }, arg1, { html: patch(html) }) as TransformConfig)\n        );\n    }\n}\n\nconst transformer: {\n    variable: TransformExecutor;\n    unsafeVariable: (unsafeHTML: TransformDirective) => TransformeContext;\n    section: () => TransformeContext;\n    invertedSection: () => TransformeContext;\n    comment: () => TransformeContext;\n    customDelimiter: () => TransformeContext;\n} = {\n    variable,\n    unsafeVariable,\n    section,\n    invertedSection,\n    comment,\n    customDelimiter,\n};\n\nexport {\n    TemplateTag,\n    TransformDirective,\n    TemplateTransformer,\n    TransformTester,\n    TransformExecutor,\n    TransformeContext,\n    TransformConfig,\n    createMustacheTransformer,\n    transformer,\n};\n","import createTransform from './lit-transformer.js'\r\nimport transformVariable from './transformers/variableTransformer.js'\r\nimport unsafeVariableTransformer from './transformers/unsafeVariable.js'\r\nimport sectionTransformer from './transformers/section.js'\r\nimport invertedSectionTransformer from './transformers/invertedSection.js'\r\nimport commentTransformer from './transformers/comment.js'\r\nimport customDelimiterTransformer from './transformers/customDelimiter.js'\r\n\r\nexport default (html, unsafeHTML) =>\r\n  createTransform({\r\n    html,\r\n    delimiter: { start: '{{', end: '}}' },\r\n    transformVariable,\r\n    transformers: {\r\n      unsafeVariable: unsafeVariableTransformer(unsafeHTML),\r\n      section: sectionTransformer(),\r\n      invertedSection: invertedSectionTransformer(),\r\n      comment: commentTransformer(),\r\n      customDelimiterTransformer: customDelimiterTransformer(),\r\n    },\r\n  })",null,null,null,null,null,"import type {\n    TemplateBridgeArg,\n    TemplateTransformer,\n} from '@bridge/interfaces';\nimport {\n    TemplateHandler,\n    TemplateHandlers,\n    TemplateRenderers,\n    EvaluateTemplateResult,\n    prepareTemplate,\n    evaluateTemplate,\n} from 'stampino';\n\nexport interface CreateStampinoTemplateOptions {\n    handlers?: TemplateHandlers;\n    renderers?: TemplateRenderers;\n    superTemplate?: HTMLTemplateElement | undefined;\n}\n\nfunction ensure(template: HTMLTemplateElement | string): HTMLTemplateElement {\n    if (template instanceof HTMLTemplateElement) {\n        return template;\n    } else if ('string' === typeof template) {\n        const element = document.createElement('template');\n        element.innerHTML = template;\n        return element;\n    } else {\n        throw new TypeError(`Type of template is not a valid. [typeof: ${typeof template}]`);\n    }\n}\n\nfunction createStampinoTransformer(options?: CreateStampinoTemplateOptions): TemplateTransformer {\n    const { handlers, renderers, superTemplate } = options || {};\n    return (template: HTMLTemplateElement | string) => {\n        return prepareTemplate(ensure(template), handlers, renderers, superTemplate);\n    };\n}\n\nexport {\n    TemplateBridgeArg,\n    TemplateHandler,\n    TemplateHandlers,\n    TemplateRenderers,\n    EvaluateTemplateResult,\n    createStampinoTransformer,\n    prepareTemplate,\n    evaluateTemplate,\n};\n","import {\n    TemplateResult,\n    SVGTemplateResult,\n    html,\n    directives,\n} from '@cdp/extension-template';\nimport {\n    TemplateTransformer,\n    createMustacheTransformer,\n    createStampinoTransformer,\n} from '@cdp/extension-template-bridge';\nimport { PlainObject } from '@cdp/core-utils';\n\n/** @internal builtin transformers (default: mustache). */\nconst _builtins = {\n    mustache: createMustacheTransformer(html, directives.unsafeHTML),\n    stampino: createStampinoTransformer(),\n};\n\n/**\n * @en Compiled JavaScript template interface\n * @ja ã³ã³ãã¤ã«æ¸ã¿ãã³ãã¬ã¼ãæ ¼ç´ã¤ã³ã¿ã¼ãã§ã¤ã¹\n */\nexport interface CompiledTemplate {\n    /**\n     * @en Source template string\n     * @ja ãã³ãã¬ã¼ãæå­å\n     */\n    source: string;\n\n    /**\n     * @en Get [[TemplateResult]] that applied given parameter(s).\n     * @ja ãã©ã¡ã¼ã¿ãé©ç¨ã [[TemplateResult]] ã¸å¤æ\n     *\n     * @param view\n     *  - `en` template parameters for source.\n     *  - `ja` ãã³ãã¬ã¼ããã©ã¡ã¼ã¿\n     */\n    (view?: PlainObject): TemplateResult | SVGTemplateResult;\n}\n\n/**\n * @en [[TemplateBridge]] compile options\n * @ja [[TemplateBridge]] ã³ã³ãã¤ã«ãªãã·ã§ã³\n */\nexport interface TemplateBridgeCompileOptions {\n    transformer?: TemplateTransformer;\n}\n\n/**\n * @en Template bridge for other template engine source.\n * @ja ä»ã®ãã³ãã¬ã¼ãã¨ã³ã¸ã³ã®å¥åãå¤æãããã³ãã¬ã¼ãããªãã¸ã¯ã©ã¹\n */\nexport class TemplateBridge {\n    /** @internal */\n    private static _transformer = _builtins.mustache;\n\n///////////////////////////////////////////////////////////////////////\n// public static methods:\n\n    /**\n     * @en Get [[CompiledTemplate]] from template source.\n     * @ja ãã³ãã¬ã¼ãæå­åãã [[CompiledTemplate]] ãåå¾\n     *\n     * @param template\n     *  - `en` template source string / template element\n     *  - `ja` ãã³ãã¬ã¼ãæå­å / ãã³ãã¬ã¼ãã¨ã¬ã¡ã³ã\n     * @param options\n     *  - `en` compile options\n     *  - `ja` ã³ã³ãã¤ã«ãªãã·ã§ã³\n     */\n    public static compile(template: HTMLTemplateElement | string, options?: TemplateBridgeCompileOptions): CompiledTemplate {\n        const { transformer } = Object.assign({ transformer: TemplateBridge._transformer }, options);\n        const engine = transformer(template);\n        const jst = (view?: PlainObject): TemplateResult | SVGTemplateResult => {\n            return engine(view);\n        };\n        jst.source = template instanceof HTMLTemplateElement ? template.innerHTML : template;\n        return jst;\n    }\n\n    /**\n     * @en Update default transformer object.\n     * @ja æ¢å®ã®å¤æãªãã¸ã§ã¯ãã®æ´æ°\n     *\n     * @param newTransformer\n     *  - `en` new transformer object.\n     *  - `ja` æ°ããå¤æãªãã¸ã§ã¯ããæå®.\n     * @returns\n     *  - `en` old transformer object.\n     *  - `ja` ä»¥åã®å¤æãªãã¸ã§ã¯ããè¿å´\n     */\n    public static setTransformer(newTransformer: TemplateTransformer): TemplateTransformer {\n        const oldTransformer = TemplateBridge._transformer;\n        TemplateBridge._transformer = newTransformer;\n        return oldTransformer;\n    }\n\n    /**\n     * @en Get built-in transformer name list.\n     * @ja çµã¿è¾¼ã¿ã®å¤æãªãã¸ã§ã¯ãã®åç§°ä¸è¦§ãåå¾\n     *\n     * @returns\n     *  - `en` name list.\n     *  - `ja` åç§°ä¸è¦§ãè¿å´\n     */\n    static get builtins(): string[] {\n        return Object.keys(_builtins);\n    }\n\n    /**\n     * @en Get built-in transformer object.\n     * @ja çµã¿è¾¼ã¿ã®å¤æãªãã¸ã§ã¯ããåå¾\n     *\n     * @param name\n     *  - `en` transformer object name.\n     *  - `ja` å¤æãªãã¸ã§ã¯ãã®ååãæå®.\n     * @returns\n     *  - `en` transformer object.\n     *  - `ja` å¤æãªãã¸ã§ã¯ããè¿å´\n     */\n    public static getBuitinTransformer(name: string): TemplateTransformer | undefined {\n        return _builtins[name];\n    }\n}\n","/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\" } = options;\n  const defaultPattern = `[^${escapeString(options.delimiter || \"/#?\")}]+?`;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {}\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {}\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {}\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += `((?:${token.pattern})${token.modifier})`;\n          } else {\n            route += `(${token.pattern})${token.modifier}`;\n          }\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n */\n\nimport {\n    ParseOptions as p2rParseOptions,\n    TokensToFunctionOptions as p2rTokensToFunctionOptions,\n    PathFunction as p2rPathFunction,\n    RegexpToFunctionOptions as p2rRegexpToFunctionOptions,\n    MatchResult as p2rMatchResult,\n    Match as p2rMatch,\n    MatchFunction as p2rMatchFunction,\n    Key as p2rKey,\n    Token as p2rToken,\n    TokensToRegexpOptions as p2rTokensToRegexpOptions,\n    Path as p2rPath,\n    parse,\n    compile,\n    tokensToFunction,\n    match,\n    regexpToFunction,\n    tokensToRegexp,\n    pathToRegexp,\n} from 'path-to-regexp';\n\ndeclare namespace path2regexp {\n    export type ParseOptions = p2rParseOptions;\n    export type TokensToFunctionOptions = p2rTokensToFunctionOptions;\n    export type PathFunction = p2rPathFunction;\n    export type RegexpToFunctionOptions = p2rRegexpToFunctionOptions;\n    export type MatchResult = p2rMatchResult;\n    export type Match = p2rMatch;\n    export type MatchFunction = p2rMatchFunction;\n    export type Key = p2rKey;\n    export type Token = p2rToken;\n    export type TokensToRegexpOptions = p2rTokensToRegexpOptions;\n    export type Path = p2rPath;\n    export type parse = typeof parse;\n    export type compile = typeof compile;\n    export type tokensToFunction = typeof tokensToFunction;\n    export type match = typeof match;\n    export type regexpToFunction = typeof regexpToFunction;\n    export type tokensToRegexp = typeof tokensToRegexp;\n    export type pathToRegexp = typeof pathToRegexp;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst path2regexp = {\n    parse,\n    compile,\n    tokensToFunction,\n    match,\n    regexpToFunction,\n    tokensToRegexp,\n    pathToRegexp,\n};\n\nexport { path2regexp };\n","/* eslint-disable\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/restrict-plus-operands,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        ROUTER = CDP_KNOWN_MODULE.MVC * LOCAL_CODE_RANGE_GUIDE.FUNCTION + 15,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja æ¡å¼µã¨ã©ã¼ã³ã¼ãå®ç¾©\n     */\n    export enum RESULT_CODE {\n        MVC_ROUTER_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_MVC_ROUTER_ELEMENT_NOT_FOUND        = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 1, 'router element not found.'),\n        ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 2, 'Route cannot be resolved.'),\n        ERROR_MVC_ROUTER_NAVIGATE_FAILED          = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 3, 'Route navigate failed.'),\n        ERROR_MVC_ROUTER_INVALID_SUBFLOW_BASE_URL = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.ROUTER + 4, 'Invalid sub-flow base url.'),\n    }\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const window = safe(globalThis.window);\n","import {\n    Writable,\n    PlainObject,\n    at,\n    sort,\n    noop,\n} from '@cdp/core-utils';\nimport { Deferred } from '@cdp/promise';\nimport { HistoryState, HistoryDirectReturnType } from './interfaces';\n\n/** @internal normalzie id string */\nexport const normalizeId = (src: string): string => {\n    // remove head of \"#\", \"/\", \"#/\" and tail of \"/\"\n    return src.replace(/^(#\\/)|^[#/]|\\s+$/, '').replace(/^\\s+$|(\\/$)/, '');\n};\n\n/** @internal create stack */\nexport const createData = <T = PlainObject>(id: string, state?: T): HistoryState<T> => {\n    return Object.assign({ '@id': normalizeId(id) }, state);\n};\n\n/** @internal create uncancellable deferred */\nexport const createUncancellableDeferred = (warn: string): Deferred => {\n    const uncancellable = new Deferred() as Writable<Deferred>;\n    uncancellable.reject = () => {\n        console.warn(warn);\n        uncancellable.resolve();\n    };\n    return uncancellable;\n};\n\n//__________________________________________________________________________________________________//\n\n/**\n * @internal stack management common class\n */\nexport class HistoryStack<T = PlainObject> {\n    private _stack: HistoryState<T>[] = [];\n    private _index = 0;\n\n    /** history stack length */\n    get length(): number {\n        return this._stack.length;\n    }\n\n    /** current state */\n    get state(): HistoryState<T> {\n        return this.distance(0);\n    }\n\n    /** current id */\n    get id(): string {\n        return this.state['@id'];\n    }\n\n    /** current index */\n    get index(): number {\n        return this._index;\n    }\n\n    /** current index */\n    set index(idx: number) {\n        this._index = Math.trunc(idx);\n    }\n\n    /** stack pool */\n    get array(): readonly HistoryState<T>[] {\n        return this._stack.slice();\n    }\n\n    /** get data by index. */\n    public at(index: number): HistoryState<T> {\n        return at(this._stack, index);\n    }\n\n    /** clear forward history from current index. */\n    public clearForward(): void {\n        this._stack = this._stack.slice(0, this._index + 1);\n    }\n\n    /** return closet index by ID. */\n    public closest(id: string): number | undefined {\n        id = normalizeId(id);\n        const { _index: base } = this;\n        const candidates = this._stack\n            .map((s, index) => { return { index, distance: Math.abs(base - index), ...s }; })\n            .filter(s => s['@id'] === id)\n        ;\n        sort(candidates, (l, r) => (l.distance > r.distance ? 1 : -1), true);\n        return candidates[0]?.index;\n    }\n\n    /** return closet stack information by to ID and from ID. */\n    public direct(toId: string, fromId?: string): HistoryDirectReturnType<T> {\n        const toIndex   = this.closest(toId);\n        const fromIndex = null == fromId ? this._index : this.closest(fromId);\n        if (null == fromIndex || null == toIndex) {\n            return { direction: 'missing' };\n        } else {\n            const delta = toIndex - fromIndex;\n            const direction = 0 === delta\n                ? 'none'\n                : delta < 0 ? 'back' : 'forward';\n            return { direction, index: toIndex, state: this._stack[toIndex] };\n        }\n    }\n\n    /** get active data from current index origin */\n    public distance(delta: number): HistoryState<T> {\n        const pos = this._index + delta;\n        if (pos < 0) {\n            throw new RangeError(`invalid array index. [length: ${this.length}, given: ${pos}]`);\n        }\n        return this.at(pos);\n    }\n\n    /** noop stack */\n    public noopStack = noop; // eslint-disable-line @typescript-eslint/explicit-member-accessibility\n\n    /** push stack */\n    public pushStack(data: HistoryState<T>): void {\n        this._stack[++this._index] = data;\n    }\n\n    /** replace stack */\n    public replaceStack(data: HistoryState<T>): void {\n        this._stack[this._index] = data;\n    }\n\n    /** seek stack */\n    public seekStack(data: HistoryState<T>): void {\n        const index = this.closest(data['@id']);\n        if (null == index) {\n            this.pushStack(data);\n        } else {\n            this._index = index;\n        }\n    }\n\n    /** dispose object */\n    public dispose(): void {\n        this._stack.length = 0;\n        this._index = NaN;\n    }\n}\n","import {\n    PlainObject,\n    isObject,\n    noop,\n    $cdp,\n} from '@cdp/core-utils';\nimport { Silenceable, EventPublisher } from '@cdp/events';\nimport { Deferred, CancelToken } from '@cdp/promise';\nimport { toUrl, webRoot } from '@cdp/web-utils';\nimport { window } from '../ssr';\nimport {\n    IHistory,\n    HistoryEvent,\n    HistoryState,\n    HistorySetStateOptions,\n    HistoryDirectReturnType,\n} from './interfaces';\nimport {\n    normalizeId,\n    createData,\n    createUncancellableDeferred,\n    HistoryStack,\n} from './internal';\n\n/** @internal dispatch additional information */\ninterface DispatchInfo<T> {\n    df: Deferred;\n    newId: string;\n    oldId: string;\n    postproc: 'noop' | 'push' | 'replace' | 'seek';\n    nextState?: HistoryState<T>;\n    prevState?: HistoryState<T>;\n}\n\n/** @internal constant */\nconst enum Const {\n    HASH_PREFIX = '#/',\n}\n\n//__________________________________________________________________________________________________//\n\n/** @internal remove url path section */\nconst toHash = (url: string): string => {\n    const id = /#.*$/.exec(url)?.[0];\n    return id ? normalizeId(id) : url;\n};\n\n/** @internal remove url path section */\nconst toPath = (url: string): string => {\n    const id = url.substring(webRoot.length);\n    return id ? normalizeId(id) : url;\n};\n\n/** @internal */\nconst setDispatchInfo = <T>(state: T, additional: DispatchInfo<T>): T => {\n    state[$cdp] = additional;\n    return state;\n};\n\n/** @internal */\nconst parseDispatchInfo = <T>(state: T): [T, DispatchInfo<T>?] => {\n    if (isObject(state) && state[$cdp]) {\n        const additional = state[$cdp];\n        delete state[$cdp];\n        return [state, additional];\n    } else {\n        return [state];\n    }\n};\n\n/** @internal instance signature */\nconst $signature = Symbol('SessionHistory#signature');\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Browser session history management class.\n * @ja ãã©ã¦ã¶ã»ãã·ã§ã³å±¥æ­´ç®¡çã¯ã©ã¹\n */\nclass SessionHistory<T = PlainObject> extends EventPublisher<HistoryEvent<T>> implements IHistory<T> {\n    private readonly _window: Window;\n    private readonly _mode: 'hash' | 'history';\n    private readonly _popStateHandler: (ev: PopStateEvent) => void;\n    private readonly _stack = new HistoryStack<T>();\n    private _dfGo?: Deferred;\n\n    /**\n     * constructor\n     */\n    constructor(windowContxt: Window, mode: 'hash' | 'history', id: string, state?: T) {\n        super();\n        this[$signature] = true;\n        this._window = windowContxt;\n        this._mode = mode;\n\n        this._popStateHandler = this.onPopState.bind(this);\n        this._window.addEventListener('popstate', this._popStateHandler);\n\n        // initialize\n        void this.replace(id, state, { silent: true });\n    }\n\n    /**\n     * dispose object\n     */\n    dispose(): void {\n        this._window.removeEventListener('popstate', this._popStateHandler);\n        this._stack.dispose();\n        this.off();\n        delete this[$signature];\n    }\n\n    /**\n     * reset history\n     */\n    async reset(options?: Silenceable): Promise<void> {\n        if (Number.isNaN(this.index) || this._stack.length <= 1) {\n            return;\n        }\n\n        const { silent } = options || {};\n        const { location } = this._window;\n        const prevState = this._stack.state;\n        const oldURL = location.href;\n\n        this.setIndex(0);\n        this.clearForward();\n        await this.backToSesssionOrigin();\n\n        const newURL = location.href;\n\n        if (!silent) {\n            const additional: DispatchInfo<T> = {\n                df: createUncancellableDeferred('SessionHistory#reset() is uncancellable method.'),\n                newId: this.toId(newURL),\n                oldId: this.toId(oldURL),\n                postproc: 'noop',\n                prevState,\n            };\n            await this.dispatchChangeInfo(this.state, additional);\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IHistory<T>\n\n    /** history stack length */\n    get length(): number {\n        return this._stack.length;\n    }\n\n    /** current state */\n    get state(): HistoryState<T> {\n        return this._stack.state;\n    }\n\n    /** current id */\n    get id(): string {\n        return this._stack.id;\n    }\n\n    /** current index */\n    get index(): number {\n        return this._stack.index;\n    }\n\n    /** stack pool */\n    get stack(): readonly HistoryState<T>[] {\n        return this._stack.array;\n    }\n\n    /** get data by index. */\n    at(index: number): HistoryState<T> {\n        return this._stack.at(index);\n    }\n\n    /** To move backward through history. */\n    back(): Promise<number> {\n        return this.go(-1);\n    }\n\n    /** To move forward through history. */\n    forward(): Promise<number> {\n        return this.go(1);\n    }\n\n    /** To move a specific point in history. */\n    async go(delta?: number): Promise<number> {\n        // if already called, no reaction.\n        if (this._dfGo) {\n            return this.index;\n        }\n\n        // if given 0, just reload.\n        if (!delta) {\n            await this.triggerRefresh(this.state, undefined);\n            return this.index;\n        }\n\n        const oldIndex = this.index;\n\n        try {\n            this._dfGo = new Deferred();\n            this._stack.distance(delta);\n            this._window.history.go(delta);\n            await this._dfGo;\n        } catch (e) {\n            console.warn(e);\n            this.setIndex(oldIndex);\n        } finally {\n            this._dfGo = undefined;\n        }\n\n        return this.index;\n    }\n\n    /**\n     * @en Register new history.\n     * @ja æ°è¦å±¥æ­´ã®ç»é²\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` ã¹ã¿ãã¯IDãæå®\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` ã¹ã¿ãã¯ ã«ç´ã¥ãç¶æãªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` State management options\n     *  - `ja` ç¶æç®¡çç¨ãªãã·ã§ã³ãæå®\n     */\n    push(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('push', id, state, options || {});\n    }\n\n    /**\n     * @en Replace current history.\n     * @ja ç¾å¨ã®å±¥æ­´ã®ç½®æ\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` ã¹ã¿ãã¯IDãæå®\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` ã¹ã¿ãã¯ ã«ç´ã¥ãç¶æãªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` State management options\n     *  - `ja` ç¶æç®¡çç¨ãªãã·ã§ã³ãæå®\n     */\n    replace(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('replace', id, state, options || {});\n    }\n\n    /**\n     * @en Clear forward history from current index.\n     * @ja ç¾å¨ã®å±¥æ­´ã®ã¤ã³ããã¯ã¹ããåæ¹ã®å±¥æ­´ãåé¤\n     */\n    clearForward(): void {\n        this._stack.clearForward();\n    }\n\n    /**\n     * @en Return closet index by ID.\n     * @ja æå®ããã ID ããæãè¿ã index ãè¿å´\n     */\n    closest(id: string): number | undefined {\n        return this._stack.closest(id);\n    }\n\n    /**\n     * @en Return destination stack information by `start` and `end` ID.\n     * @ja èµ·ç¹, çµç¹ã® ID ããçµç¹ã®ã¹ã¿ãã¯æå ±ãè¿å´\n     */\n    direct(toId: string, fromId?: string): HistoryDirectReturnType<T> {\n        return this._stack.direct(toId, fromId as string);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    /** @internal set index */\n    private setIndex(idx: number): void {\n        this._stack.index = idx;\n    }\n\n    /** @internal convert to ID */\n    private toId(src: string): string {\n        return 'hash' === this._mode ? toHash(src) : toPath(src);\n    }\n\n    /** @internal convert to URL */\n    private toUrl(id: string): string {\n        return id ? (('hash' === this._mode) ? `${Const.HASH_PREFIX}${id}` : toUrl(id)) : '';\n    }\n\n    /** @internal trigger event `refresh` */\n    private async triggerRefresh(newState: HistoryState<T>, oldState: HistoryState<T> | undefined): Promise<void> {\n        const promises: Promise<unknown>[] = [];\n        this.publish('refresh', newState, oldState, promises);\n        await Promise.all(promises);\n    }\n\n    /** @internal update */\n    private async updateState(method: 'push' | 'replace', id: string, state: T | undefined, options: HistorySetStateOptions): Promise<number> {\n        const { silent, cancel } = options;\n        const { location, history } = this._window;\n\n        const data = createData(id, state);\n        id = data['@id'];\n        if ('replace' === method && 0 === this.index) {\n            data['@origin'] = true;\n        }\n\n        const oldURL = location.href;\n        history[`${method}State`](data, '', this.toUrl(id));\n        const newURL = location.href;\n\n        if (!silent) {\n            const additional: DispatchInfo<T> = {\n                df: new Deferred(cancel),\n                newId: this.toId(newURL),\n                oldId: this.toId(oldURL),\n                postproc: method,\n                nextState: data,\n            };\n            await this.dispatchChangeInfo(data, additional);\n        } else {\n            this._stack[`${method}Stack`](data);\n        }\n\n        return this.index;\n    }\n\n    /** @internal dispatch `popstate` events */\n    private async dispatchChangeInfo(newState: T, additional: DispatchInfo<T>): Promise<void> {\n        const state = setDispatchInfo(newState, additional);\n        this._window.dispatchEvent(new PopStateEvent('popstate', { state }));\n        await additional.df;\n    }\n\n    /** @internal silent popstate event listner scope */\n    private async suppressEventListenerScope(executor: (wait: () => Promise<unknown>) => Promise<void>): Promise<void> {\n        try {\n            this._window.removeEventListener('popstate', this._popStateHandler);\n            const waitPopState = (): Promise<unknown> => {\n                return new Promise(resolve => {\n                    this._window.addEventListener('popstate', (ev: PopStateEvent) => {\n                        resolve(ev.state);\n                    });\n                });\n            };\n            await executor(waitPopState);\n        } finally {\n            this._window.addEventListener('popstate', this._popStateHandler);\n        }\n    }\n\n    /** @internal rollback history */\n    private async rollbackHistory(method: string, newId: string): Promise<void> {\n        const { history } = this._window;\n        switch (method) {\n            case 'replace':\n                history.replaceState(this.state, '', this.toUrl(this.id));\n                break;\n            case 'push':\n                await this.suppressEventListenerScope(async (wait: () => Promise<unknown>): Promise<void> => {\n                    const promise = wait();\n                    history.go(-1);\n                    await promise;\n                });\n                break;\n            default:\n                await this.suppressEventListenerScope(async (wait: () => Promise<unknown>): Promise<void> => {\n                    const delta = this.index - (this.closest(newId) as number);\n                    if (0 !== delta) {\n                        const promise = wait();\n                        delta && history.go(delta);\n                        await promise;\n                    }\n                });\n                break;\n        }\n    }\n\n    /** @internal follow the session history until `origin` (in silent) */\n    private async backToSesssionOrigin(): Promise<void> {\n        await this.suppressEventListenerScope(async (wait: () => Promise<unknown>): Promise<void> => {\n            const isOrigin = (st: unknown): boolean => {\n                return st && (st as object)['@origin'];\n            };\n\n            const { history } = this._window;\n            let state = history.state;\n            while (!isOrigin(state)) {\n                const promise = wait();\n                history.back();\n                state = await promise;\n            }\n        });\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers:\n\n    /** @internal receive `popstate` events */\n    private async onPopState(ev: PopStateEvent): Promise<void> {\n        const { location } = this._window;\n        const [newState, additional] = parseDispatchInfo(ev.state);\n        const newId   = additional?.newId || this.toId(location.href);\n        const method  = additional?.postproc || 'seek';\n        const df      = additional?.df || this._dfGo || new Deferred();\n        const oldData = additional?.prevState || this.state;\n        const newData = additional?.nextState || this.direct(newId).state || createData(newId, newState);\n        const { cancel, token } = CancelToken.source(); // eslint-disable-line @typescript-eslint/unbound-method\n\n        try {\n            // for fail safe\n            df.catch(noop);\n\n            this.publish('changing', newData, cancel);\n\n            if (token.requested) {\n                throw token.reason;\n            }\n\n            this._stack[`${method}Stack`](newData);\n            await this.triggerRefresh(newData, oldData);\n\n            df.resolve();\n        } catch (e) {\n            // history ãåã«æ»ã\n            await this.rollbackHistory(method, newId);\n            this.publish('error', e);\n            df.reject(e);\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en [[createSessionHistory]]() options.\n * @ja [[createSessionHistory]]() ã«æ¸¡ããªãã·ã§ã³\n * \n */\nexport interface SessionHistoryCreateOptions {\n    context?: Window;\n    mode?: 'hash' | 'history';\n}\n\n/**\n * @en Create browser session history management object.\n * @ja ãã©ã¦ã¶ã»ãã·ã§ã³ç®¡çãªãã¸ã§ã¯ããæ§ç¯\n *\n * @param id\n *  - `en` Specified stack ID\n *  - `ja` ã¹ã¿ãã¯IDãæå®\n * @param state\n *  - `en` State object associated with the stack\n *  - `ja` ã¹ã¿ãã¯ ã«ç´ã¥ãç¶æãªãã¸ã§ã¯ã\n * @param options\n *  - `en` [[SessionHistoryCreateOptions]] object\n *  - `ja` [[SessionHistoryCreateOptions]] ãªãã¸ã§ã¯ã\n */\nexport function createSessionHistory<T = PlainObject>(id: string, state?: T, options?: SessionHistoryCreateOptions): IHistory<T> {\n    const { context, mode } = Object.assign({ mode: 'hash' }, options);\n    return new SessionHistory(context || window, mode, id, state);\n}\n\n/**\n * @en Reset browser session history.\n * @ja ãã©ã¦ã¶ã»ãã·ã§ã³å±¥æ­´ã®ãªã»ãã\n *\n * @param instance\n *  - `en` `SessionHistory` instance\n *  - `ja` `SessionHistory` ã¤ã³ã¹ã¿ã³ã¹ãæå®\n */\nexport async function resetSessionHistory<T = PlainObject>(instance: IHistory<T>, options?: HistorySetStateOptions): Promise<void> {\n    instance[$signature] && await (instance as SessionHistory<T>).reset(options);\n}\n\n/**\n * @en Dispose browser session history management object.\n * @ja ãã©ã¦ã¶ã»ãã·ã§ã³ç®¡çãªãã¸ã§ã¯ãã®ç ´æ£\n *\n * @param instance\n *  - `en` `SessionHistory` instance\n *  - `ja` `SessionHistory` ã¤ã³ã¹ã¿ã³ã¹ãæå®\n */\nexport function disposeSessionHistory<T = PlainObject>(instance: IHistory<T>): void {\n    instance[$signature] && (instance as SessionHistory<T>).dispose();\n}\n","import { PlainObject, post } from '@cdp/core-utils';\nimport { Silenceable, EventPublisher } from '@cdp/events';\nimport { Deferred, CancelToken } from '@cdp/promise';\nimport {\n    IHistory,\n    HistoryEvent,\n    HistoryState,\n    HistorySetStateOptions,\n    HistoryDirectReturnType,\n} from './interfaces';\nimport {\n    createData,\n    createUncancellableDeferred,\n    HistoryStack,\n} from './internal';\n\n/** @internal instance signature */\nconst $signature = Symbol('MemoryHistory#signature');\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Memory history management class.\n * @ja ã¡ã¢ãªå±¥æ­´ç®¡çã¯ã©ã¹\n */\nclass MemoryHistory<T = PlainObject> extends EventPublisher<HistoryEvent<T>> implements IHistory<T> {\n    private readonly _stack = new HistoryStack<T>();\n\n    /**\n     * constructor\n     */\n    constructor(id: string, state?: T) {\n        super();\n        this[$signature] = true;\n        // initialize\n        void this.replace(id, state, { silent: true });\n    }\n\n    /**\n     * dispose object\n     */\n    dispose(): void {\n        this._stack.dispose();\n        this.off();\n        delete this[$signature];\n    }\n\n    /**\n     * reset history\n     */\n    async reset(options?: Silenceable): Promise<void> {\n        if (Number.isNaN(this.index) || this._stack.length <= 1) {\n            return;\n        }\n\n        const { silent } = options || {};\n\n        const oldState = this.state;\n        this.setIndex(0);\n        this.clearForward();\n        const newState = this.state;\n\n        if (!silent) {\n            const df = createUncancellableDeferred('MemoryHistory#reset() is uncancellable method.');\n            void post(() => {\n                void this.onChangeState('noop', df, newState, oldState);\n            });\n            await df;\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: IHistory<T>\n\n    /** history stack length */\n    get length(): number {\n        return this._stack.length;\n    }\n\n    /** current state */\n    get state(): HistoryState<T> {\n        return this._stack.state;\n    }\n\n    /** current id */\n    get id(): string {\n        return this._stack.id;\n    }\n\n    /** current index */\n    get index(): number {\n        return this._stack.index;\n    }\n\n    /** stack pool */\n    get stack(): readonly HistoryState<T>[] {\n        return this._stack.array;\n    }\n\n    /** get data by index. */\n    at(index: number): HistoryState<T> {\n        return this._stack.at(index);\n    }\n\n    /** To move backward through history. */\n    back(): Promise<number> {\n        return this.go(-1);\n    }\n\n    /** To move forward through history. */\n    forward(): Promise<number> {\n        return this.go(1);\n    }\n\n    /** To move a specific point in history. */\n    async go(delta?: number): Promise<number> {\n        const oldIndex = this.index;\n\n        try {\n            // if given 0, just reload.\n            const oldState = delta ? this.state : undefined;\n            const newState = this._stack.distance(delta || 0);\n            const df = new Deferred();\n            void post(() => {\n                void this.onChangeState('seek', df, newState, oldState);\n            });\n            await df;\n        } catch (e) {\n            console.warn(e);\n            this.setIndex(oldIndex);\n        }\n\n        return this.index;\n    }\n\n    /**\n     * @en Register new history.\n     * @ja æ°è¦å±¥æ­´ã®ç»é²\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` ã¹ã¿ãã¯IDãæå®\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` ã¹ã¿ãã¯ ã«ç´ã¥ãç¶æãªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` State management options\n     *  - `ja` ç¶æç®¡çç¨ãªãã·ã§ã³ãæå®\n     */\n    push(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('push', id, state, options || {});\n    }\n\n    /**\n     * @en Replace current history.\n     * @ja ç¾å¨ã®å±¥æ­´ã®ç½®æ\n     *\n     * @param id\n     *  - `en` Specified stack ID\n     *  - `ja` ã¹ã¿ãã¯IDãæå®\n     * @param state\n     *  - `en` State object associated with the stack\n     *  - `ja` ã¹ã¿ãã¯ ã«ç´ã¥ãç¶æãªãã¸ã§ã¯ã\n     * @param options\n     *  - `en` State management options\n     *  - `ja` ç¶æç®¡çç¨ãªãã·ã§ã³ãæå®\n     */\n    replace(id: string, state?: T, options?: HistorySetStateOptions): Promise<number> {\n        return this.updateState('replace', id, state, options || {});\n    }\n\n    /**\n     * @en Clear forward history from current index.\n     * @ja ç¾å¨ã®å±¥æ­´ã®ã¤ã³ããã¯ã¹ããåæ¹ã®å±¥æ­´ãåé¤\n     */\n    clearForward(): void {\n        this._stack.clearForward();\n    }\n\n    /**\n     * @en Return closet index by ID.\n     * @ja æå®ããã ID ããæãè¿ã index ãè¿å´\n     */\n    closest(id: string): number | undefined {\n        return this._stack.closest(id);\n    }\n\n    /**\n     * @en Return destination stack information by `start` and `end` ID.\n     * @ja èµ·ç¹, çµç¹ã® ID ããçµç¹ã®ã¹ã¿ãã¯æå ±ãè¿å´\n     */\n    direct(toId: string, fromId?: string): HistoryDirectReturnType<T> {\n        return this._stack.direct(toId, fromId as string);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    /** @internal set index */\n    private setIndex(idx: number): void {\n        this._stack.index = idx;\n    }\n\n    /** @internal update */\n    private async updateState(method: 'push' | 'replace', id: string, state: T | undefined, options: HistorySetStateOptions): Promise<number> {\n        const { silent, cancel } = options;\n\n        const newState = createData(id, state);\n        if ('replace' === method && 0 === this.index) {\n            newState['@origin'] = true;\n        }\n\n        if (!silent) {\n            const df = new Deferred(cancel);\n            void post(() => {\n                void this.onChangeState(method, df, newState, this.state);\n            });\n            await df;\n        } else {\n            this._stack[`${method}Stack`](newState);\n        }\n\n        return this.index;\n    }\n\n    /** @internal change state handler */\n    private async onChangeState(method: 'noop' | 'push' | 'replace' | 'seek', df: Deferred, newState: HistoryState<T>, oldState: HistoryState<T> | undefined): Promise<void> {\n        const { cancel, token } = CancelToken.source(); // eslint-disable-line @typescript-eslint/unbound-method\n\n        try {\n            this.publish('changing', newState, cancel);\n\n            if (token.requested) {\n                throw token.reason;\n            }\n\n            const promises: Promise<unknown>[] = [];\n            this._stack[`${method}Stack`](newState);\n            this.publish('refresh', newState, oldState, promises);\n\n            await Promise.all(promises);\n\n            df.resolve();\n        } catch (e) {\n            this.publish('error', e);\n            df.reject(e);\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Create memory history management object.\n * @ja ã¡ã¢ãªå±¥æ­´ç®¡çãªãã¸ã§ã¯ããæ§ç¯\n *\n * @param id\n *  - `en` Specified stack ID\n *  - `ja` ã¹ã¿ãã¯IDãæå®\n * @param state\n *  - `en` State object associated with the stack\n *  - `ja` ã¹ã¿ãã¯ ã«ç´ã¥ãç¶æãªãã¸ã§ã¯ã\n */\nexport function createMemoryHistory<T = PlainObject>(id: string, state?: T): IHistory<T> {\n    return new MemoryHistory(id, state);\n}\n\n/**\n * @en Reset memory history.\n * @ja ã¡ã¢ãªå±¥æ­´ã®ãªã»ãã\n *\n * @param instance\n *  - `en` `MemoryHistory` instance\n *  - `ja` `MemoryHistory` ã¤ã³ã¹ã¿ã³ã¹ãæå®\n */\nexport async function resetMemoryHistory<T = PlainObject>(instance: IHistory<T>, options?: HistorySetStateOptions): Promise<void> {\n    instance[$signature] && await (instance as MemoryHistory<T>).reset(options);\n}\n\n/**\n * @en Dispose memory history management object.\n * @ja ã¡ã¢ãªå±¥æ­´ç®¡çãªãã¸ã§ã¯ãã®ç ´æ£\n *\n * @param instance\n *  - `en` `MemoryHistory` instance\n *  - `ja` `MemoryHistory` ã¤ã³ã¹ã¿ã³ã¹ãæå®\n */\nexport function disposeMemoryHistory<T = PlainObject>(instance: IHistory<T>): void {\n    instance[$signature] && (instance as MemoryHistory<T>).dispose();\n}\n","\nimport { path2regexp } from '@cdp/extension-path2regexp';\nimport {\n    Writable,\n    Class,\n    isString,\n    isArray,\n    isObject,\n    isFunction,\n    assignValue,\n    sleep,\n} from '@cdp/core-utils';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport {\n    toQueryStrings,\n    parseUrlQuery,\n    convertUrlParamType,\n} from '@cdp/ajax';\nimport {\n    DOM,\n    dom as $,\n} from '@cdp/dom';\nimport { loadTemplateSource, toTemplateElement } from '@cdp/web-utils';\nimport {\n    HistoryDirection,\n    IHistory,\n    createSessionHistory,\n    createMemoryHistory,\n} from '../history';\nimport { normalizeId } from '../history/internal';\nimport type {\n    RouteChangeInfo,\n    Page,\n    RouteParameters,\n    Route,\n    RouteSubFlowParams,\n    RouteNavigationOptions,\n    Router,\n} from './interfaces';\n\n/** @internal */\nexport const enum CssName {\n    DEFAULT_PREFIX       = 'cdp',\n    TRANSITION_DIRECTION = 'transition-direction',\n    TRANSITION_RUNNING   = 'transition-running',\n    PAGE_CURRENT         = 'page-current',\n    PAGE_PREVIOUS        = 'page-previous',\n    ENTER_FROM_CLASS     = 'enter-from',\n    ENTER_ACTIVE_CLASS   = 'enter-active',\n    ENTER_TO_CLASS       = 'enter-to',\n    LEAVE_FROM_CLASS     = 'leave-from',\n    LEAVE_ACTIVE_CLASS   = 'leave-active',\n    LEAVE_TO_CLASS       = 'leave-to',\n}\n\n/** @internal */\nexport const enum DomCache {\n    DATA_NAME           = 'dom-cache',\n    CACHE_LEVEL_MEMORY  = 'memory',\n    CACHE_LEVEL_CONNECT = 'connect',\n}\n\n/** @internal */\nexport const enum LinkData {\n    TRANSITION     = 'transition',\n    PREVENT_ROUTER = 'prevent-router',\n}\n\n/** @internal */\nexport const enum Const {\n    WAIT_TRANSITION_MARGIN = 100, // msec\n}\n\n/** @internal */\nexport type PageEvent = 'init' | 'mounted' | 'before-enter' | 'after-enter' | 'before-leave' | 'after-leave' | 'unmounted' | 'removed';\n\n//__________________________________________________________________________________________________//\n\n/** @internal flat RouteParameters */\nexport type RouteContextParameters = Omit<RouteParameters, 'routes'> & {\n    /** regexp from path */\n    regexp: RegExp;\n    /** keys of params */\n    paramKeys: string[];\n    /** DOM template instance with Page element */\n    $template?: DOM;\n    /** router page instance from `component` property */\n    page?: Page;\n};\n\n/** @internal RouteContext */\nexport type RouteContext = Writable<Route> & RouteNavigationOptions & {\n    '@params': RouteContextParameters;\n    subflow?: RouteSubFlowParams;\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal RouteContextParameters to RouteContext */\nexport const toRouteContext = (url: string, router: Router, params: RouteContextParameters, navOptions?: RouteNavigationOptions): RouteContext => {\n    // omit unclonable props\n    const fromNavigate = !!navOptions;\n    const ensureClone = (ctx: unknown): RouteContext => JSON.parse(JSON.stringify(ctx));\n    const context = Object.assign(\n        {\n            url,\n            router: fromNavigate ? undefined : router,\n        },\n        navOptions,\n        {\n            // force override\n            query: {},\n            params: {},\n            path: params.path,\n            '@params': fromNavigate ? undefined : params,\n        },\n    );\n    return fromNavigate ? ensureClone(context) : context as RouteContext;\n};\n\n/** @internal convert context params */\nexport const toRouteContextParameters = (routes: RouteParameters | RouteParameters[] | undefined): RouteContextParameters[] => {\n    const flatten = (parentPath: string, nested: RouteParameters[]): RouteParameters[] => {\n        const retval: RouteParameters[] = [];\n        for (const n of nested) {\n            n.path = `${parentPath.replace(/\\/$/, '')}/${normalizeId(n.path)}`;\n            retval.push(n);\n            if (n.routes) {\n                retval.push(...flatten(n.path, n.routes));\n            }\n        }\n        return retval;\n    };\n\n    return flatten('', isArray(routes) ? routes : routes ? [routes] : [])\n        .map((seed: RouteContextParameters) => {\n            const keys: path2regexp.Key[] = [];\n            seed.regexp = path2regexp.pathToRegexp(seed.path, keys);\n            seed.paramKeys = keys.filter(k => isString(k.name)).map(k => k.name as string);\n            return seed;\n        });\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal prepare IHistory object */\nexport const prepareHistory = (seed: 'hash' | 'history' | 'memory' | IHistory = 'hash', initialPath?: string, context?: Window): IHistory<RouteContext> => {\n    return (isString(seed)\n        ? 'memory' === seed ? createMemoryHistory(initialPath || '') : createSessionHistory(initialPath || '', undefined, { mode: seed, context })\n        : seed\n    ) as IHistory<RouteContext>;\n};\n\n/** @internal */\nexport const buildNavigateUrl = (path: string, options: RouteNavigationOptions): string => {\n    try {\n        path = `/${normalizeId(path)}`;\n        const { query, params } = options;\n        let url = path2regexp.compile(path)(params || {});\n        if (query) {\n            url += `?${toQueryStrings(query)}`;\n        }\n        return url;\n    } catch (error) {\n        throw makeResult(\n            RESULT_CODE.ERROR_MVC_ROUTER_NAVIGATE_FAILED,\n            `Construct route destination failed. [path: ${path}, detail: ${error.toString()}]`,\n            error,\n        );\n    }\n};\n\n/** @internal */\nexport const parseUrlParams = (route: RouteContext): void => {\n    const { url } = route;\n    route.query  = url.includes('?') ? parseUrlQuery(normalizeId(url)) : {};\n    route.params = {};\n\n    const { regexp, paramKeys } = route['@params'];\n    if (paramKeys.length) {\n        const params = regexp.exec(url)?.map((value, index) => { return { value, key: paramKeys[index - 1] }; });\n        for (const param of params!) { // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            if (null != param.key) {\n                assignValue(route.params, param.key, convertUrlParamType(param.value));\n            }\n        }\n    }\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal ensure RouteContextParameters#instance */\nexport const ensureRouterPageInstance = async (route: RouteContext): Promise<boolean> => {\n    const { '@params': params } = route;\n\n    if (params.page) {\n        return false; // already created\n    }\n\n    const { component, componentOptions } = params;\n    if (isFunction(component)) {\n        try {\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            params.page = await new (component as unknown as Class)(route, componentOptions);\n        } catch {\n            params.page = await component(route, componentOptions);\n        }\n    } else if (isObject(component)) {\n        params.page = Object.assign({ '@route': route, '@options': componentOptions }, component) as Page;\n    } else {\n        params.page = { '@route': route, '@options': componentOptions } as Page;\n    }\n\n    return true; // newly created\n};\n\n/** @internal ensure RouteContextParameters#$template */\nexport const ensureRouterPageTemplate = async (params: RouteContextParameters): Promise<boolean> => {\n    if (params.$template) {\n        return false; // already created\n    }\n\n    const { content } = params;\n    if (null == content) {\n        // noop element\n        params.$template = $<HTMLElement>();\n    } else if (isString(content['selector'])) {\n        // from ajax\n        const { selector, url } = content as { selector: string; url?: string; };\n        const template = toTemplateElement(await loadTemplateSource(selector, { url }));\n        if (!template) {\n            throw Error(`template load failed. [selector: ${selector}, url: ${url}]`);\n        }\n        params.$template = $([...template.content.children]) as DOM;\n    } else {\n        params.$template = $(content as HTMLElement);\n    }\n\n    return true; // newly created\n};\n\n/** @internal decide transition direction */\nexport const decideTransitionDirection = (changeInfo: RouteChangeInfo): HistoryDirection => {\n    if (changeInfo.reverse) {\n        switch (changeInfo.direction) {\n            case 'back':\n                return 'forward';\n            case 'forward':\n                return 'back';\n            default:\n                break;\n        }\n    }\n    return changeInfo.direction;\n};\n\n/** @internal check animation property */\nconst getAnimationSec = ($el: DOM): number => {\n    try {\n        return parseFloat(getComputedStyle($el[0]).animationDuration);\n    } catch {\n        return 0;\n    }\n};\n\n/** @internal check transition property */\nconst getTransitionSec = ($el: DOM): number => {\n    try {\n        return parseFloat(getComputedStyle($el[0]).transitionDuration);\n    } catch {\n        return 0;\n    }\n};\n\n/** @internal */\nconst waitForEffect = ($el: DOM, method: 'animationEnd' | 'transitionEnd', durationSec: number): Promise<unknown> => {\n    return Promise.race([\n        new Promise(resolve => $el[method](resolve)),\n        sleep(durationSec * 1000 + Const.WAIT_TRANSITION_MARGIN),\n    ]);\n};\n\n/** @internal transition execution */\nexport const processPageTransition = async($el: DOM, fromClass: string, activeClass: string, toClass: string): Promise<void> => {\n    $el.removeClass(fromClass);\n    $el.addClass(toClass);\n\n    /* eslint-disable no-cond-assign */\n    let duration: number;\n    if (duration = getAnimationSec($el)) {\n        await waitForEffect($el, 'animationEnd', duration);\n    } else if (duration = getTransitionSec($el)) {\n        await waitForEffect($el, 'transitionEnd', duration);\n    }\n    /* eslint-enable no-cond-assign */\n\n    $el.removeClass(activeClass);\n};\n","import {\n    UnknownFunction,\n    isArray,\n    isFunction,\n    camelize,\n} from '@cdp/core-utils';\nimport { EventPublisher } from '@cdp/events';\nimport {\n    RESULT_CODE,\n    isResult,\n    makeResult,\n} from '@cdp/result';\nimport {\n    DOM,\n    dom as $,\n    DOMSelector,\n} from '@cdp/dom';\nimport { waitFrame } from '@cdp/web-utils';\nimport { window } from '../ssr';\nimport { normalizeId } from '../history/internal';\nimport type { IHistory, HistoryState } from '../history';\nimport type {\n    PageTransitionParams,\n    RouteChangeInfo,\n    RouterEvent,\n    Page,\n    RouteParameters,\n    Route,\n    TransitionSettings,\n    PageStack,\n    RouterConstructionOptions,\n    RouteSubFlowParams,\n    RouteNavigationOptions,\n    Router,\n} from './interfaces';\nimport {\n    CssName,\n    DomCache,\n    LinkData,\n    PageEvent,\n    RouteContextParameters,\n    RouteContext,\n    toRouteContextParameters,\n    toRouteContext,\n    prepareHistory,\n    buildNavigateUrl,\n    parseUrlParams,\n    ensureRouterPageInstance,\n    ensureRouterPageTemplate,\n    decideTransitionDirection,\n    processPageTransition,\n} from './internal';\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Router impliment class.\n * @ja Router å®è£ã¯ã©ã¹\n */\nclass RouterContext extends EventPublisher<RouterEvent> implements Router {\n    private readonly _routes: Record<string, RouteContextParameters> = {};\n    private readonly _history: IHistory<RouteContext>;\n    private readonly _$el: DOM;\n    private readonly _raf: UnknownFunction;\n    private readonly _historyChangingHandler: typeof RouterContext.prototype.onHistoryChanging;\n    private readonly _historyRefreshHandler: typeof RouterContext.prototype.onHistoryRefresh;\n    private readonly _errorHandler: typeof RouterContext.prototype.onHandleError;\n    private readonly _cssPrefix: string;\n    private _transitionSettings: TransitionSettings;\n    private _lastRoute?: RouteContext;\n    private _prevRoute?: RouteContext;\n    private _tempTransitionParams?: PageTransitionParams;\n\n    /**\n     * constructor\n     */\n    constructor(selector: DOMSelector<string | HTMLElement>, options: RouterConstructionOptions) {\n        super();\n\n        const {\n            routes,\n            start,\n            el,\n            window: context,\n            history,\n            initialPath,\n            cssPrefix,\n            transition,\n        } = options;\n\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this._raf = context?.requestAnimationFrame || window.requestAnimationFrame;\n\n        this._$el = $(selector, el);\n        if (!this._$el.length) {\n            throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_ELEMENT_NOT_FOUND, `Router element not found. [selector: ${selector as string}]`);\n        }\n\n        this._history = prepareHistory(history, initialPath, context as Window);\n        this._historyChangingHandler = this.onHistoryChanging.bind(this);\n        this._historyRefreshHandler  = this.onHistoryRefresh.bind(this);\n        this._errorHandler           = this.onHandleError.bind(this);\n\n        this._history.on('changing', this._historyChangingHandler);\n        this._history.on('refresh',  this._historyRefreshHandler);\n        this._history.on('error',    this._errorHandler);\n\n        // follow anchor\n        this._$el.on('click', '[href]', this.onAnchorClicked.bind(this));\n\n        this._cssPrefix = cssPrefix || CssName.DEFAULT_PREFIX;\n        this._transitionSettings = Object.assign({ default: 'none' }, transition);\n\n        this.register(routes as RouteParameters[], start);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: Router\n\n    /** Router's view HTML element */\n    get el(): HTMLElement {\n        return this._$el[0];\n    }\n\n    /** Object with current route data */\n    get currentRoute(): Route {\n        return this._history.state;\n    }\n\n    /** Check state is in sub-flow */\n    get isInSubFlow(): boolean {\n        return !!this.findSubFlowParams(false);\n    }\n\n    /** Route registration */\n    register(routes: RouteParameters | RouteParameters[], refresh = false): this {\n        for (const context of toRouteContextParameters(routes)) {\n            this._routes[context.path] = context;\n        }\n        refresh && void this.go();\n        return this;\n    }\n\n    /** Navigate to new page. */\n    async navigate(to: string, options?: RouteNavigationOptions): Promise<this> {\n        try {\n            const seed = this.findRouteContextParameter(to);\n            if (!seed) {\n                throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_NAVIGATE_FAILED, `Route not found. [to: ${to}]`);\n            }\n\n            const opts  = Object.assign({ intent: undefined }, options);\n            const url   = buildNavigateUrl(to, opts);\n            const route = toRouteContext(url, this, seed, opts);\n\n            try {\n                // exec navigate\n                await this._history.push(url, route);\n            } catch {\n                // noop\n            }\n        } catch (e) {\n            this.onHandleError(e);\n        }\n\n        return this;\n    }\n\n    /** Add page stack starting from the current history. */\n    async pushPageStack(stack: PageStack | PageStack[], noNavigate?: boolean): Promise<this> {\n        try {\n            const stacks = isArray(stack) ? stack : [stack];\n            const routes = stacks.filter(s => !!s.route).map(s => s.route as RouteParameters);\n\n            // ensrue Route\n            this.register(routes, false);\n\n            await this.suppressEventListenerScope(async () => {\n                // push history\n                for (const page of stacks) {\n                    const { url, transition, reverse } = page;\n                    const params = this.findRouteContextParameter(url);\n                    if (null == params) {\n                        throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED, `Route cannot be resolved. [url: ${url}]`, page);\n                    }\n                    // silent registry\n                    const route = toRouteContext(url, this, params, { intent: undefined });\n                    route.transition = transition;\n                    route.reverse    = reverse;\n                    void this._history.push(url, route, { silent: true });\n                }\n\n                await this.waitFrame();\n\n                if (noNavigate) {\n                    await this._history.go(-1 * stacks.length);\n                }\n            });\n\n            if (!noNavigate) {\n                await this.go();\n            }\n        } catch (e) {\n            this.onHandleError(e);\n        }\n\n        return this;\n    }\n\n    /** To move backward through history. */\n    back(): Promise<this> {\n        return this.go(-1);\n    }\n\n    /** To move forward through history. */\n    forward(): Promise<this> {\n        return this.go(1);\n    }\n\n    /** To move a specific point in history. */\n    async go(delta?: number): Promise<this> {\n        await this._history.go(delta);\n        return this;\n    }\n\n    /** Begin sub-flow transaction. */\n    async beginSubFlow(to: string, subflow?: RouteSubFlowParams, options?: RouteNavigationOptions): Promise<this> {\n        try {\n            const params = Object.assign({}, subflow || {});\n            this.evaluationSubFlowParams(params);\n            (this.currentRoute as RouteContext).subflow = params;\n            await this.navigate(to, options);\n        } catch (e) {\n            this.onHandleError(e);\n        }\n        return this;\n    }\n\n    /** Commit sub-flow transaction. */\n    async commitSubFlow(params?: PageTransitionParams): Promise<this> {\n        const subflow = this.findSubFlowParams(true);\n        if (!subflow) {\n            return this;\n        }\n\n        // `reverse`: å±¥æ­´ä¸ã¯ `back` æ¹åã«ãªããã, I/F æå®æ¹åã¨åè»¢ããããã«èª¿æ´\n        this._tempTransitionParams = Object.assign({}, params, { reverse: !params?.reverse });\n        const { additionalDistance, additinalStacks } = subflow.params;\n        const distance = subflow.distance + additionalDistance;\n\n        if (additinalStacks?.length) {\n            await this.suppressEventListenerScope(() => this.go(-1 * distance));\n            await this.pushPageStack(additinalStacks);\n        } else {\n            await this.go(-1 * distance);\n        }\n        this._history.clearForward();\n\n        return this;\n    }\n\n    /** Cancel sub-flow transaction. */\n    async cancelSubFlow(params?: PageTransitionParams): Promise<this> {\n        const subflow = this.findSubFlowParams(true);\n        if (!subflow) {\n            return this;\n        }\n\n        // `reverse`: å±¥æ­´ä¸ã¯ `back` æ¹åã«ãªããã, I/F æå®æ¹åã¨åè»¢ããããã«èª¿æ´. default: true\n        this._tempTransitionParams = Object.assign({}, params, { reverse: !Object.assign({ reverse: true }, params).reverse });\n        await this.go(-1 * subflow.distance);\n        this._history.clearForward();\n\n        return this;\n    }\n\n    /** Set common transition settnigs. */\n    setTransitionSettings(newSettings: TransitionSettings): TransitionSettings {\n        const oldSettings = this._transitionSettings;\n        this._transitionSettings = { ...newSettings };\n        return oldSettings;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: sub-flow\n\n    /** @internal evaluation sub-flow parameters */\n    private evaluationSubFlowParams(subflow: RouteSubFlowParams): void {\n        let additionalDistance = 0;\n\n        if (subflow.base) {\n            const baseId = normalizeId(subflow.base);\n            let found = false;\n            const { index, stack } = this._history;\n            for (let i = index; i >= 0; i--, additionalDistance++) {\n                if (stack[i]['@id'] === baseId) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_INVALID_SUBFLOW_BASE_URL, `Invalid sub-flow base url. [url: ${subflow.base}]`);\n            }\n        } else {\n            subflow.base = this.currentRoute.url;\n        }\n\n        Object.assign(subflow, { additionalDistance });\n    }\n\n    /** @internal find sub-flow parameters */\n    private findSubFlowParams(detach: boolean): { distance: number; params: RouteSubFlowParams & { additionalDistance: number; }; } | void {\n        const stack = this._history.stack;\n        for (let i = stack.length - 1, distance = 0; i >= 0; i--, distance++) {\n            if (stack[i].subflow) {\n                const params = stack[i].subflow as RouteSubFlowParams & { additionalDistance: number; };\n                detach && delete stack[i].subflow;\n                return { distance, params };\n            }\n        }\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods: transition\n\n    /** @internal common `RouterEventArg` maker */\n    private makeRouteChangeInfo(newState: HistoryState<RouteContext>, oldState: HistoryState<RouteContext> | undefined): RouteChangeInfo {\n        const intent = newState.intent;\n        delete newState.intent; // navigate æã«æå®ããã intent ã¯ one time ã®ã¿æå¹ã«ãã\n\n        const from = oldState || this._lastRoute;\n        const direction = this._history.direct(newState['@id'], from?.['@id']).direction;\n        const { transition, reverse } = this._tempTransitionParams || ('back' !== direction ? newState : from as RouteContext);\n        this._tempTransitionParams = undefined;\n\n        return {\n            router: this,\n            from,\n            to: newState,\n            direction,\n            transition,\n            reverse,\n            intent,\n        };\n    }\n\n    /** @internal find route by url */\n    private findRouteContextParameter(url: string): RouteContextParameters | void {\n        const key = `/${normalizeId(url.split('?')[0])}`;\n        for (const path of Object.keys(this._routes)) {\n            const { regexp } = this._routes[path];\n            if (regexp.test(key)) {\n                return this._routes[path];\n            }\n        }\n    }\n\n    /** @internal trigger page event */\n    private triggerPageCallback(event: PageEvent, target: Page | undefined, arg: Route | RouteChangeInfo): void {\n        const method = camelize(`page-${event}`);\n        isFunction(target?.[method]) && target?.[method](arg);\n    }\n\n    /** @internal wait frame */\n    private waitFrame(): Promise<void> {\n        return waitFrame(1, this._raf);\n    }\n\n    /** @internal change page main procedure */\n    private async changePage(nextRoute: HistoryState<RouteContext>, prevRoute: HistoryState<RouteContext> | undefined): Promise<void> {\n        parseUrlParams(nextRoute);\n\n        const changeInfo = this.makeRouteChangeInfo(nextRoute, prevRoute);\n\n        const [\n            pageNext, $elNext,\n            pagePrev, $elPrev,\n        ] = await this.prepareChangeContext(changeInfo);\n\n        // transition core\n        await this.transitionPage(pageNext, $elNext, pagePrev, $elPrev, changeInfo);\n\n        this.updateChangeContext($elNext, $elPrev, changeInfo.from as RouteContext);\n\n        this.publish('changed', changeInfo);\n    }\n\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n    /** @internal */\n    private async prepareChangeContext(changeInfo: RouteChangeInfo): Promise<[Page, DOM, Page, DOM]> {\n        const nextRoute = changeInfo.to as HistoryState<RouteContext>;\n        const prevRoute = changeInfo.from as HistoryState<RouteContext> | undefined;\n\n        const { '@params': params } = nextRoute;\n\n        // page instance\n        await ensureRouterPageInstance(nextRoute);\n        // page $template\n        await ensureRouterPageTemplate(params);\n\n        // page $el\n        if (!nextRoute.el) {\n            nextRoute.el = params.$template!.clone()[0];\n            this.publish('loaded', changeInfo);\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.triggerPageCallback('init', nextRoute['@params'].page!, changeInfo);\n        }\n\n        const $elNext = $(nextRoute.el);\n        const pageNext = nextRoute['@params'].page!;\n\n        // mount\n        if (!$elNext.isConnected) {\n            $elNext.attr('aria-hidden', true);\n            this._$el.append($elNext);\n            this.publish('mounted', changeInfo);\n            this.triggerPageCallback('mounted', pageNext, changeInfo);\n        }\n\n        return [\n            pageNext, $elNext,                                      // next\n            prevRoute?.['@params']?.page || {}, $(prevRoute?.el),   // prev\n        ];\n    }\n\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n\n    /** @internal */\n    private async transitionPage(\n        pageNext: Page, $elNext: DOM,\n        pagePrev: Page, $elPrev: DOM,\n        changeInfo: RouteChangeInfo,\n    ): Promise<void> {\n        const transition = changeInfo.transition || this._transitionSettings.default;\n\n        const {\n            'enter-from-class': customEnterFromClass,\n            'enter-active-class': customEnterActiveClass,\n            'enter-to-class': customEnterToClass,\n            'leave-from-class': customLeaveFromClass,\n            'leave-active-class': customLeaveActiveClass,\n            'leave-to-class': customLeaveToClass,\n        } = this._transitionSettings;\n\n        // enter-css-class\n        const enterFromClass   = customEnterFromClass   || `${transition}-${CssName.ENTER_FROM_CLASS}`;\n        const enterActiveClass = customEnterActiveClass || `${transition}-${CssName.ENTER_ACTIVE_CLASS}`;\n        const enterToClass     = customEnterToClass     || `${transition}-${CssName.ENTER_TO_CLASS}`;\n\n        // leave-css-class\n        const leaveFromClass   = customLeaveFromClass   || `${transition}-${CssName.LEAVE_FROM_CLASS}`;\n        const leaveActiveClass = customLeaveActiveClass || `${transition}-${CssName.LEAVE_ACTIVE_CLASS}`;\n        const leaveToClass     = customLeaveToClass     || `${transition}-${CssName.LEAVE_TO_CLASS}`;\n\n        this.beginTransition(\n            pageNext, $elNext, enterFromClass, enterActiveClass,\n            pagePrev, $elPrev, leaveFromClass, leaveActiveClass,\n            changeInfo,\n        );\n\n        await this.waitFrame();\n\n        // transision execution\n        await Promise.all([\n            processPageTransition($elNext, enterFromClass, enterActiveClass, enterToClass),\n            processPageTransition($elPrev, leaveFromClass, leaveActiveClass, leaveToClass),\n        ]);\n\n        await this.waitFrame();\n\n        this.endTransition(\n            pageNext, $elNext, enterToClass,\n            pagePrev, $elPrev, leaveToClass,\n            changeInfo,\n        );\n    }\n\n    /** @internal transition proc : begin */\n    private beginTransition(\n        pageNext: Page, $elNext: DOM, enterFromClass: string, enterActiveClass: string,\n        pagePrev: Page, $elPrev: DOM, leaveFromClass: string, leaveActiveClass: string,\n        changeInfo: RouteChangeInfo,\n    ): void {\n        this._$el.addClass([\n            `${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`,\n            `${this._cssPrefix}-${CssName.TRANSITION_DIRECTION}-${decideTransitionDirection(changeInfo)}`,\n        ]);\n        $elNext.removeAttr('aria-hidden');\n        $elNext.addClass([enterFromClass, enterActiveClass]);\n        $elPrev.addClass([leaveFromClass, leaveActiveClass]);\n\n        this.publish('before-transition', changeInfo);\n        this.triggerPageCallback('before-enter', pageNext, changeInfo);\n        this.triggerPageCallback('before-leave', pagePrev, changeInfo);\n    }\n\n    /** @internal transition proc : end */\n    private endTransition(\n        pageNext: Page, $elNext: DOM, enterToClass: string,\n        pagePrev: Page, $elPrev: DOM, leaveToClass: string,\n        changeInfo: RouteChangeInfo,\n    ): void {\n        $elNext.removeClass(enterToClass);\n        $elPrev.removeClass(leaveToClass);\n        $elPrev.attr('aria-hidden', true);\n\n        this._$el.removeClass([\n            `${this._cssPrefix}-${CssName.TRANSITION_RUNNING}`,\n            `${this._cssPrefix}-${CssName.TRANSITION_DIRECTION}-${changeInfo.direction}`,\n        ]);\n\n        this.publish('after-transition', changeInfo);\n        this.triggerPageCallback('after-enter', pageNext, changeInfo);\n        this.triggerPageCallback('after-leave', pagePrev, changeInfo);\n    }\n\n    /** @internal update page status after transition */\n    private updateChangeContext($elNext: DOM, $elPrev: DOM, prevRoute: RouteContext | undefined): void {\n        // update class\n        $elPrev.removeClass(`${this._cssPrefix}-${CssName.PAGE_CURRENT}`);\n        $elNext.addClass(`${this._cssPrefix}-${CssName.PAGE_CURRENT}`);\n        $elPrev.addClass(`${this._cssPrefix}-${CssName.PAGE_PREVIOUS}`);\n\n        if (this._prevRoute) {\n            const $el = $(this._prevRoute.el);\n            $el.removeClass(`${this._cssPrefix}-${CssName.PAGE_PREVIOUS}`);\n            const cacheLv = $el.data(DomCache.DATA_NAME);\n            if (DomCache.CACHE_LEVEL_CONNECT !== cacheLv) {\n                $el.detach();\n                const page = this._prevRoute['@params'].page;\n                this.publish('unmounted', this._prevRoute);\n                this.triggerPageCallback('unmounted', page, this._prevRoute);\n                if (DomCache.CACHE_LEVEL_MEMORY !== cacheLv) {\n                    this._prevRoute.el = null!; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                    this.publish('unloaded', this._prevRoute);\n                    this.triggerPageCallback('removed', page, this._prevRoute);\n                }\n            }\n        }\n\n        this._lastRoute = this.currentRoute as RouteContext;\n        this._prevRoute = prevRoute;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers:\n\n    /** @internal `history` `changing` handler */\n    private onHistoryChanging(nextState: HistoryState<RouteContext>, cancel: (reason?: unknown) => void): boolean {\n        let handled = false;\n        const callback = (reason?: unknown): void => {\n            handled = true;\n            cancel(reason);\n        };\n\n        this.publish('will-change', this.makeRouteChangeInfo(nextState, undefined), callback);\n\n        return handled;\n    }\n\n    /** @internal `history` `refresh` handler */\n    private onHistoryRefresh(newState: HistoryState<Partial<RouteContext>>, oldState: HistoryState<RouteContext> | undefined, promises: Promise<unknown>[]): void {\n        const ensure = (state: HistoryState<Partial<RouteContext>>): HistoryState<RouteContext> => {\n            const url  = `/${state['@id']}`;\n            const params = this.findRouteContextParameter(url);\n            if (null == params) {\n                throw makeResult(RESULT_CODE.ERROR_MVC_ROUTER_ROUTE_CANNOT_BE_RESOLVED, `Route cannot be resolved. [url: ${url}]`, state);\n            }\n            if (null == state['@params']) {\n                // RouteContextParameter ã assign\n                Object.assign(state, toRouteContext(url, this, params));\n            }\n            return state as HistoryState<RouteContext>;\n        };\n\n        try {\n            // scheduling `refresh` done.\n            promises.push(this.changePage(ensure(newState), oldState));\n        } catch (e) {\n            this.onHandleError(e);\n        }\n    }\n\n    /** @internal error handler */\n    private onHandleError(error: unknown): void {\n        this.publish(\n            'error',\n            isResult(error) ? error : makeResult(RESULT_CODE.ERROR_MVC_ROUTER_NAVIGATE_FAILED, 'Route navigate failed.', error)\n        );\n        console.error(error);\n    }\n\n    /** @internal anchor click handler */\n    private onAnchorClicked(event: MouseEvent): void {\n        const $target = $(event.target as Element).closest('[href]');\n        if ($target.data(LinkData.PREVENT_ROUTER)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const url        = $target.attr('href');\n        const transition = $target.data(LinkData.TRANSITION) as string;\n\n        if ('#' === url) {\n            void this.back();\n        } else {\n            void this.navigate(url as string, { transition });\n        }\n    }\n\n    /** @internal silent event listner scope */\n    private async suppressEventListenerScope(executor: () => Promise<unknown>): Promise<unknown> {\n        try {\n            this._history.off('changing', this._historyChangingHandler);\n            this._history.off('refresh',  this._historyRefreshHandler);\n            this._history.off('error',    this._errorHandler);\n            return await executor();\n        } finally {\n            this._history.on('changing', this._historyChangingHandler);\n            this._history.on('refresh',  this._historyRefreshHandler);\n            this._history.on('error',    this._errorHandler);\n        }\n    }\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Create [[Router]] object.\n * @ja [[Router]] ãªãã¸ã§ã¯ããæ§ç¯\n *\n * @param selector\n *  - `en` An object or the selector string which becomes origin of [[DOM]].\n *  - `ja` [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n * @param options\n *  - `en` [[RouterConstructionOptions]] object\n *  - `ja` [[RouterConstructionOptions]] ãªãã¸ã§ã¯ã\n */\nexport function createRouter(selector: DOMSelector<string | HTMLElement>, options?: RouterConstructionOptions): Router {\n    return new RouterContext(selector, Object.assign({\n        start: true,\n    }, options));\n}\n","/* eslint-disable\n    max-len,\n    @typescript-eslint/no-namespace,\n    @typescript-eslint/no-unused-vars,\n    @typescript-eslint/restrict-plus-operands,\n */\n\nnamespace CDP_DECLARE {\n\n    const enum LOCAL_CODE_BASE {\n        APP = CDP_KNOWN_MODULE.APP * LOCAL_CODE_RANGE_GUIDE.FUNCTION,\n    }\n\n    /**\n     * @en Extends error code definitions.\n     * @ja æ¡å¼µã¨ã©ã¼ã³ã¼ãå®ç¾©\n     */\n    export enum RESULT_CODE {\n        APP_DECLARE = RESULT_CODE_BASE.DECLARE,\n        ERROR_APP_CONTEXT_NEED_TO_BE_INITIALIZED = DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP, LOCAL_CODE_BASE.APP + 1, 'AppContext need to be initialized with options at least once.'),\n    }\n}\n","import { safe } from '@cdp/core-utils';\n/** @internal */ export const window = safe(globalThis.window);\n","import { getGlobalNamespace, getConfig } from '@cdp/core-utils';\nimport { i18n } from '@cdp/i18n';\n\n/** @internal */\nexport const enum CssName {\n    PAGE_CURRENT  = 'page-current',\n    PAGE_PREVIOUS = 'page-previous',\n}\n\n/** @internal partial match class name */\nexport const hasPartialClassName = <T extends Element>(el: T, className: string): boolean => {\n    for (const name of el.classList) {\n        if (name.includes(className)) {\n            return true;\n        }\n    }\n    return false;\n};\n\n//__________________________________________________________________________________________________//\n\n/** @internal force clear i18n settings */\nexport const clearI18NSettings = (): void => {\n    const context: Partial<typeof i18n> = i18n;\n    delete context['options'];\n    delete context['language'];\n    delete context['languages'];\n    delete context['isInitialized'];\n};\n\n/** @internal */\nexport const getAppConfig = <T extends object>(base: T): T => {\n    return Object.assign(\n        {},\n        getConfig<T>(),                  // CDP.Config\n        getGlobalNamespace<T>('Config'), // global Config\n        base,\n    );\n};\n\n/** @internal ensure DOMContentLoaded */\nexport const waitDomContentLoaded = async (context: Document): Promise<void> => {\n    'loading' === context.readyState && await new Promise<unknown>(resolve => {\n        context.addEventListener('DOMContentLoaded', resolve, { once: true });\n    });\n};\n\n/** @internal ensure custom document event ready*/\nexport const waitDocumentEventReady = async (context: Document, event: string | undefined): Promise<void> => {\n    null != event && await new Promise<unknown>(resolve => {\n        context.addEventListener(event, resolve, { once: true });\n    });\n};\n","import { Subscribable, EventPublisher } from '@cdp/events';\nimport { Deferred } from '@cdp/promise';\nimport { RESULT_CODE, makeResult } from '@cdp/result';\nimport { waitFrame } from '@cdp/web-utils';\nimport {\n    DOMSelector,\n    dom as $,\n} from '@cdp/dom';\nimport {\n    I18NOptions,\n    initializeI18N,\n    localize,\n} from '@cdp/i18n';\nimport {\n    RouteChangeInfo,\n    RouteComponentSeed,\n    RouteParameters,\n    RouterConstructionOptions,\n    Router,\n    Page,\n    createRouter,\n} from '@cdp/router';\nimport { window } from './ssr';\nimport {\n    clearI18NSettings,\n    getAppConfig,\n    waitDomContentLoaded,\n    waitDocumentEventReady,\n} from './internal';\n\n/**\n * @en `orientation` identifier\n * @ja `orientation` è­å¥å­\n */\nexport const enum Orientation {\n    PORTRAIT  = 'portrait',\n    LANDSCAPE = 'landscape',\n}\n\n/**\n * @en The event definition fired in [[AppContext]].\n * @ja [[AppContext]] åããçºè¡ãããã¤ãã³ãå®ç¾©\n */\nexport interface AppContextEvent {\n    /**\n     * @en Application ready notification.\n     * @ja ã¢ããªã±ã¼ã·ã§ã³æºåå®äºéç¥\n     * @args [context]\n     */\n    'ready': [AppContext];\n\n    /**\n     * @en Hardware back button press notification.\n     * @ja ãã¼ãã¦ã§ã¢ããã¯ãã¿ã³ã®æ¼ä¸éç¥\n     * @args [Event]\n     */\n    'backbutton': [Event];\n\n    /**\n     * @en Device orientation change notification.\n     * @ja ããã¤ã¹ãªãªã¨ã³ãã¼ã·ã§ã³å¤æ´éç¥\n     * https://developer.mozilla.org/ja/docs/Web/API/Window/orientationchange_event\n     * @args [Orientaion, angle]\n     */\n    'orientationchange': [Orientation, number];\n}\n\n/**\n * @en [[AppContext]] create options.\n * @ja [[AppContext]] æ§ç¯ãªãã·ã§ã³\n */\nexport interface AppContextOptions extends RouterConstructionOptions {\n    /**\n     * @en An object or the selector string which becomes origin of [[DOM]] for main router.\n     * @ja ã¡ã¤ã³ã«ã¼ã¿ã¼ã® [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹ã¾ãã¯ã»ã¬ã¯ã¿æå­å\n     * @default `#app`\n     */\n    main?: DOMSelector<string | HTMLElement>;\n\n    /**\n     * @en An object or the selector string which becomes origin of [[DOM]] assigned to the splash screen. <br>\n     *     It will be removed just before appliaction ready.\n     * @ja ã¹ãã©ãã·ã¥ã¹ã¯ãªã¼ã³ã«å²ãå½ã¦ããã¦ãã [[DOM]] ã®ãã¨ã«ãªãã¤ã³ã¹ã¿ã³ã¹ã¾ãã¯ã»ã¬ã¯ã¿æå­å <br>\n     *     æºåå®äºç´åã«åé¤ããã\n     */\n    splash?: DOMSelector<string | HTMLElement>;\n\n    /**\n     * @en Localization module options.\n     * @ja ã­ã¼ã«ã©ã¤ãºã¢ã¸ã¥ã¼ã«ãªãã·ã§ã³\n     */\n    i18n?: I18NOptions;\n\n    /**\n     * @en Custom stand-by function for application ready state.\n     * @ja ã¢ããªã±ã¼ã·ã§ã³æºåå®äºã®ããã®å¾ã¡åãé¢æ°\n     */\n    waitForReady?: Promise<void>;\n\n    /**\n     * @en Custom `document` event for application ready state.\n     * @ja ã¢ããªã±ã¼ã·ã§ã³æºåå®äºã®ããã®ã«ã¹ã¿ã  `document` ã¤ãã³ã\n     */\n    documentEventReady?: string;\n\n    /**\n     * @en Custom `document` event for hardware back button. default: `backbutton`\n     * @ja ãã¼ãã¦ã§ã¢ããã¯ãã¿ã³ã®ããã®ã«ã¹ã¿ã  `document` ã¤ãã³ã. æ¢å®å¤ `backbutton`\n     */\n    documentEventBackButton?: string;\n\n    /**\n     * @internal\n     * @en Specify true to destroy the instance cache and reset. (for debug)\n     * @ja ã¤ã³ã¹ã¿ã³ã¹ã­ã£ãã·ã¥ãç ´æ£ããªã»ããããå ´åã« true ãæå® (ãããã°ç¨)\n     */\n    reset?: boolean;\n}\n\n/**\n * @en Application context interface\n * @ja ã¢ããªã±ã¼ã·ã§ã³ã³ã³ãã­ã¹ã\n */\nexport interface AppContext extends Subscribable<AppContextEvent> {\n    /**\n     * @en main router interface\n     * @ja ã¡ã¤ã³ã«ã¼ã¿ã¼\n     */\n    readonly router: Router;\n\n    /**\n     * @en `Promise` for ready state.\n     * @ja æºåå®äºç¢ºèªç¨ `Promise` ãªãã¸ã§ã¯ã\n     */\n    readonly ready: Promise<void>;\n\n    /**\n     * @en Current active page instance.\n     * @ja ç¾å¨ã¢ã¯ãã£ããªãã¼ã¸ã¤ã³ã¹ã¿ã³ã¹\n     */\n    readonly activePage: Page;\n\n    /**\n     * @en Current [[Orientation]] id.\n     * @ja ç¾å¨ã® [[Orientation]] ãåå¾\n     */\n    readonly orientation: Orientation;\n\n    /**\n     * @en User-definable extended property.\n     * @ja ã¦ã¼ã¶ã¼å®ç¾©å¯è½ãªæ¡å¼µãã­ããã£\n     */\n    extension: unknown;\n}\n\n//__________________________________________________________________________________________________//\n\nconst _initialPages: RouteParameters[] = [];\n\n/**\n * @en Pre-register concrete [[Page]] class. Registered with the main router when instantiating [[AppContext]]. <br>\n *     If constructor needs arguments, `options.componentOptions` is available.\n * @ja Page å·è±¡åã¯ã©ã¹ã®äºåç»é². [[AppContext]] ã®ã¤ã³ã¹ã¿ã³ã¹åæã«ã¡ã¤ã³ã«ã¼ã¿ã¼ã«ç»é²ããã. <br>\n *     constructor ãæå®ããå¼æ°ãããå ´åã¯, `options.componentOptions` ãå©ç¨å¯è½\n *\n * @example <br>\n *\n * ```ts\n * import {\n *     Page,\n *     Router,\n *     AppContext,\n *     registerPage,\n * } from '@cdp/runtime';\n *\n * const pageFactory = (router: Router, ...args: any[]): Page => {\n *   :\n * };\n * \n * // pre-registration\n * registerPage('page-path', pageFactory);\n *\n * // initial access\n * const app = AppContext({ main: '#app' });\n * :\n * ```\n *\n * @param path\n *  - `en` route path\n *  - `ja` ã«ã¼ãã®ãã¹\n * @param component\n *  - `en` specify the constructor or built object of the page component\n *  - `ja` ãã¼ã¸ã³ã³ãã¼ãã³ãã®ã³ã³ã¹ãã©ã¯ã¿ãããã¯æ§ç¯æ¸ã¿ãªãã¸ã§ã¯ã\n * @param options\n *  - `en` route parameters\n *  - `ja` ã«ã¼ããã©ã¡ã¼ã¿\n */\nexport const registerPage = (path: string, component: RouteComponentSeed, options?: Omit<RouteParameters, 'path'>): void => {\n    _initialPages.push(Object.assign({}, options, { path, component }));\n};\n\n//__________________________________________________________________________________________________//\n\n/** AppContext impl class */\nclass Application extends EventPublisher<AppContextEvent> implements AppContext {\n    private readonly _window: Window;\n    private readonly _router: Router;\n    private readonly _ready = new Deferred();\n    private _extension: unknown;\n\n    constructor(options: AppContextOptions) {\n        super();\n        const { main, window: win } = options;\n        this._window = win || window;\n        this._router = createRouter(main as string, options);\n        void this.initialize(options);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// implements: AppContext\n\n    get router(): Router {\n        return this._router;\n    }\n\n    get ready(): Promise<void> {\n        return this._ready;\n    }\n\n    get activePage(): Page {\n        return this._router.currentRoute['@params']?.page || {};\n    }\n\n    get orientation(): Orientation {\n        const $window = $(this._window);\n        return ($window.width() < $window.height()) ? Orientation.PORTRAIT : Orientation.LANDSCAPE;\n    }\n\n    get extension(): unknown {\n        return this._extension;\n    }\n\n    set extension(val: unknown) {\n        this._extension = val;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    private async initialize(options: AppContextOptions): Promise<void> {\n        const { splash, i18n, waitForReady, documentEventReady, documentEventBackButton } = options;\n        const { _window } = this;\n\n        _window.addEventListener('error', this.onGlobalError.bind(this));\n        _window.addEventListener('unhandledrejection', this.onGlobalUnhandledRejection.bind(this));\n\n        await waitDomContentLoaded(_window.document);\n        await Promise.all([\n            initializeI18N(i18n),\n            waitForReady,\n            waitDocumentEventReady(_window.document, documentEventReady),\n        ]);\n\n        _window.document.addEventListener(documentEventBackButton as string, this.onHandleBackKey.bind(this));\n        _window.addEventListener('orientationchange', this.onHandleOrientationChanged.bind(this));\n\n        this._router.on('loaded', this.onPageLoaded.bind(this));\n        this._router.register(_initialPages, true);\n\n        // remove splash screen\n        $(splash, _window.document).remove();\n\n        this._ready.resolve();\n        this.publish('ready', this);\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers:\n\n    private onPageLoaded(info: RouteChangeInfo): void {\n        localize(info.to.el);\n    }\n\n    private onGlobalError(event: ErrorEvent): void {\n        console.error(`[Global Error] ${event.message}, ${event.filename}, ${event.colno}, ${event.error}`);\n    }\n\n    private onGlobalUnhandledRejection(event: PromiseRejectionEvent): void {\n        console.error(`[Global Unhandled Rejection] ${event.reason}`);\n    }\n\n    private onHandleBackKey(event: Event): void {\n        this.publish('backbutton', event);\n    }\n\n    private async onHandleOrientationChanged(/*event: Event*/): Promise<void> {\n        const { requestAnimationFrame, screen } = this._window; // eslint-disable-line @typescript-eslint/unbound-method\n        await waitFrame(1, requestAnimationFrame);\n        this.publish('orientationchange', this.orientation, screen.orientation.angle);\n    }\n}\n\n/** context cache */\nlet _appContext: AppContext | undefined;\n\n/**\n * @en Application context access\n * @ja ã¢ããªã±ã¼ã·ã§ã³ã³ã³ãã­ã¹ãåå¾\n *\n * @example <br>\n *\n * ```ts\n * import { AppContext } from '@cdp/runtime';\n * ```\n *\n * - initial access\n *\n * ```ts\n * const app = AppContext({\n *     main: '#app',\n *     routes: [\n *         { path: '/' },\n *         { path: '/one' },\n *         { path: '/two' }\n *     ],\n * });\n * :\n * ```\n *\n * - from the second time onwards\n *\n * ```ts\n * const app = AppContext();\n * :\n * ```\n *\n * @param options\n *  - `en` init options\n *  - `ja` åæåãªãã·ã§ã³\n */\nexport const AppContext = (options?: AppContextOptions): AppContext => {\n    const opts = getAppConfig(Object.assign({\n        start: false,\n        documentEventBackButton: 'backbutton',\n    }, options) as AppContextOptions);\n\n    if (null == opts.main && null == _appContext) {\n        throw makeResult(RESULT_CODE.ERROR_APP_CONTEXT_NEED_TO_BE_INITIALIZED, 'AppContext should be initialized with options at least once.');\n    }\n\n    if (opts.reset) {\n        _appContext = undefined;\n        clearI18NSettings();\n    }\n\n    if (!_appContext) {\n        _appContext = new Application(opts);\n    }\n    return _appContext;\n};\n","import { ViewConstructionOptions, View } from '@cdp/view';\nimport {\n    Router,\n    Route,\n    RouteChangeInfo,\n    HistoryDirection,\n    Page,\n} from '@cdp/router';\nimport { CssName, hasPartialClassName } from './internal';\n\n/** @internal */ const _properties = Symbol('page-view:properties');\n\n/** @internal */\ninterface Property {\n    route?: Route;\n}\n\n//__________________________________________________________________________________________________//\n\n/**\n * @en Base class definition of [[View]] that can be specified in as [[Page]] of [[Router]].\n * @ja [[Router]] ã® [[Page]] ã«æå®å¯è½ãª [[View]] ã®åºåºã¯ã©ã¹å®ç¾©\n */\nexport abstract class PageView<TElement extends Element = HTMLElement, TEvent extends object = object>\n    extends View<TElement, TEvent> implements Page {\n\n    /** @internal */\n    private readonly [_properties]: Property;\n\n    /**\n     * constructor\n     *\n     * @param route\n     *  - `en` route context\n     *  - `ja` ã«ã¼ãã³ã³ãã­ã¹ã\n     * @param options\n     *  - `en` [[View]] construction options.\n     *  - `ja` [[View]] æ§ç¯ãªãã·ã§ã³\n     */\n    constructor(route?: Route, options?: ViewConstructionOptions<TElement>) {\n        super(options);\n        this[_properties] = { route };\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessor: properties\n\n    /**\n     * @en Check the page is active.\n     * @ja ãã¼ã¸ãã¢ã¯ãã£ãã§ãããå¤å®\n     */\n    get active(): boolean {\n        return hasPartialClassName(this.el, CssName.PAGE_CURRENT);\n    }\n\n    /**\n     * @en Route data associated with the page (public).\n     * @ja ãã¼ã¸ã«ç´ã¥ãã«ã¼ããã¼ã¿ (å¬éç¨)\n     */\n    get ['@route'](): Route | undefined {\n        return this[_properties].route;\n    }\n\n    /**\n     * @en [[Router]] instance\n     * @ja [[Router]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _route(): Route | undefined {\n        return this['@route'];\n    }\n\n    /**\n     * @en [[Router]] instance\n     * @ja [[Router]] ã¤ã³ã¹ã¿ã³ã¹\n     */\n    protected get _router(): Router | undefined {\n        return this[_properties].route?.router;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// event handlers: utilized page event\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n\n    /**\n     * @overridable\n     * @en Triggered when the page's HTMLElement is newly constructed by router.\n     * @ja ãã¼ã¸ã® HTMLElement ãã«ã¼ã¿ã¼ã«ãã£ã¦æ°è¦ã«æ§ç¯ãããã¨ãã«çºç«\n     */\n    protected onPageInit(thisPage: Route): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered immediately after the page's HTMLElement is inserted into the DOM.\n     * @ja ãã¼ã¸ã® HTMLElement ã DOM ã«æ¿å¥ãããç´å¾ã«çºç«\n     */\n    protected onPageMounted(thisPage: Route): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered when the page is ready to be activated after initialization.\n     * @ja åæåå¾, ãã¼ã¸ãã¢ã¯ãã£ãã¼ãå¯è½ãªç¶æã«ãªãã¨çºç«\n     */\n    protected onPageBeforeEnter(thisPage: Route, prevPage: Route | undefined, direction: HistoryDirection, intent?: unknown): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered when the page is fully displayed.\n     * @ja ãã¼ã¸ãå®å¨ã«è¡¨ç¤ºãããã¨çºç«\n     */\n    protected onPageAfterEnter(thisPage: Route, prevPage: Route | undefined, direction: HistoryDirection, intent?: unknown): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered just before the page goes hidden.\n     * @ja ãã¼ã¸ãéè¡¨ç¤ºã«ç§»è¡ããç´åã«çºç«\n     */\n    protected onPageBeforeLeave(thisPage: Route, nextPage: Route, direction: HistoryDirection, intent?: unknown): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered immediately after the page is hidden.\n     * @ja ãã¼ã¸ãéè¡¨ç¤ºã«ãªã£ãç´å¾ã«çºç«\n     */\n    protected onPageAfterLeave(thisPage: Route, nextPage: Route, direction: HistoryDirection, intent?: unknown): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered immediately after the page's HTMLElement is detached from the DOM.\n     * @ja ãã¼ã¸ã® HTMLElement ã DOM ããåãé¢ãããç´å¾ã«çºç«\n     */\n    protected onPageUnmounted(thisPage: Route): void { /* overridable */ }\n\n    /**\n     * @overridable\n     * @en Triggered when the page's HTMLElement is destroyed by the router.\n     * @ja ãã¼ã¸ã® HTMLElement ãã«ã¼ã¿ã¼ã«ãã£ã¦ç ´æ£ãããã¨ãã«çºç«\n     */\n    protected onPageRemoved(thisPage: Route): void { /* overridable */ }\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n\n///////////////////////////////////////////////////////////////////////\n// implements: Page\n\n    /**\n     * @internal\n     * @en Triggered when the page's HTMLElement is newly constructed by router.\n     * @ja ãã¼ã¸ã® HTMLElement ãã«ã¼ã¿ã¼ã«ãã£ã¦æ°è¦ã«æ§ç¯ãããã¨ãã«çºç«\n     */\n    pageInit(info: RouteChangeInfo): void {\n        const { to } = info;\n        this[_properties].route = to;\n        this.onPageInit(to);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page's HTMLElement is inserted into the DOM.\n     * @ja ãã¼ã¸ã® HTMLElement ã DOM ã«æ¿å¥ãããç´å¾ã«çºç«\n     */\n    pageMounted(info: RouteChangeInfo): void {\n        const { to } = info;\n        this[_properties].route = to;\n        const { el } = to;\n        if (el !== this.el as unknown) {\n            this.setElement(el as unknown as TElement);\n        }\n        this.onPageMounted(to);\n    }\n\n    /**\n     * @internal\n     * @en Triggered when the page is ready to be activated after initialization.\n     * @ja åæåå¾, ãã¼ã¸ãã¢ã¯ãã£ãã¼ãå¯è½ãªç¶æã«ãªãã¨çºç«\n     */\n    pageBeforeEnter(info: RouteChangeInfo): void {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = to;\n        this.onPageBeforeEnter(to, from, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered when the page is fully displayed.\n     * @ja ãã¼ã¸ãå®å¨ã«è¡¨ç¤ºãããã¨çºç«\n     */\n    pageAfterEnter(info: RouteChangeInfo): void {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = to;\n        this.onPageAfterEnter(to, from, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered just before the page goes hidden.\n     * @ja ãã¼ã¸ãéè¡¨ç¤ºã«ç§»è¡ããç´åã«çºç«\n     */\n    pageBeforeLeave(info: RouteChangeInfo): void {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = from as Route;\n        this.onPageBeforeLeave(from as Route, to, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page is hidden.\n     * @ja ãã¼ã¸ãéè¡¨ç¤ºã«ãªã£ãç´å¾ã«çºç«\n     */\n    pageAfterLeave(info: RouteChangeInfo): void {\n        const { to, from, direction, intent } = info;\n        this[_properties].route = from as Route;\n        this.onPageAfterLeave(from as Route, to, direction, intent);\n    }\n\n    /**\n     * @internal\n     * @en Triggered immediately after the page's HTMLElement is detached from the DOM.\n     * @ja ãã¼ã¸ã® HTMLElement ã DOM ããåãé¢ãããç´å¾ã«çºç«\n     */\n    pageUnmounted(info: Route): void {\n        this.onPageUnmounted(info);\n    }\n\n    /**\n     * @internal\n     * @en Triggered when the page's HTMLElement is destroyed by the router.\n     * @ja ãã¼ã¸ã® HTMLElement ãã«ã¼ã¿ã¼ã«ãã£ã¦ç ´æ£ãããã¨ãã«çºç«\n     */\n    pageRemoved(info: Route): void {\n        this.release();\n        this[_properties].route = undefined;\n        this.onPageRemoved(info);\n    }\n}\n","/**\n * @en Cursor position constant.\n * @ja ã«ã¼ã½ã«ä½ç½®å®æ°\n */\nexport const enum CursorPos {\n    OUT_OF_RANGE    = -1,\n    CURRENT         = -2,\n}\n\n/**\n * @en Seek expression function type.\n * @ja ã·ã¼ã¯å¼é¢æ°å®ç¾©\n */\nexport type SeekExp<T> = (value: T, index?: number, obj?: T[]) => boolean;\n\n/**\n * @en The class provides cursor interface for Array. <br>\n *     It is different from Iterator interface of es2015, and that provides interface which is similar to DB recordset's one.\n * @ja Array ç¨ã«ã¼ã½ã« I/F ãæä¾ããã¯ã©ã¹ <br>\n *     es2015 ã® Iterator I/F ã¨ã¯ç°ãªããDB recordset ãªãã¸ã§ã¯ãã©ã¤ã¯ãªèµ°æ» I/F ãæä¾ãã\n */\nexport class ArrayCursor<T = any> { // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** @internal å¯¾è±¡ã®éå  */\n    private _array: T[];\n    /** @internal è¦ç´ å¤ã®åé ­ãç¤ºãã¦ããã¨ãã« true  */\n    private _bof: boolean;\n    /** @internal è¦ç´ å¤ã®æ«å°¾ãç¤ºãã¦ããã¨ãã« true */\n    private _eof: boolean;\n    /** @internal ç¾å¨ã® index */\n    private _index: number;\n\n    /**\n     * constructor\n     *\n     * @param array\n     *  - `en` target array\n     *  - `ja` èµ°æ»å¯¾è±¡ã®éåãæå®\n     * @param initialIndex\n     *  - `en` initial index. default: 0\n     *  - `ja` åæåãã index ãæå® default: 0\n     */\n    constructor(array: T[], initialIndex = 0) {\n        this._array = array;\n        this._index = initialIndex;\n        if (this.valid()) {\n            this._bof = this._eof = false;\n        } else {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n            this._eof = false;\n        }\n    }\n\n    /**\n     * @en Reset target array.\n     * @ja å¯¾è±¡ã®åè¨­å®\n     *\n     * @param array\n     *  - `en` target array. default: empty array.\n     *  - `ja` èµ°æ»å¯¾è±¡ã®éåãæå®.   default: ç©ºéå\n     * @param initialIndex\n     *  - `en` initial index. default: CURSOR.OUT_OF_RANGE\n     *  - `ja` åæåãã index ãæå® default: CURSOR.OUT_OF_RANGE\n     */\n    public reset(array: T[] = [], initialIndex: number = CursorPos.OUT_OF_RANGE): ArrayCursor<T> {\n        this._array = array;\n        this._index = initialIndex;\n        if (this.valid()) {\n            this._bof = this._eof = false;\n        } else {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n            this._eof = false;\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// accessors:\n\n    /**\n     * @en Access to current element.\n     * @ja ç¾å¨ã®è¦ç´ ã«ã¢ã¯ã»ã¹\n     */\n    get current(): T | undefined {\n        return this._array[this._index];\n    }\n\n    /**\n     * @en Get current index.\n     * @ja ç¾å¨æãç¤ºãã¦ãã index ãåå¾\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    /**\n     * @en Get target array length.\n     * @ja èµ°æ»å¯¾è±¡ã®è¦ç´ æ°ãåå¾\n     */\n    get length(): number {\n        return this._array.length;\n    }\n\n    /**\n     * @en Judge BOF or not.\n     * @ja è¦ç´ å¤ã®åé ­ãå¤å®\n     */\n    get isBOF(): boolean {\n        return this._bof;\n    }\n\n    /**\n     * @en Judge EOF or not.\n     * @ja è¦ç´ å¤ã®æ«å°¾ãå¤å®\n     */\n    get isEOF(): boolean {\n        return this._eof;\n    }\n\n    /**\n     * @en Access to raw array instance.\n     * @ja èµ°æ»å¯¾è±¡ã«ã¢ã¯ã»ã¹\n     */\n    get array(): T[] {\n        return this._array;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// cursor operation:\n\n    /**\n     * @en Move to first element position.\n     * @ja åé ­è¦ç´ ã¸ç§»å\n     */\n    public moveFirst(): ArrayCursor<T> {\n        this._index = 0;\n        this._bof = this._eof = false;\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Move to last element position.\n     * @ja æ«å°¾è¦ç´ ã¸ç§»å\n     */\n    public moveLast(): ArrayCursor<T> {\n        this._index = this._array.length - 1;\n        this._bof = this._eof = false;\n        if (!this.valid()) {\n            this._eof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Move to next element position.\n     * @ja ã«ã¼ã½ã«ãæ¬¡ã¸ç§»å\n     */\n    public moveNext(): ArrayCursor<T> {\n        if (this._bof) {\n            this._bof = false;\n            this._index = 0;\n        } else {\n            this._index++;\n        }\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._eof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Move to previous element position.\n     * @ja ã«ã¼ã½ã«ãåã¸ç§»å\n     */\n    public movePrevious(): ArrayCursor<T> {\n        if (this._eof) {\n            this._eof = false;\n            this._index = this.length - 1;\n        } else {\n            this._index--;\n        }\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = true;\n        }\n        return this;\n    }\n\n    /**\n     * @en Seek by passed criteria. <br>\n     *     If the operation failed, the cursor position set to EOF.\n     * @ja æå®æ¡ä»¶ã§ã·ã¼ã¯ <br>\n     *     ã·ã¼ã¯ã«å¤±æããå ´åã¯ EOF ç¶æã«ãªã\n     *\n     * @param criteria\n     *  - `en` index or seek expression\n     *  - `ja` index / æ¡ä»¶å¼ãæå®\n     */\n    public seek(criteria: number | SeekExp<T>): ArrayCursor<T> {\n        if ('number' === typeof criteria) {\n            this._index = criteria;\n        } else {\n            this._index = this._array.findIndex(criteria);\n        }\n        if (!this.valid()) {\n            this._index = CursorPos.OUT_OF_RANGE;\n            this._bof = false;\n            this._eof = true;\n        }\n        return this;\n    }\n\n///////////////////////////////////////////////////////////////////////\n// private methods:\n\n    /**\n     * ã«ã¼ã½ã«ãæå¹ãªç¯å²ãç¤ºãã¦ãããå¤å®\n     *\n     * @internal\n     *\n     * @returns true: æå¹ / false: ç¡å¹\n     */\n    private valid(): boolean {\n        return (0 <= this._index && this._index < this._array.length);\n    }\n}\n","import { unescapeHTML } from '@cdp/core-utils';\nimport {\n    JST,\n    TemplateCompileOptions,\n    TemplateEngine,\n} from '@cdp/core-template';\nimport { LoadTemplateOptions, loadTemplateSource } from '@cdp/web-utils';\nexport { clearTemplateCache } from '@cdp/web-utils';\nimport {\n    CompiledTemplate,\n    TemplateBridgeCompileOptions,\n    TemplateBridge,\n} from './bridge';\n\n/**\n * @en Template query type list.\n * @ja ãã³ãã¬ã¼ãåå¾æã«æå®å¯è½ãªåä¸è¦§\n */\nexport interface TemplateQueryTypeList {\n    engine: JST;\n    bridge: CompiledTemplate;\n}\n\n/**\n * @en Template query type definitions.\n * @ja ãã³ãã¬ã¼ãåå¾æã«æå®å¯è½ãªåæå®å­\n */\nexport type TemplateQueryTypes = keyof TemplateQueryTypeList;\n\n/**\n * @en Template query options.\n * @ja ãã³ãã¬ã¼ãåå¾ãªãã·ã§ã³\n */\nexport interface TemplateQueryOptions<T extends TemplateQueryTypes> extends LoadTemplateOptions, TemplateCompileOptions, TemplateBridgeCompileOptions {\n    type?: T;\n}\n\n/**\n * @en Get compiled JavaScript template.\n * @ja ã³ã³ãã¤ã«æ¸ã¿ JavaScript ãã³ãã¬ã¼ãåå¾\n *\n * @param selector\n *  - `en` The selector string of DOM.\n *  - `ja` DOM ã»ã¬ã¯ã¿æå­å\n * @param options\n *  - `en` query options\n *  - `ja` ã¯ã¨ãªãªãã·ã§ã³\n */\nexport async function getTemplate<T extends TemplateQueryTypes = 'engine'>(\n    selector: string, options?: TemplateQueryOptions<T>\n): Promise<TemplateQueryTypeList[T]> {\n    const { type, url, noCache } = Object.assign({ type: 'engine', noCache: false }, options);\n    const src = await loadTemplateSource(selector, { url, noCache });\n    if (!src) {\n        throw new URIError(`cannot specified template resource. { selector: ${selector},  url: ${url} }`);\n    }\n    switch (type) {\n        case 'engine':\n            return TemplateEngine.compile(src instanceof HTMLTemplateElement ? unescapeHTML(src.innerHTML) : src, options) as TemplateQueryTypeList[T];\n        case 'bridge':\n            return TemplateBridge.compile(src, options) as TemplateQueryTypeList[T];\n        default:\n            throw new TypeError(`[type: ${type}] is unknown.`);\n    }\n}\n"],"mappings":"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"}