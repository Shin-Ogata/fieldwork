import { type i18n as i18nextInstance, type FallbackLngObjList as i18nextFallbackLngObjList, type FallbackLng as i18nextFallbackLng, type InterpolationOptions as i18nextInterpolationOptions, type ReactOptions as i18nextReactOptions, type InitOptions as i18nextInitOptions, type TOptionsBase as i18nextTOptionsBase, type TOptions as i18nextTOptions, type ExistsFunction as i18nextExistsFunction, type WithT as i18nextWithT, type TFunction as i18nextTFunction, type Resource as i18nextResource, type ResourceLanguage as i18nextResourceLanguage, type ResourceKey as i18nextResourceKey, type Interpolator as i18nextInterpolator, type ResourceStore as i18nextResourceStore, type Services as i18nextServices, type Module as i18nextModule, type CallbackError as i18nextCallbackError, type ReadCallback as i18nextReadCallback, type MultiReadCallback as i18nextMultiReadCallback, type BackendModule as i18nextBackendModule, type LanguageDetectorModule as i18nextLanguageDetectorModule, type LanguageDetectorAsyncModule as i18nextLanguageDetectorAsyncModule, type PostProcessorModule as i18nextPostProcessorModule, type LoggerModule as i18nextLoggerModule, type I18nFormatModule as i18nextI18nFormatModule, type ThirdPartyModule as i18nextThirdPartyModule, type Modules as i18nextModules, type Newable as i18nextNewable } from 'i18next';
declare const i18n: i18n.i18n;
declare namespace i18n {
    type i18n = i18nextInstance;
    type FallbackLngObjList = i18nextFallbackLngObjList;
    type FallbackLng = i18nextFallbackLng;
    type InterpolationOptions = i18nextInterpolationOptions;
    type ReactOptions = i18nextReactOptions;
    type InitOptions = i18nextInitOptions;
    type TOptionsBase = i18nextTOptionsBase;
    type TOptions<T extends Record<string, unknown> = Record<string, any>> = i18nextTOptions<T>;
    type ExistsFunction<K extends string = string, T extends Record<string, unknown> = Record<string, any>> = i18nextExistsFunction<K, T>;
    type WithT = i18nextWithT;
    type TFunction = i18nextTFunction;
    type Resource = i18nextResource;
    type ResourceLanguage = i18nextResourceLanguage;
    type ResourceKey = i18nextResourceKey;
    type Interpolator = i18nextInterpolator;
    type ResourceStore = i18nextResourceStore;
    type Services = i18nextServices;
    type Module = i18nextModule;
    type CallbackError = i18nextCallbackError;
    type ReadCallback = i18nextReadCallback;
    type MultiReadCallback = i18nextMultiReadCallback;
    type BackendModule<T = Record<string, unknown>> = i18nextBackendModule<T>;
    type LanguageDetectorModule = i18nextLanguageDetectorModule;
    type LanguageDetectorAsyncModule = i18nextLanguageDetectorAsyncModule;
    type PostProcessorModule = i18nextPostProcessorModule;
    type LoggerModule = i18nextLoggerModule;
    type I18nFormatModule = i18nextI18nFormatModule;
    type ThirdPartyModule = i18nextThirdPartyModule;
    type Modules = i18nextModules;
    type Newable<T> = i18nextNewable<T>;
}
export { i18n };
