{
  "app": {
    "common": {
      "back": "Back",
      "reload": "Reload"
    },
    "navigateTo": {
      "class": "To Page Class",
      "factory": "To Page Factory",
      "pageView": "To Page View",
      "settings": "To Settings"
  },
    "pageRoot": {
      "title": "Page: Root"
    },
    "pageClass": {
      "title": "Page: Class",
      "refresh": {
        "title": "Reload Confirmation",
        "lv1": "Level 1: Reload",
        "lv2": "Level 2: DOM reconstruction"
      },
      "transition": {
        "title": "Transition"
      },
      "language": {
        "title": "Change Language",
        "ja": "To Japanese",
        "en": "To English"
      }
    },
    "pageView": {
      "title": "Page: View",
      "functions": {
        "description": "By Function",
        "to": {
          "subflow": "to Sub Flow Examples",
          "template": "to Template Examples"
        }
      }
    },
    "subflow": {
      "title": {
        "pageA-normal": "Page: A",
        "pageA-subflow": "Page: A'",
        "pageB-normal": "Page: B",
        "pageB-subflow": "Page: B'",
        "pageC": "Page: C"
      },
      "description": {
        "pageA-normal": "Sub Flow: Page A (Normal)",
        "pageA-subflow": "Sub Flow: Page A' (in Sub Flow)",
        "pageB-normal": "Sub Flow: Page B (Normal)",
        "pageB-subflow": "Sub Flow: Page B' (in Sub Flow)",
        "pageC": "Sub Flow: Page C"
      },
      "button": {
        "toPageB-normal": "to Page B (Normal)",
        "toPageB-subflow": "to Page B' (Sub Flow)",
        "beginSubFlowDestA": "Sub Flow: ‚Üí [A'] ‚Üí [B'] ‚Üí [A]",
        "beginSubFlowDestB": "Sub Flow: ‚Üí [A'] ‚Üí [B'] ‚Üí [B]",
        "beginSubFlowDestC": "Sub Flow: ‚Üí [A'] ‚Üí [B'] ‚Üí [C]",
        "endSubFlow": "End Sub Flow"
      }
    },
    "template": {
      "root": {
        "title": "Template: Root",
        "description": "Template Examples",
        "navigateTo": {
          "mustache": "To Mustache template (core-template) Example",
          "mustache-bridge": "Mustache template bridge (lit-html) Example"
        }
      },
      "mustache": {
        "title": "Mustache",
        "description": "Mustache template (core-template) Example",
        "input": {
          "description": "‚Äª`input` is not suitable for declarative implementation as it updates all templates"
        }
      },
      "mustache-bridge": {
        "title": "Mustache Bridge (lit-html)",
        "description": "lit-html bridge using Mustache templates Example",
        "input": {
          "description": "‚Äª`input` can be implemented declaratively to incrementally update templates"
        }
      },
      "content": {
        "state": {
          "label": "Count: ",
          "button": {
            "reset": "Reset"
          }
        },
        "effect": {
          "label": "Clicked: ",
          "button": {
            "label": "Click me üôá‚Äç‚ôÇÔ∏è"
          }
        },
        "interval": {
          "label": "Time: ",
          "button": {
            "start": "Start Interval",
            "stop": "Stop Interval"
          }
        },
        "input": {
          "label": "Input: ",
          "placeholder": "Please input text"
        },
        "list": {
          "label": "Num of Elements: ",
          "column": {
            "id": "ID",
            "score": "Score"
          },
          "button": {
            "clear": "Clear"
          },
          "noItem": "Please add list item"
        }
      }
    }
  }
}
